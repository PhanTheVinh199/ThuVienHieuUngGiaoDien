[
  {
    "category": "hover",
    "effects": [
      {
        "id": 1,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Hover Gradient Underline",
        "link": "",
        "html": "<span class='hover-gradient-underline'> Hover Me</span>",
        "css": ".hover-gradient-underline { font-size: 24px; font-weight: bold; color: #333; position: relative; cursor: pointer; display: inline-block; } .hover-gradient-underline::after { content: ''; position: absolute; width: 0; height: 3px; bottom: -5px; left: 0; background: linear-gradient(90deg, #ff6a00, #ee0979); transition: width 0.3s ease; border-radius: 2px; } .hover-gradient-underline:hover::after { width: 100%; }",
        "js": ""
      },
      {
        "id": 2,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Letter Spacing Expand",
        "link": "",
        "html": "<span class='hover-letter-spacing'>Hover Me</span>",
        "css": ".hover-letter-spacing { font-size: 28px; font-weight: 600; color: #333; cursor: pointer; transition: letter-spacing 0.3s ease; display: inline-block; } .hover-letter-spacing:hover { letter-spacing: 8px; color: #ff6347;",
        "js": ""
      },
      {
        "id": 3,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Text Slide Up Fade",
        "link": "",
        "html": "<span class='hover-slide-up' data-text='Hover Me'>Hover Me</span>",
        "css": ".hover-slide-up { font-size: 30px; font-weight: bold; position: relative; color: #222; cursor: pointer; overflow: hidden; display: inline-block; } .hover-slide-up::before { content: attr(data-text); position: absolute; left: 0; top: 100%; width: 100%; color: #ff4081; transition: top 0.3s ease; } .hover-slide-up:hover::before { top: 0; } .hover-slide-up:hover { color: transparent; }",
        "js": ""
      },
      {
        "id": 4,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Text Sharpens on Hover",
        "link": "",
        "html": "<span class='hover-blur'>Hover Me</span>",
        "css": ".hover-blur { font-size: 30px; font-weight: 700; color: #222; cursor: pointer; transition: filter 0.3s ease; display: inline-block; filter: blur(3px); } .hover-blur:hover { filter: blur(0px); }",
        "js": ""
      },
      {
        "id": 5,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Text Blur on Hover",
        "link": "",
        "html": "<span class='hover-blur'>Hover Me</span>",
        "css": ".hover-blur { font-size: 30px; font-weight: 700; color: #222; cursor: pointer; transition: filter 0.3s ease; display: inline-block; } .hover-blur:hover { filter: blur(3px); }",
        "js": ""
      },
      {
        "id": 6,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Rainbow Text Animation",
        "link": "",
        "html": "<span class='hover-rainbow'>Hover Me</span>",
        "css": ".hover-rainbow { font-size: 36px; font-weight: bold; background: linear-gradient(90deg, red, orange, yellow, green, blue, indigo, violet); background-size: 400%; -webkit-background-clip: text; -webkit-text-fill-color: transparent; cursor: pointer; transition: background-position 0.5s ease; display: inline-block; } .hover-rainbow:hover { animation: rainbow 2s linear infinite; } @keyframes rainbow { 0% {background-position: 0%;} 100% {background-position: 400%;} }",
        "js": ""
      },
      {
        "id": 7,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Wave Text Effect",
        "link": "",
        "html": "<div class='wave'> <span>H</span><span>o</span><span>v</span><span>e</span><span>r </span><span>M</span><span>e</span> </div>",
        "css": ".wave { font-size: 36px; font-weight: 700; color: #00bcd4; display: inline-block; position: relative; } .wave span { display: inline-block; animation-name: waveAnim; animation-duration: 1.2s; animation-iteration-count: infinite; animation-timing-function: ease-in-out; animation-play-state: paused; } .wave span:nth-child(odd) { animation-delay: 0s; } .wave span:nth-child(even) { animation-delay: 0.6s; } .wave:hover span { animation-play-state: running; } @keyframes waveAnim { 0%, 100% { transform: translateY(0); } 50% { transform: translateY(-15px); } }",
        "js": ""
      },
      {
        "id": 8,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Glitch Effect",
        "link": "",
        "html": "<span class='glitch' data-text='Hover Me'>Hover Me</span>",
        "css": ".glitch { position: relative; cursor: pointer; font-size: 38px; font-weight: 800; color: #000; user-select: none; display: inline-block; } .glitch::before, .glitch::after { content: attr(data-text); position: absolute; left: 0; top: 0; width: 100%; height: 100%; overflow: hidden; clip: rect(0, 900px, 0, 0); animation: none; } .glitch:hover::before { left: 2px; text-shadow: -2px 0 red; animation: glitch-anim 2s infinite linear alternate-reverse; } .glitch:hover::after { left: -2px; text-shadow: -2px 0 blue; animation: glitch-anim2 2.5s infinite linear alternate-reverse; } @keyframes glitch-anim { 0% { clip: rect(0, 9999px, 0, 0); } 10% { clip: rect(20px, 9999px, 50px, 0); } 20% { clip: rect(0, 9999px, 0, 0); } 30% { clip: rect(25px, 9999px, 45px, 0); } 40% { clip: rect(0, 9999px, 0, 0); } 100% { clip: rect(0, 9999px, 0, 0); } } @keyframes glitch-anim2 { 0% { clip: rect(0, 9999px, 0, 0); } 15% { clip: rect(45px, 9999px, 70px, 0); } 30% { clip: rect(0, 9999px, 0, 0); } 45% { clip: rect(50px, 9999px, 75px, 0); } 60% { clip: rect(0, 9999px, 0, 0); } 100% { clip: rect(0, 9999px, 0, 0); } }",
        "js": ""
      },
      {
        "id": 9,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Color Spectrum Wave",
        "link": "",
        "html": "<div class='hover-box color-wave'>Hover Me</div>",
        "css": "@import url('https://fonts.googleapis.com/css2?family=Rubik+Moonrocks&display=swap'); body { background: #121212; color: #eee; font-family: 'Rubik Moonrocks', cursive, Arial, sans-serif; max-width: 700px; margin: 50px auto; padding: 20px; display: flex; flex-direction: column; gap: 35px; user-select: none; } .hover-box { background: #222; border-radius: 15px; padding: 20px; text-align: center; cursor: pointer; font-size: 44px; font-weight: 900; position: relative; overflow: hidden; color: #eee; } .color-wave { background: linear-gradient(270deg, #ff0055, #00ffff, #ff00cc, #00ffcc, #ff0055); background-size: 1000% 1000%; -webkit-background-clip: text; -webkit-text-fill-color: transparent; animation: wave-spectrum 7s linear infinite paused; user-select: none; } .color-wave:hover { animation-play-state: running; } @keyframes wave-spectrum { 0% { background-position: 0% 50%; } 100% { background-position: 100% 50%; } }",
        "js": ""
      },
      {
        "id": 10,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Flip Text",
        "link": "",
        "html": "<div class='flip-text'><span>Hover Me</span></div>",
        "css": ".flip-text { perspective: 600px; cursor: pointer; font-size: 38px; display: inline-block; color: black; } .flip-text span { display: inline-block; transition: transform 0.5s ease; transform-origin: bottom center; } .flip-text:hover span { transform: rotateX(360deg); color: #ff4081; }",
        "js": ""
      },
      {
        "id": 11,
        "author": "VanBao",
        "type": "Text",
        "title": "Underline Slide Smooth",
        "link": "",
        "html": "<a class='hover-text1'>Underline Slide Smooth</a>",
        "css": ".hover-text1 { position: relative; color: #212121; text-decoration: none; font-weight: 600; cursor: pointer; } .hover-text1::after { content: ''; position: absolute; left: 0; bottom: -4px; height: 3px; width: 0; background: linear-gradient(90deg, #ff6a00, #ee0979); border-radius: 2px; transition: width 0.4s cubic-bezier(0.4, 0, 0.2, 1); } .hover-text1:hover::after { width: 100%; }",
        "js": ""
      },
      {
        "id": 12,
        "author": "VanBao",
        "type": "Text",
        "title": "Smooth Color Fade",
        "link": "",
        "html": "<span class='hover-text2'>Smooth Color Fade</span>",
        "css": ".hover-text2 { color: #374151; font-weight: 500; transition: color 0.4s ease-in-out; cursor: pointer; } .hover-text2:hover { color: #6366f1; }",
        "js": ""
      },
      {
        "id": 13,
        "author": "VanBao",
        "type": "Text",
        "title": "Subtle Glow",
        "link": "",
        "html": "<span class='hover-text3'>Subtle Glow</span>",
        "css": ".hover-text3 { color: #111827; font-weight: 600; transition: text-shadow 0.5s ease-in-out; cursor: pointer; } .hover-text3:hover { text-shadow: 0 0 6px #8b5cf6, 0 0 12px #a78bfa; }",
        "js": ""
      },
      {
        "id": 14,
        "author": "VanBao",
        "type": "Text",
        "title": "Letter Spacing Expand",
        "link": "",
        "html": "<span class='hover-text4'>Letter Spacing Expand</span>",
        "css": ".hover-text4 { font-weight: 500; color: #374151; transition: letter-spacing 0.3s ease; cursor: pointer; } .hover-text4:hover { letter-spacing: 4px; }",
        "js": ""
      },
      {
        "id": 15,
        "author": "VanBao",
        "type": "Text",
        "title": "Scale Up & Shadow",
        "link": "",
        "html": "<span class='hover-text5'>Scale Up & Shadow</span>",
        "css": ".hover-text5 { display: inline-block; color: #1f2937; font-weight: 600; transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), text-shadow 0.3s ease; cursor: pointer; } .hover-text5:hover { transform: scale(1.1); text-shadow: 2px 4px 6px rgba(0,0,0,0.1); }",
        "js": ""
      },
      {
        "id": 16,
        "author": "VanBao",
        "type": "Text",
        "title": "Background Highlight Gradient",
        "link": "",
        "html": "<span class='hover-text6'>Background Highlight Gradient</span>",
        "css": ".hover-text6 { position: relative; color: #111827; font-weight: 600; cursor: pointer; background: linear-gradient(120deg, transparent 0%, transparent 50%, #fbbf24 50%, #fbbf24 100%); background-size: 200% 100%; background-position: 100% 0; transition: background-position 0.4s ease; } .hover-text6:hover { background-position: 0 0; -webkit-background-clip: text; -webkit-text-fill-color: transparent; }",
        "js": ""
      },
      {
        "id": 17,
        "author": "VanBao",
        "type": "Text",
        "title": "Skewed Tilt",
        "link": "",
        "html": "<span class='hover-text7'>Skewed Tilt</span>",
        "css": ".hover-text7 { display: inline-block; color: #4b5563; font-weight: 600; transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1); cursor: pointer; } .hover-text7:hover { transform: skew(-8deg, 2deg); color: #ef4444; }",
        "js": ""
      },
      {
        "id": 18,
        "author": "VanBaoo",
        "type": "Text",
        "title": "Gradient Text Fill",
        "link": "",
        "html": "<span class='hover-text8'>Gradient Text Fill</span>",
        "css": ".hover-text8 { font-weight: 700; background: linear-gradient(90deg, #2563eb, #d946ef); background-clip: text; -webkit-background-clip: text; color: transparent; transition: background-position 0.5s ease; background-size: 200% 100%; background-position: left center; cursor: pointer; } .hover-text8:hover { background-position: right center; }",
        "js": ""
      },
      {
        "id": 19,
        "author": "VanBao",
        "type": "Text",
        "title": "Bottom Border Expand",
        "link": "",
        "html": "<span class='hover-text9'>Bottom Border Expand</span>",
        "css": ".hover-text9 { border-bottom: 2px solid transparent; font-weight: 600; cursor: pointer; transition: border-color 0.3s ease; color: #374151; } .hover-text9:hover { border-color: #10b981; }",
        "js": ""
      },
      {
        "id": 20,
        "author": "VanBao",
        "type": "Text",
        "title": "Flip 3D Text",
        "link": "",
        "html": "<span class='hover-text10'>Flip 3D Text</span>",
        "css": ".hover-text10 { display: inline-block; font-weight: 700; perspective: 800px; cursor: pointer; } .hover-text10:hover { animation: flip360 0.6s forwards; } @keyframes flip360 { 0% { transform: rotateY(0deg); } 100% { transform: rotateY(360deg); } }",
        "js": ""
      },
      {
        "id": 21,
        "author": "VanBao",
        "type": "Button",
        "title": "Smooth Background Gradient",
        "link": "",
        "html": "<button class='hover-btn1'>Smooth Gradient</button>",
        "css": ".hover-btn1 { padding: 12px 28px; font-weight: 600; font-size: 16px; border: none; border-radius: 6px; cursor: pointer; background: linear-gradient(90deg, #4f46e5, #6366f1); color: white; transition: background-position 0.5s ease; background-size: 200% 100%; background-position: left center; } .hover-btn1:hover { background-position: right center; }",
        "js": ""
      },
      {
        "id": 22,
        "author": "VanBao",
        "type": "Button",
        "title": "Border Slide In",
        "link": "",
        "html": "<button class='hover-btn2'>Border Slide In</button>",
        "css": ".hover-btn2 { position: relative; padding: 12px 30px; font-weight: 600; font-size: 16px; background: transparent; color: #4f46e5; border: 2px solid #4f46e5; border-radius: 6px; cursor: pointer; overflow: hidden; transition: color 0.3s ease; } .hover-btn2::before { content: ''; position: absolute; top: 0; left: -100%; width: 100%; height: 100%; background: #4f46e5; transition: left 0.3s ease; z-index: -1; } .hover-btn2:hover { color: white; } .hover-btn2:hover::before { left: 0; }",
        "js": ""
      },
      {
        "id": 23,
        "author": "VanBao",
        "type": "Button",
        "title": "Shadow Lift",
        "link": "",
        "html": "<button class='hover-btn3'>Shadow Lift</button>",
        "css": ".hover-btn3 { padding: 12px 28px; font-weight: 600; font-size: 16px; background-color: #059669; color: white; border: none; border-radius: 6px; cursor: pointer; transition: box-shadow 0.3s ease, transform 0.3s ease; } .hover-btn3:hover { box-shadow: 0 10px 20px rgba(5, 150, 105, 0.4); transform: translateY(-3px); }",
        "js": ""
      },
      {
        "id": 24,
        "author": "VanBaoo",
        "type": "Button",
        "title": "Fill From Left",
        "link": "",
        "html": "<button class='hover-btn4'>Fill From Left</button>",
        "css": ".hover-btn4 { position: relative; padding: 12px 30px; font-weight: 600; font-size: 16px; background: transparent; border: 2px solid #f59e0b; color: #f59e0b; border-radius: 6px; cursor: pointer; overflow: hidden; transition: color 0.3s ease; } .hover-btn4::before { content: ''; position: absolute; top: 0; left: 0; width: 0; height: 100%; background: #f59e0b; transition: width 0.3s ease; z-index: -1; } .hover-btn4:hover { color: white; } .hover-btn4:hover::before { width: 100%; }",
        "js": ""
      },
      {
        "id": 25,
        "author": "VanBao",
        "type": "Button",
        "title": "3D Push",
        "link": "",
        "html": "<button class='hover-btn5'>3D Push</button>",
        "css": ".hover-btn5 { padding: 12px 28px; font-weight: 700; font-size: 16px; background-color: #ef4444; color: white; border: none; border-radius: 8px; cursor: pointer; box-shadow: 0 5px #b91c1c; transition: transform 0.2s ease; } .hover-btn5:active { transform: translateY(4px); box-shadow: 0 1px #b91c1c; }",
        "js": ""
      },
      {
        "id": 26,
        "author": "VanBao",
        "type": "Button",
        "title": "Glow Neon",
        "link": "",
        "html": "<button class='hover-btn6'>Glow Neon</button>",
        "css": ".hover-btn6 { padding: 12px 28px; font-weight: 600; font-size: 16px; background-color: #0ea5e9; color: white; border: none; border-radius: 6px; cursor: pointer; box-shadow: 0 0 8px #0ea5e9; transition: box-shadow 0.4s ease; } .hover-btn6:hover { box-shadow: 0 0 20px #38bdf8, 0 0 30px #0ea5e9; }",
        "js": ""
      },
      {
        "id": 27,
        "author": "VanBao",
        "type": "Button",
        "title": "Rotate Scale",
        "link": "",
        "html": "<button class='hover-btn7'>Rotate Scale</button>",
        "css": ".hover-btn7 { padding: 12px 28px; font-weight: 600; font-size: 16px; background-color: #8b5cf6; color: white; border: none; border-radius: 6px; cursor: pointer; transition: transform 0.4s ease; } .hover-btn7:hover { transform: scale(1.1) rotate(-5deg); }",
        "js": ""
      },
      {
        "id": 28,
        "author": "VanBao",
        "type": "Button",
        "title": "Pulse Shadow",
        "link": "",
        "html": "<button class='hover-btn8'>Pulse Shadow</button>",
        "css": ".hover-btn8 { padding: 12px 28px; font-weight: 700; font-size: 16px; background-color: #ec4899; color: white; border: none; border-radius: 10px; cursor: pointer; transition: box-shadow 0.4s ease; } .hover-btn8:hover { animation: pulseShadow 1.2s infinite; } @keyframes pulseShadow { 0%, 100% { box-shadow: 0 0 10px #ec4899; } 50% { box-shadow: 0 0 25px #f472b6; } }",
        "js": ""
      },
      {
        "id": 29,
        "author": "VanBao",
        "type": "Button",
        "title": "Slide Up Border",
        "link": "",
        "html": "<button class='hover-btn9'>Slide Up Border</button>",
        "css": ".hover-btn9 { position: relative; padding: 12px 28px; font-weight: 600; font-size: 16px; background: transparent; border: 2px solid #10b981; color: #10b981; border-radius: 6px; cursor: pointer; overflow: hidden; transition: color 0.3s ease; } .hover-btn9::after { content: ''; position: absolute; bottom: -100%; left: 0; width: 100%; height: 100%; background-color: #10b981; transition: bottom 0.3s ease; z-index: -1; } .hover-btn9:hover { color: white; } .hover-btn9:hover::after { bottom: 0; }",
        "js": ""
      },
      {
        "id": 30,
        "author": "VanBao",
        "type": "Button",
        "title": "Rotate Border",
        "link": "",
        "html": "<button class='hover-btn10'>Rotate Border</button>",
        "css": ".hover-btn10 { padding: 12px 28px; font-weight: 700; font-size: 16px; background-color: #2563eb; color: white; border: 3px solid transparent; border-radius: 8px; cursor: pointer; position: relative; transition: border-color 0.4s ease; } .hover-btn10:hover { border-color: #60a5fa; transform: rotate(5deg); }",
        "js": ""
      },
      {
        "id": 31,
        "author": "Phan Vĩnh",
        "type": "Button",
        "title": "Button đổi màu nền",
        "link": "",
        "html": "<button class='btn-color'>Hover me</button>",
        "css": ".btn-color { padding: 12px 30px; background-color: #3498db; color: white; border: none; cursor: pointer; border-radius: 6px; transition: background-color 0.3s ease; } .btn-color:hover { background-color: #2ecc71; }",
        "js": ""
      },
      {
        "id": 32,
        "author": "Phan Vĩnh",
        "type": "Button",
        "title": "Button phóng to khi hover",
        "link": "",
        "html": "<button class='btn-scale'>Hover me</button>",
        "css": ".btn-scale { padding: 12px 30px; background-color: #e74c3c; color: white; border: none; cursor: pointer; border-radius: 6px; transition: transform 0.3s ease; } .btn-scale:hover { transform: scale(1.1); }",
        "js": ""
      },
      {
        "id": 33,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button viền động chạy xung quanh",
        "link": "",
        "html": "<button class='btn-border-anim'>Hover me</button>",
        "css": ".btn-border-anim { position: relative; padding: 12px 30px; background: transparent; color: #2980b9; border: 2px solid #2980b9; cursor: pointer; font-weight: bold; overflow: hidden; border-radius: 6px; } .btn-border-anim::before { content: ''; position: absolute; top: 0; left: -100%; width: 100%; height: 100%; background: #2980b9; transition: left 0.4s ease; z-index: -1; border-radius: 6px; } .btn-border-anim:hover::before { left: 0; } .btn-border-anim:hover { color: white; }",
        "js": ""
      },
      {
        "id": 34,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button chữ trượt ngang khi hover",
        "link": "",
        "html": "<button class='btn-text-slide'><span>Hover me</span></button>",
        "css": ".btn-text-slide { overflow: hidden; padding: 12px 30px; background: #27ae60; border: none; border-radius: 6px; cursor: pointer; color: white; font-weight: bold; } .btn-text-slide span { display: inline-block; transition: transform 0.3s ease; } .btn-text-slide:hover span { transform: translateX(10px); }",
        "js": ""
      },
      {
        "id": 35,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button lật 3D",
        "link": "",
        "html": "<button class='btn-flip'> <span class='front'>Hover me</span> <span class='back'>Clicked!</span> </button>",
        "css": ".btn-flip { position: relative; width: 140px; height: 50px; perspective: 600px; cursor: pointer; border: none; background: transparent; } .btn-flip span { position: absolute; width: 100%; height: 100%; line-height: 50px; text-align: center; color: white; font-weight: bold; border-radius: 6px; backface-visibility: hidden; transition: transform 0.6s ease; } .btn-flip .front { background-color: #2980b9; transform: rotateY(0deg); } .btn-flip .back { background-color: #27ae60; transform: rotateY(180deg); } .btn-flip:hover .front { transform: rotateY(-180deg); } .btn-flip:hover .back { transform: rotateY(0deg); }",
        "js": ""
      },
      {
        "id": 36,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button bóng đổ nâng lên khi hover",
        "link": "",
        "html": "<button class='btn-shadow-lift'>Hover me</button>",
        "css": ".btn-shadow-lift { padding: 12px 30px; background-color: #c0392b; border: none; color: white; cursor: pointer; border-radius: 6px; box-shadow: 0 5px 0 #992d22; transition: transform 0.2s ease, box-shadow 0.2s ease; font-weight: bold; } .btn-shadow-lift:hover { transform: translateY(-5px); box-shadow: 0 15px 20px rgba(153, 45, 34, 0.5); }",
        "js": ""
      },
      {
        "id": 37,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button bóng sáng chạy ngang",
        "link": "",
        "html": "<button class='btn-light-sweep'>Hover me</button>",
        "css": ".btn-light-sweep { position: relative; padding: 12px 30px; background-color: #27ae60; border: none; color: white; cursor: pointer; font-weight: bold; border-radius: 6px; overflow: hidden; } .btn-light-sweep::before { content: ''; position: absolute; top: 0; left: -75%; width: 50%; height: 100%; background: linear-gradient(120deg, transparent, rgba(255,255,255,0.5), transparent); transform: skewX(-25deg); transition: left 0.5s ease; } .btn-light-sweep:hover::before { left: 125%; }",
        "js": ""
      },
      {
        "id": 38,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button kiểu bật tắt bóng đổ",
        "link": "",
        "html": "<button class='btn-toggle-shadow'>Hover me</button>",
        "css": ".btn-toggle-shadow { padding: 12px 30px; background-color: #c0392b; color: white; font-weight: bold; border: none; border-radius: 6px; cursor: pointer; box-shadow: 0 5px 0 #922b21; transition: box-shadow 0.3s ease; } .btn-toggle-shadow:hover { box-shadow: none; }",
        "js": ""
      },
      {
        "id": 39,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button phóng to sau đó thu nhỏ",
        "link": "",
        "html": "<button class='btn-pulse'>Hover me</button>",
        "css": ".btn-pulse { padding: 12px 30px; background-color: #2980b9; color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: bold; transition: transform 0.2s ease; } .btn-pulse:hover { animation: pulseScale 0.6s forwards; } @keyframes pulseScale { 50% { transform: scale(1.15); } 100% { transform: scale(1); } }",
        "js": ""
      },
      {
        "id": 40,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button xuất hiện viền phát sáng",
        "link": "",
        "html": "<button class='btn-glow-border'>Hover me</button>",
        "css": ".btn-glow-border { padding: 12px 30px; background-color: #34495e; color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: bold; box-shadow: inset 0 0 0 0 #1abc9c; transition: box-shadow 0.3s ease; } .btn-glow-border:hover { box-shadow: inset 0 0 10px 3px #1abc9c; }",
        "js": ""
      },
      {
        "id": 41,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button biến hình từ tròn sang vuông",
        "link": "",
        "html": "<button class='btn-round-to-square'>Hover me</button>",
        "css": ".btn-round-to-square { padding: 12px 30px; background-color: #e67e22; color: white; border: none; cursor: pointer; font-weight: bold; border-radius: 50px; transition: border-radius 0.3s ease; } .btn-round-to-square:hover { border-radius: 6px; }",
        "js": ""
      },
      {
        "id": 42,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button chữ nổi bật khi hover",
        "link": "",
        "html": "<button class='btn-text-glow'>Hover me</button>",
        "css": ".btn-text-glow { padding: 12px 30px; background-color: #2980b9; border: none; color: white; font-weight: bold; cursor: pointer; border-radius: 6px; transition: text-shadow 0.3s ease; } .btn-text-glow:hover { text-shadow: 0 0 10px rgba(255,255,255,0.9); }",
        "js": ""
      },
      {
        "id": 43,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button trượt nền ngang",
        "link": "",
        "html": "<button class='btn-bg-slide'>Hover me</button>",
        "css": ".btn-bg-slide { padding: 12px 30px; background: linear-gradient(90deg, #3498db 50%, #2ecc71 50%); background-size: 200% 100%; background-position: left bottom; color: white; border: none; border-radius: 6px; font-weight: bold; cursor: pointer; transition: background-position 0.3s ease; } .btn-bg-slide:hover { background-position: right bottom; }",
        "js": ""
      },
      {
        "id": 44,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button nổi bật với viền bóng đổ ngoài",
        "link": "",
        "html": "<button class='btn-glow'>Hover me</button>",
        "css": ".btn-glow { padding: 12px 30px; background-color: #8e44ad; border: none; color: white; font-weight: bold; border-radius: 6px; cursor: pointer; box-shadow: 0 0 10px 0 transparent; transition: box-shadow 0.3s ease; } .btn-glow:hover { box-shadow: 0 0 15px 5px #8e44ad; }",
        "js": ""
      },
      {
        "id": 45,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button bật nhấp nháy",
        "link": "",
        "html": "<button class='btn-blink'>Hover me</button>",
        "css": ".btn-blink { padding: 12px 30px; background-color: #34495e; color: white; border: none; font-weight: bold; cursor: pointer; border-radius: 6px; } .btn-blink:hover { animation: blinkAnim 1s linear infinite; } @keyframes blinkAnim { 0%, 100% { opacity: 1; } 50% { opacity: 0.5; } }",
        "js": ""
      },
      {
        "id": 46,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Hiệu ứng sóng lan tỏa khi hover",
        "link": "",
        "html": "<button class='btn-ripple'>Click me</button>",
        "css": ".btn-ripple { position: relative; overflow: hidden; padding: 12px 30px; background-color: #e74c3c; border: none; color: white; cursor: pointer; border-radius: 6px; font-weight: bold; } .btn-ripple::after { content: ''; position: absolute; border-radius: 50%; width: 100%; height: 100%; top: 0; left: 0; pointer-events: none; background: rgba(255, 255, 255, 0.4); opacity: 0; transform: scale(0); transition: transform 0.5s ease, opacity 1s ease; } .btn-ripple:hover::after { opacity: 1; transform: scale(2); transition:  transform 0.5s ease, opacity 1s ease; }",
        "js": ""
      },
      {
        "id": 47,
        "author": "Thanh Tự",
        "type": "Button",
        "title": " Button: Viền trong xuất hiện từ ngoài vào",
        "link": "",
        "html": "<button class='btn-inner-border'>Hover me</button>",
        "css": ".btn-inner-border { position: relative; padding: 12px 30px; background-color: #34495e; color: white; border: none; cursor: pointer; border-radius: 6px; overflow: hidden; } .btn-inner-border::before { content: ''; position: absolute; top: 6px; left: 6px; right: 6px; bottom: 6px; border: 2px solid #1abc9c; opacity: 0; transform: scale(0.5); transition: opacity 0.3s ease, transform 0.3s ease; border-radius: 4px; pointer-events: none; } .btn-inner-border:hover::before { opacity: 1; transform: scale(1); }",
        "js": ""
      },
      {
        "id": 48,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button: Nút rung nhẹ ",
        "link": "",
        "html": "<button class='btn-vibrate'>Hover me</button>",
        "css": ".btn-vibrate { padding: 12px 30px; background-color: #c0392b; color: white; border: none; cursor: pointer; border-radius: 6px; font-weight: bold; transition: transform 0.1s ease; } .btn-vibrate:hover { animation: vibrate 0.3s linear infinite; } @keyframes vibrate { 0% { transform: translate(0); } 20% { transform: translate(-2px, 2px); } 40% { transform: translate(-2px, -2px); } 60% { transform: translate(2px, 2px); } 80% { transform: translate(2px, -2px); } 100% { transform: translate(0); } }",
        "js": ""
      },
      {
        "id": 49,
        "author": "Thanh Tự",
        "type": "Button",
        "title": " Box: Viền đổi màu chuyển dần",
        "link": "",
        "html": "<div class='box-gradient-border'>Hover me</div>",
        "css": ".box-gradient-border { width: 280px; height: 50px; background-color: white; color: #333; font-size: 22px; line-height: 50px; text-align: center; border-radius: 10px; cursor: pointer; border: 4px solid; border-image-slice: 1; border-width: 4px; border-image-source: linear-gradient(45deg, #f39c12, #8e44ad); transition: border-image-source 0.5s ease; margin: 20px auto; } .box-gradient-border:hover { border-image-source: linear-gradient(45deg, #27ae60, #2980b9); }",
        "js": ""
      },
      {
        "id": 50,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button đổ bóng đổi theo vị trí chuột",
        "link": "",
        "html": "<button class='btn-shadow-follow'>Hover me</button>",
        "css": ".btn-shadow-follow { padding: 12px 30px; background-color: #34495e; color: white; border: none; cursor: pointer; font-weight: bold; border-radius: 6px; transition: box-shadow 0.1s ease; position: relative; overflow: hidden; }",
        "js": "const btnShadow = document.querySelector('.btn-shadow-follow'); btnShadow.addEventListener('mousemove', e => { const rect = btnShadow.getBoundingClientRect(); const x = e.clientX - rect.left - rect.width / 2; const y = e.clientY - rect.top - rect.height / 2; btnShadow.style.boxShadow = `${x / 5}px ${y / 5}px 15px rgba(0,0,0,0.5)`; }); btnShadow.addEventListener('mouseleave', () => { btnShadow.style.boxShadow = ''; });"
      },
      {
        "id": 51,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button lật mặt (flip) theo hover",
        "link": "",
        "html": "<div class='btn-flip-js'> <div class='front'>Hover me</div> <div class='back'>Clicked!</div> </div>",
        "css": ".btn-flip-js { width: 140px; height: 50px; perspective: 600px; cursor: pointer; position: relative; } .btn-flip-js > div { position: absolute; width: 100%; height: 100%; line-height: 50px; text-align: center; color: white; font-weight: bold; border-radius: 6px; backface-visibility: hidden; transition: transform 0.6s ease; } .btn-flip-js .front { background-color: #2980b9; transform: rotateY(0deg); } .btn-flip-js .back { background-color: #27ae60; transform: rotateY(180deg); }",
        "js": "const btnFlip = document.querySelector('.btn-flip-js'); btnFlip.addEventListener('mouseenter', () => { btnFlip.querySelector('.front').style.transform = 'rotateY(-180deg)'; btnFlip.querySelector('.back').style.transform = 'rotateY(0deg)'; }); btnFlip.addEventListener('mouseleave', () => { btnFlip.querySelector('.front').style.transform = 'rotateY(0deg)'; btnFlip.querySelector('.back').style.transform = 'rotateY(180deg)'; });"
      },
      {
        "id": 52,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button hiệu ứng gợn sóng ",
        "link": "",
        "html": "<button class='btn-wave-pulse'>Hover me</button>",
        "css": ".btn-wave-pulse { position: relative; padding: 12px 30px; background: #e74c3c; border: none; color: white; border-radius: 6px; cursor: pointer; font-weight: bold; overflow: hidden; } .wave { position: absolute; border-radius: 50%; background: rgba(255,255,255,0.5); width: 100%; height: 100%; top: 0; left: 0; transform: scale(0); animation: wavePulse 1.2s infinite; pointer-events: none; opacity: 0; transition: opacity 0.3s ease; } .btn-wave-pulse:hover .wave { opacity: 1; } @keyframes wavePulse { to { transform: scale(2.5); opacity: 0; } }",
        "js": "const btnWavePulse = document.querySelector('.btn-wave-pulse'); const waveEl = document.createElement('span'); waveEl.classList.add('wave'); btnWavePulse.appendChild(waveEl);"
      },
      {
        "id": 53,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button theo dõi vị trí chuột",
        "link": "",
        "html": "<button class='btn-glow-cursor'>Hover me</button>",
        "css": ".btn-glow-cursor { position: relative; padding: 12px 30px; background: #2980b9; color: white; border: none; border-radius: 6px; cursor: pointer; overflow: hidden; font-weight: bold; } .glow-circle { position: absolute; width: 100px; height: 100px; background: rgba(255,255,255,0.3); border-radius: 50%; pointer-events: none; transform: translate(-50%, -50%); transition: top 0.1s, left 0.1s; opacity: 0; }",
        "js": "const btnGlowCursor = document.querySelector('.btn-glow-cursor'); const glowCircle = document.createElement('div'); glowCircle.classList.add('glow-circle'); btnGlowCursor.appendChild(glowCircle); btnGlowCursor.addEventListener('mousemove', e => { const rect = btnGlowCursor.getBoundingClientRect(); glowCircle.style.top = `${e.clientY - rect.top}px`; glowCircle.style.left = `${e.clientX - rect.left}px`; glowCircle.style.opacity = '1'; }); btnGlowCursor.addEventListener('mouseleave', () => { glowCircle.style.opacity = '0'; });"
      },
      {
        "id": 54,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button hiệu ứng “nhảy”",
        "link": "",
        "html": "<button class='btn-jump'>Hover me</button>",
        "css": ".btn-jump { padding: 12px 30px; background: #e67e22; color: white; border: none; border-radius: 6px; font-weight: bold; cursor: pointer; transition: transform 0.2s ease; }",
        "js": "const btnJump = document.querySelector('.btn-jump'); btnJump.addEventListener('mouseenter', () => { btnJump.style.transform = 'translateY(-15px)'; }); btnJump.addEventListener('mouseleave', () => { btnJump.style.transform = 'translateY(0)'; });"
      },
      {
        "id": 55,
        "author": "Thanh Tự",
        "type": "Button",
        "title": "Button hiển thị đếm ngược animation",
        "link": "",
        "html": "<button class='btn-countdown'>Hover me</button>",
        "css": ".btn-countdown { position: relative; padding: 12px 30px; background: #27ae60; color: white; border: none; border-radius: 6px; font-weight: bold; cursor: pointer; overflow: hidden; } .countdown-bar { position: absolute; bottom: 0; left: 0; height: 4px; background: #2ecc71; width: 0%; transition: width 3s linear; }",
        "js": "const btnCountdown = document.querySelector('.btn-countdown'); const bar = document.createElement('div'); bar.classList.add('countdown-bar'); btnCountdown.appendChild(bar); btnCountdown.addEventListener('mouseenter', () => { bar.style.width = '100%'; }); btnCountdown.addEventListener('mouseleave', () => { bar.style.width = '0%'; });"
      },
      {
        "id": 61,
        "author": "Thế Vĩnh",
        "type": "Icon",
        "title": "Basic Hover Icons",
        "link": "<link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' rel='stylesheet'/>",
        "html": "<div class='icon-container'> <i class='icon fa fa-home zoom-in'></i> <i class='icon fa fa-user rotate'></i> <i class='icon fa fa-heart color-change'></i> <i class='icon fa fa-star bounce'></i> <i class='icon fa fa-camera fade'></i> <i class='icon fa fa-cogs shadow'></i> <i class='icon fa fa-search flip'></i> <i class='icon fa fa-play grow-shrink'></i> <i class='icon fa fa-phone skew'></i> <i class='icon fa fa-music spin'></i> </div>",
        "css": ".icon-container { display: flex; gap: 20px; justify-content: center; padding: 50px; flex-wrap: wrap; /* Allow icons to wrap to the next line */ } .icon { font-size: 45px; color: #000000; transition: all 0.3s ease; } .icon.zoom-in:hover { transform: scale(1.3); } .icon.rotate:hover { transform: rotate(45deg); } .icon.color-change:hover { color: #e74c3c; } .icon.bounce:hover { animation: bounce 0.6s ease-in-out; } @keyframes bounce { 0% { transform: translateY(0); } 50% { transform: translateY(-10px); } 100% { transform: translateY(0); } } .icon.fade:hover { opacity: 0.5; } .icon.shadow:hover { box-shadow: 0 4px 20px rgba(0, 0, 0, 0.4); } .icon.flip:hover { transform: rotateY(180deg); } .icon.grow-shrink:hover { transform: scale(1.5); } .icon.skew:hover { transform: skewX(20deg); } .icon.spin:hover { animation: spin 1s linear infinite; } @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }",
        "js": ""
      },
      {
        "id": 62,
        "author": "Thế Vĩnh",
        "type": "Icon",
        "title": "The background around the icon grows larger.",
        "link": "<link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' rel='stylesheet'/>",
        "html": "<div class='fa-icon-wrap fa-icon-effect fa-icon-effect-a'> <a class='fa-icon fa fa-home'></a> <a class='fa-icon fa fa-user'></a> <a class='fa-icon fa fa-cogs'></a> </div>",
        "css": "body { background-color: #000000; } .fa-icon-wrap { text-align: center; margin: 40px auto; display: flex; justify-content: center; align-items: center; gap: 30px; } .fa-icon { display: flex; justify-content: center; align-items: center; font-size: 30px; cursor: pointer; width: 90px; height: 90px; border-radius: 50%; text-align: center; position: relative; z-index: 1; color: #fff; background-color: rgba(255, 255, 255, 0.1); transition: background 0.2s, color 0.2s; } .fa-icon:after { pointer-events: none; position: absolute; width: 100%; height: 100%; border-radius: 50%; content: ''; box-sizing: content-box; } .fa-icon-effect .fa-icon { background: rgba(255, 255, 255, 0.1); transition: background 0.2s, color 0.2s; } .fa-icon-effect .fa-icon:after { top: -7px; left: -7px; padding: 7px; box-shadow: 0 0 0 4px #fff; transition: transform 0.2s, opacity 0.2s; transform: scale(.8); opacity: 0; } .fa-icon-effect-a .fa-icon:hover { background: rgba(255, 255, 255, 1); color: #41ab6b; } .fa-icon-effect-a .fa-icon:hover:after { transform: scale(1); opacity: 1; }",
        "js": ""
      },
      {
        "id": 63,
        "author": "Thế Vĩnh",
        "type": "Icon",
        "title": "The background around the icon shrinks.",
        "link": "<link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' rel='stylesheet'/>",
        "html": "<div class='fa-icon-wrap fa-icon-effect fa-icon-effect-a'> <a class='fa-icon fa fa-home'></a> <a class='fa-icon fa fa-user'></a> <a class='fa-icon fa fa-cogs'></a> </div>",
        "css": "body { background-color: #000000; } .fa-icon-wrap { text-align: center; margin: 40px auto; display: flex; justify-content: center; align-items: center; gap: 30px; } .fa-icon { display: flex; justify-content: center; align-items: center; font-size: 30px; cursor: pointer; width: 90px; height: 90px; border-radius: 50%; text-align: center; position: relative; z-index: 1; color: #fff; background-color: rgba(255, 255, 255, 0.1); transition: background 0.2s, color 0.2s; } .fa-icon:after { pointer-events: none; position: absolute; width: 100%; height: 100%; border-radius: 50%; content: ''; box-sizing: content-box; } .fa-icon-effect .fa-icon { color: #000; box-shadow: 0 0 0 3px #fff; transition: color 0.3s; } .fa-icon-effect .fa-icon:after { top: -2px; left: -2px; padding: 2px; background: #fcfcfc33; transition: transform 0.2s, opacity 0.2s; } .fa-icon-effect-a .fa-icon:hover { color: #eea303; } .fa-icon-effect-a .fa-icon:hover:after { transform: scale(0.85); }",
        "js": ""
      },
      {
        "id": 64,
        "author": "Thế Vĩnh",
        "type": "Icon",
        "title": "The background fades around the icon.",
        "link": "<link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' rel='stylesheet'/>",
        "html": "<div class='fa-icon-wrap fa-icon-effect fa-icon-effect-a'> <a class='fa-icon fa fa-home'></a> <a class='fa-icon fa fa-user'></a> <a class='fa-icon fa fa-cogs'></a> </div>",
        "css": "body { background-color: #000000; } .fa-icon-wrap { text-align: center; margin: 40px auto; display: flex; justify-content: center; align-items: center; gap: 30px; } .fa-icon { display: flex; justify-content: center; align-items: center; font-size: 30px; cursor: pointer; width: 90px; height: 90px; border-radius: 50%; text-align: center; position: relative; z-index: 1; color: #fff; background-color: rgba(255, 255, 255, 0.1); transition: background 0.2s, color 0.2s; } .fa-icon:after { pointer-events: none; position: absolute; width: 100%; height: 100%; border-radius: 50%; content: ''; box-sizing: content-box; } .fa-icon-effect .fa-icon { box-shadow: 0 0 0 4px #fff; transition: color 0.3s; } .fa-icon-effect .fa-icon:after { top: -2px; left: -2px; padding: 2px; background: #ffffff72; transition: transform 0.2s, opacity 0.3s; } .fa-icon-effect-a .fa-icon { color: #000; } .fa-icon-effect-a .fa-icon:hover { color: #fff; } .fa-icon-effect-a .fa-icon:hover:after { transform: scale(1.3); opacity: 0; }",
        "js": ""
      },
      {
        "id": 65,
        "author": "Thế Vĩnh",
        "type": "Icon",
        "title": "The icon has dashed borders around it",
        "link": "<link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' rel='stylesheet'/>",
        "html": "<div class='fa-icon-wrap fa-icon-effect fa-icon-effect-a'> <a class='fa-icon fa fa-home'></a> <a class='fa-icon fa fa-user'></a> <a class='fa-icon fa fa-cogs'></a> </div>",
        "css": "body { background-color: #000000; } .fa-icon-wrap { text-align: center; margin: 40px auto; display: flex; justify-content: center; align-items: center; gap: 30px; } .fa-icon { display: flex; justify-content: center; align-items: center; font-size: 30px; cursor: pointer; width: 90px; height: 90px; border-radius: 50%; text-align: center; position: relative; z-index: 1; color: #fff; background-color: rgba(255, 255, 255, 0.1); transition: background 0.2s, color 0.2s; } .fa-icon:after { pointer-events: none; position: absolute; width: 100%; height: 100%; border-radius: 50%; content: ''; box-sizing: content-box; } .fa-icon-effect .fa-icon { width: 92px; height: 92px; box-shadow: 0 0 0 4px rgba(255, 255, 255, 1); } .fa-icon-effect .fa-icon:before { line-height: 92px; } .fa-icon-effect .fa-icon:after { top: -4px; left: -4px; padding: 0; border: 4px dashed #fff; } .fa-icon-effect .fa-icon:hover { box-shadow: 0 0 0 0 rgba(255, 255, 255, 0); color: #fff; }",
        "js": ""
      },
      {
        "id": 66,
        "author": "Thế Vĩnh",
        "type": "Icon",
        "title": "The icon moves to the right and then returns from the left",
        "link": "<link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' rel='stylesheet'/>",
        "html": "<div class='fa-icon-wrap fa-icon-effect fa-icon-effect-a'> <a class='fa-icon fa fa-home'></a> <a class='fa-icon fa fa-user'></a> <a class='fa-icon fa fa-cogs'></a> </div>",
        "css": "body { background-color: #000000; } .fa-icon-wrap { text-align: center; margin: 40px auto; display: flex; justify-content: center; align-items: center; gap: 30px; } .fa-icon { display: flex; justify-content: center; align-items: center; font-size: 30px; cursor: pointer; width: 90px; height: 90px; border-radius: 50%; text-align: center; position: relative; z-index: 1; color: #fff; background-color: rgba(255, 255, 255, 0.1); transition: background 0.2s, color 0.2s; } .fa-icon:after { pointer-events: none; position: absolute; width: 100%; height: 100%; border-radius: 50%; content: ''; box-sizing: content-box; } .fa-icon-effect .fa-icon { box-shadow: 0 0 0 4px rgba(255, 255, 255, 1); overflow: fadden; -webkit-transition: background 0.3s, color 0.3s, box-shadow 0.3s; -moz-transition: background 0.3s, color 0.3s, box-shadow 0.3s; transition: background 0.3s, color 0.3s, box-shadow 0.3s; } .fa-icon-effect .fa-icon:after { display: none; } .fa-icon-effect .fa-icon:hover { background: rgba(255, 255, 255, 1); color: #702fa8; box-shadow: 0 0 0 8px rgba(255, 255, 255, 0.3); } .fa-icon-effect-a .fa-icon:hover:before { -webkit-animation: toRightFromLeft 0.3s forwards; -moz-animation: toRightFromLeft 0.3s forwards; animation: toRightFromLeft 0.3s forwards; } @keyframes toRightFromLeft { 49% { transform: translate(100%); } 50% { opacity: 0; transform: translate(-100%); } 51% { opacity: 1; } }",
        "js": ""
      },
      {
        "id": 67,
        "author": "Thế Vĩnh",
        "type": "Icon",
        "title": "Color change icon",
        "link": "<link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' rel='stylesheet'/>",
        "html": "<div class='fa-icon-wrap fa-icon-effect fa-icon-effect-a'> <a class='fa-icon fa fa-home'></a> <a class='fa-icon fa fa-user'></a> <a class='fa-icon fa fa-cogs'></a> </div>",
        "css": "body { background-color: #000000; } .fa-icon-wrap { text-align: center; margin: 40px auto; display: flex; justify-content: center; align-items: center; gap: 30px; } .fa-icon { display: flex; justify-content: center; align-items: center; font-size: 30px; cursor: pointer; width: 90px; height: 90px; border-radius: 50%; text-align: center; position: relative; z-index: 1; color: #fff; background-color: rgba(255, 255, 255, 0.1); transition: background 0.2s, color 0.2s; } .fa-icon:after { pointer-events: none; position: absolute; width: 100%; height: 100%; border-radius: 50%; content: ''; box-sizing: content-box; } .fa-icon-effect .fa-icon { box-shadow: 0 0 0 4px rgba(255, 255, 255, 1); transition: background 0.2s, color 0.2s; } .fa-icon-effect .fa-icon:hover { background: rgba(255, 255, 255, 1); color: #64bb5d; }",
        "js": ""
      },
      {
        "id": 68,
        "author": "Thế Vĩnh",
        "type": "Icon",
        "title": "An additional circular border appears around the icon",
        "link": "<link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' rel='stylesheet'/>",
        "html": "<div class='fa-icon-wrap fa-icon-effect fa-icon-effect-a'> <a class='fa-icon fa fa-home'></a> <a class='fa-icon fa fa-user'></a> <a class='fa-icon fa fa-cogs'></a> </div>",
        "css": "body { background-color: #000000; } .fa-icon-wrap { text-align: center; margin: 40px auto; display: flex; justify-content: center; align-items: center; gap: 30px; } .fa-icon { display: flex; justify-content: center; align-items: center; font-size: 30px; cursor: pointer; width: 90px; height: 90px; border-radius: 50%; text-align: center; position: relative; z-index: 1; color: #fff; background-color: rgba(255, 255, 255, 0.1); transition: background 0.2s, color 0.2s; } .fa-icon:after { pointer-events: none; position: absolute; width: 100%; height: 100%; border-radius: 50%; content: ''; box-sizing: content-box; } .fa-icon-effect .fa-icon { box-shadow: 0 0 0 4px rgba(255, 255, 255, 1); transition: background 0.2s, color 0.2s; } .fa-icon-effect .fa-icon:hover { color: #fff; } .fa-icon-effect .fa-icon:after { top: -8px; left: -8px; padding: 8px; z-index: -1; opacity: 0; } .fa-icon-effect-a .fa-icon:hover:after { opacity: 1; box-shadow: 3px 3px 0 rgba(255, 255, 255, 1); }",
        "js": ""
      },
      {
        "id": 69,
        "author": "Thế Vĩnh",
        "type": "Icon",
        "title": "The background ripples like a wave",
        "link": "<link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' rel='stylesheet'/>",
        "html": "<div class='fa-icon-wrap fa-icon-effect fa-icon-effect-a'> <a class='fa-icon fa fa-home'></a> <a class='fa-icon fa fa-user'></a> <a class='fa-icon fa fa-cogs'></a> </div>",
        "css": "body { background-color: #000000; } .fa-icon-wrap { text-align: center; margin: 40px auto; display: flex; justify-content: center; align-items: center; gap: 30px; } .fa-icon { display: flex; justify-content: center; align-items: center; font-size: 30px; cursor: pointer; width: 90px; height: 90px; border-radius: 50%; text-align: center; position: relative; z-index: 1; color: #fff; background-color: rgba(255, 255, 255, 0.1); transition: background 0.2s, color 0.2s; } .fa-icon:after { pointer-events: none; position: absolute; width: 100%; height: 100%; border-radius: 50%; content: ''; box-sizing: content-box; } .fa-icon-effect .fa-icon { background: rgba(255, 255, 255, 0.1); transition: transform ease-out 0.1s, background 0.2s; } .fa-icon-effect .fa-icon:hover { background: rgba(255, 255, 255, 0.05); transform: scale(0.93); color: #fff; } .fa-icon-effect .fa-icon:hover:after { animation: sonarEffect 1.3s ease-out 75ms; } @keyframes sonarEffect { 0% { opacity: 0.3; } 40% { opacity: 0.5; box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.1), 0 0 10px 10px #3851bc, 0 0 0 10px rgba(255, 255, 255, 0.5); } 100% { box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.1), 0 0 10px 10px #3851bc, 0 0 0 10px rgba(255, 255, 255, 0.5); transform: scale(1.5); opacity: 0; } }",
        "js": ""
      },
      {
        "id": 70,
        "author": "Thế Vĩnh",
        "type": "Icon",
        "title": "A light streak flashes across the icon",
        "link": "<link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' rel='stylesheet'/>",
        "html": "<a class='glassIco'><i class='fab fa-facebook-f'></i></a> <a class='glassIco'><i class='fab fa-instagram'></i></a> <a class='glassIco'><i class='fab fa-linkedin-in'></i></a> <a class='glassIco'><i class='fab fa-whatsapp'></i></a>",
        "css": ".flex-center { display: flex; justify-content: center; align-items: center; } html, body { padding: 0; margin: 0; height: 100%; position: relative; background-image: linear-gradient(135deg, #f97794 10%, #623aa2 100%); font-family: Arial, sans-serif; overflow-x: hidden; } .glassIco { --width: 100px; box-sizing: border-box; width: var(--width); height: var(--width); color: #fff; font-size: 30px; border-radius: 5px; background: rgba(255, 255, 255, 0.05); backdrop-filter: blur(2px); border: 1px solid rgba(255, 255, 255, 0.2); border-right-color: rgba(255, 255, 255, 0.1); border-bottom-color: rgba(255, 255, 255, 0.1); box-shadow: 0 20px 30px rgba(0, 0, 0, 0.1); text-decoration: none; margin: 20px; overflow: hidden; display: flex; justify-content: center; align-items: center; position: relative; cursor: pointer; transition: transform 200ms ease; } .glassIco::before { content: ''; position: absolute; display: block; width: 50%; height: 100%; background: rgba(255, 255, 255, 0.5); filter: blur(0px); transition: 400ms; transform: skewX(45deg) translateX(calc(var(--width) + 50%)); top: 0; left: 0; pointer-events: none; z-index: 1; } .glassIco:hover { transform: translateY(-20px); } .glassIco:hover::before { transform: skewX(45deg) translateX(calc(var(--width) * -1 - 50%)); filter: blur(8px); } .glassIco > * { opacity: 0.8; position: relative; z-index: 2; pointer-events: none; } body { display: flex; flex-wrap: wrap; justify-content: center; align-items: center; min-height: 100vh; gap: 20px; }",
        "js": ""
      }
    ]
  },
  {
    "category": "animation",
    "effects": [
      {
        "id": 1,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Glitch Text Animation",
        "link": "",
        "html": "<span class='glitch' data-text='Text Animation'>Text Animation</span>",
        "css": ".glitch { position: relative; font-size: 38px; font-weight: 800; color: #000; user-select: none; display: inline-block; cursor: default; } .glitch::before, .glitch::after { content: attr(data-text); position: absolute; left: 0; top: 0; width: 100%; height: 100%; overflow: hidden; /* Gán animation luôn */ } .glitch::before { left: 2px; text-shadow: -2px 0 red; animation: glitch-anim 2s infinite linear alternate-reverse; } .glitch::after { left: -2px; text-shadow: -2px 0 blue; animation: glitch-anim2 2.5s infinite linear alternate-reverse; } @keyframes glitch-anim { 0% { clip: rect(0, 9999px, 0, 0); } 10% { clip: rect(20px, 9999px, 50px, 0); } 20% { clip: rect(0, 9999px, 0, 0); } 30% { clip: rect(25px, 9999px, 45px, 0); } 40% { clip: rect(0, 9999px, 0, 0); } 100% { clip: rect(0, 9999px, 0, 0); } } @keyframes glitch-anim2 { 0% { clip: rect(0, 9999px, 0, 0); } 15% { clip: rect(45px, 9999px, 70px, 0); } 30% { clip: rect(0, 9999px, 0, 0); } 45% { clip: rect(50px, 9999px, 75px, 0); } 60% { clip: rect(0, 9999px, 0, 0); } 100% { clip: rect(0, 9999px, 0, 0); } }",
        "js": ""
      },
      {
        "id": 2,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Slide Color",
        "link": "",
        "html": "<span class='slide-color'>Text Animation</span>",
        "css": ".slide-color { font-size: 38px; font-weight: 800; background: linear-gradient(90deg, red, orange, yellow, green, blue, indigo, violet); background-size: 400% 100%; -webkit-background-clip: text; -webkit-text-fill-color: transparent; animation: slideColorAnim 4s linear infinite; } @keyframes slideColorAnim { 0% { background-position: 0% 0; } 100% { background-position: 400% 0; } }",
        "js": ""
      },
      {
        "id": 3,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Glowing Fade In",
        "link": "",
        "html": "<div class='glowing'>Text Animation</div>",
        "css": ".glowing { font-size: 60px; color: black; text-shadow: 0 0 10px #fff, 0 0 20px #ff00cc, 0 0 30px #ff00cc, 0 0 40px #ff00cc; animation: fadeInGlow 3s infinite; } @keyframes fadeInGlow { 0% { opacity: 0; text-shadow: 0 0 5px #ff00cc; } 50% { opacity: 1; text-shadow: 0 0 20px #ff00cc, 0 0 40px #ff00cc; } 100% { opacity: 0; text-shadow: 0 0 5px #ff00cc; } }",
        "js": ""
      },
      {
        "id": 4,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Moving Text",
        "link": "",
        "html": "<div class='moving-text'>Text Animation</div>",
        "css": ".moving-text { font-size: 60px; color: black; position: relative; animation: move 5s infinite linear; } @keyframes move { 0% { left: 0; } 100% { left: 100%; } }",
        "js": ""
      },
      {
        "id": 5,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Pixelated Text",
        "link": "",
        "html": " <div class='pixelated'>Text Animation</div>",
        "css": ".pixelated { font-size: 60px; font-family: 'Courier New', Courier, monospace; color: black; text-transform: uppercase; letter-spacing: 2px; animation: pixelate 1s infinite alternate; } @keyframes pixelate { 0% { letter-spacing: 0px; opacity: 0.5; } 100% { letter-spacing: 10px; opacity: 1; } }",
        "js": ""
      },
      {
        "id": 6,
        "author": "VanBao",
        "type": "Text",
        "title": "Gradient Wave Text",
        "html": "<h2 class='wave-text'>Gradient Wave</h2>",
        "css": ".wave-text { background: linear-gradient(45deg, #3b82f6, #8b5cf6, #ec4899, #3b82f6); background-size: 300%; -webkit-background-clip: text; background-clip: text; color: transparent; font-size: 3rem; font-weight: bold; animation: gradientWave 8s ease infinite; } @keyframes gradientWave { 0%, 100% { background-position: 0% 50%; } 50% { background-position: 100% 50%; } }",
        "js": ""
      },
      {
        "id": 7,
        "author": "VanBao",
        "type": "Text",
        "title": "Split Letter Reveal",
        "html": "<div class='split-text'>Reveal Text</div>",
        "css": ".split-text { font-size: 2.5rem; font-weight: bold; opacity: 0; } .split-text.animate { opacity: 1; animation: splitReveal 0.8s cubic-bezier(0.4, 0, 0.2, 1); } @keyframes splitReveal { 0% { transform: scale(0.5); filter: blur(12px); letter-spacing: 20px; } 100% { transform: scale(1); filter: blur(0); letter-spacing: normal; } }",
        "js": "document.querySelector('.split-text').classList.add('animate');"
      },
      {
        "id": 8,
        "author": "VanBao",
        "type": "Text",
        "title": "Smoke Text Reveal Pro",
        "html": "<div class='smoke-text-pro'>Cyber<span>Effect</span></div>",
        "css": ".smoke-text-pro { font-size: 4rem; font-weight: 900; text-transform: uppercase; display: flex; gap: 1rem; background: linear-gradient(135deg, #1e293b, #334155); -webkit-background-clip: text; color: transparent; position: relative; filter: contrast(1.5); } .smoke-text-pro::before, .smoke-text-pro::after, .smoke-text-pro span::before, .smoke-text-pro span::after { content: ''; position: absolute; width: 40px; height: 40px; background: radial-gradient(circle, rgba(148,163,184,0.8) 0%, rgba(148,163,184,0) 70%); border-radius: 50%; animation: smokeParticles 3s ease-out infinite; } .smoke-text-pro::before { left: 0; top: 0; animation-delay: 0s; } .smoke-text-pro::after { right: 0; bottom: 0; animation-delay: 0.5s; } .smoke-text-pro span::before { left: 50%; top: 0; animation-delay: 1s; } .smoke-text-pro span::after { right: 25%; bottom: 0; animation-delay: 1.5s; } @keyframes smokeParticles { 0% { transform: translate(0, 0) scale(1); opacity: 0; } 25% { opacity: 0.5; } 50% { transform: translate(20px, -40px) scale(2); opacity: 0.2; } 75% { opacity: 0.1; } 100% { transform: translate(40px, -80px) scale(3); opacity: 0; } } .smoke-text-pro span { background: linear-gradient(135deg, #475569, #64748b); -webkit-background-clip: text; color: transparent; animation: textReveal 3s ease-out infinite; } @keyframes textReveal { 0%, 100% { filter: blur(0); transform: scale(1); } 50% { filter: blur(2px); transform: scale(1.05); } }",
        "js": ""
      },
      {
        "id": 9,
        "author": "VanBao",
        "type": "Text",
        "title": "Matrix Rain Effect",
        "html": "<div class='matrix-container'></div>",
        "css": ".matrix-container { position: relative; width: 100%; height: 300px; background: black; overflow: hidden; } .matrix-character { position: absolute; color: #0f0; font-family: monospace; font-size: 1.2rem; line-height: 1; animation: fall linear infinite; } @keyframes fall { to { transform: translateY(300px); } }",
        "js": "const container = document.querySelector('.matrix-container'); const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'; function createCharacter() { const char = document.createElement('div'); char.className = 'matrix-character'; char.textContent = characters[Math.floor(Math.random() * characters.length)]; char.style.left = `${Math.random() * 100}%`; char.style.animationDuration = `${Math.random() * 2 + 1}s`; container.appendChild(char); setTimeout(() => { char.remove(); }, 3000); } setInterval(createCharacter, 100);"
      },
      {
        "id": 10,
        "author": "VanBao",
        "type": "Text",
        "title": "3D Text Rotation",
        "html": "<div class='text-3d-container'><div class='text-3d'>CYBER</div></div>",
        "css": ".text-3d-container { perspective: 1000px; padding: 2rem; } .text-3d { font-size: 4rem; font-weight: 900; text-transform: uppercase; color: #2563eb; letter-spacing: 4px; transform-style: preserve-3d; animation: rotate3D 8s ease-in-out infinite; position: relative; } .text-3d::before, .text-3d::after { content: 'CYBER'; position: absolute; left: 0; top: 0; transform-style: preserve-3d; animation: glowPulse 2s ease-in-out infinite alternate; } .text-3d::before { color: #4f46e5; transform: translateZ(-8px); } .text-3d::after { color: #7c3aed; transform: translateZ(-16px); } @keyframes rotate3D { 0%, 100% { transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg) translateZ(0); } 25% { transform: rotateX(25deg) rotateY(15deg) rotateZ(5deg) translateZ(50px); } 75% { transform: rotateX(-25deg) rotateY(-15deg) rotateZ(-5deg) translateZ(50px); } } @keyframes glowPulse { 0% { filter: blur(0); opacity: 0.5; } 100% { filter: blur(2px); opacity: 0.8; } }",
        "js": ""
      },
      {
        "id": 11,
        "author": "VanBao",
        "type": "Text",
        "title": "Neon Glow Pulse",
        "html": "<h2 class='neon-text'>Cyber<span>Glow</span></h2>",
        "css": ".neon-text { font-size: 3.5rem; font-weight: 800; display: flex; gap: 1rem; color: #f0abfc; text-transform: uppercase; letter-spacing: 2px; filter: brightness(1.5) contrast(1.2); } .neon-text span { color: #c026d3; } .neon-text, .neon-text span { text-shadow: 0 0 7px currentColor, 0 0 10px currentColor, 0 0 21px currentColor, 0 0 42px currentColor, 0 0 82px currentColor, 0 0 92px currentColor, 0 0 102px currentColor, 0 0 151px currentColor; animation: neonPulse 1.5s ease-in-out infinite alternate; } @keyframes neonPulse { 0% { opacity: 1; filter: brightness(1.5) contrast(1.2) blur(0px); transform: scale(1); } 50% { opacity: 0.8; filter: brightness(1.2) contrast(1) blur(1px); transform: scale(0.98); } 100% { opacity: 1; filter: brightness(1.5) contrast(1.2) blur(0px); transform: scale(1); } }",
        "js": ""
      },
      {
        "id": 12,
        "author": "VanBao",
        "type": "Text",
        "title": "Rainbow Text Trail",
        "html": "<h2 class='rainbow-trail'>Rainbow Trail</h2>",
        "css": ".rainbow-trail { font-size: 3rem; font-weight: bold; position: relative; color: #2563eb; } .rainbow-trail::after { content: 'Rainbow Trail'; position: absolute; top: 0; left: 0; color: transparent; background: linear-gradient(45deg, #f87171, #fb923c, #fbbf24, #4ade80, #2dd4bf, #818cf8, #c084fc); background-size: 200%; -webkit-background-clip: text; background-clip: text; animation: rainbow 2s linear infinite; opacity: 0.5; } @keyframes rainbow { 0% { background-position: 0% 50%; } 100% { background-position: 100% 50%; } }",
        "js": ""
      },
      {
        "id": 13,
        "author": "VanBao",
        "type": "Text",
        "title": "Typing Effect",
        "html": "<div class='typing-text'>Welcome to the future</div>",
        "css": ".typing-text { width: fit-content; font-family: monospace; font-size: 1.5rem; border-right: 3px solid; animation: typing 3s steps(18), cursor .4s step-end infinite alternate; white-space: nowrap; overflow: hidden; } @keyframes typing { from { width: 0 } } @keyframes cursor { 50% { border-color: transparent } }",
        "js": ""
      },
      {
        "id": 14,
        "author": "VanBao",
        "type": "Text",
        "title": "Glitch Effect",
        "html": "<h2 class='glitch-text' data-text='Glitch'>Glitch</h2>",
        "css": ".glitch-text { position: relative; font-size: 3rem; font-weight: bold; color: #2563eb; text-shadow: 0.05em 0 0 #ff00c1, -0.025em -0.05em 0 #3498db; animation: glitch 500ms infinite; } .glitch-text::before, .glitch-text::after { content: attr(data-text); position: absolute; top: 0; left: 0; width: 100%; height: 100%; } .glitch-text::before { left: 2px; text-shadow: -2px 0 #ff00c1; clip: rect(24px, 550px, 90px, 0); animation: glitch-anim 3s infinite linear alternate-reverse; } .glitch-text::after { left: -2px; text-shadow: -2px 0 #3498db; clip: rect(85px, 550px, 140px, 0); animation: glitch-anim2 2.5s infinite linear alternate-reverse; } @keyframes glitch-anim { 0% { clip: rect(44px, 9999px, 56px, 0); } 20% { clip: rect(17px, 9999px, 99px, 0); } 40% { clip: rect(86px, 9999px, 37px, 0); } 60% { clip: rect(64px, 9999px, 98px, 0); } 80% { clip: rect(23px, 9999px, 75px, 0); } 100% { clip: rect(95px, 9999px, 43px, 0); } }",
        "js": ""
      },
      {
        "id": 15,
        "author": "Thế Vĩnh",
        "type": "Button",
        "title": "Button - Reverse Shadow",
        "link": "",
        "html": "<a class='playbtn'> <span></span> <span></span> <span></span> <span></span> Button Animation </a>",
        "css": "body { display: flex; align-items: center; justify-content: center; background-color: #000; } .playbtn { position: relative; display: inline-block; padding: 25px 30px; margin: 40px 0; color: #ffffff; text-decoration: none; text-transform: uppercase; transition: 0.5s; font-weight: 600; letter-spacing: 4px; overflow: hidden; } .playbtn:hover { background: #ffffff; color: #000000; box-shadow: 0 0 5px #fff, 0 0 25px #fff, 0 0 50px #fff, 0 0 200px #fff; -webkit-box-reflect: below 1px linear-gradient(transparent, #0005); } .playbtn span { position: absolute; display: block; } .playbtn span:nth-child(1) { top: 0; left: 0; width: 100%; height: 10px; background: linear-gradient(90deg, transparent, #fff); animation: animate1 1s linear infinite; } @keyframes animate1 { 0% { left: -100%; } 50%, 100% { left: 100%; } } .playbtn span:nth-child(2) { top: -100%; right: 0; width: 10px; height: 100%; background: linear-gradient(180deg, transparent, #fff); animation: animate2 1s linear infinite; animation-delay: 0.25s; } @keyframes animate2 { 0% { top: -100%; } 50%, 100% { top: 100%; } } .playbtn span:nth-child(3) { bottom: 0; right: 0; width: 100%; height: 10px; background: linear-gradient(270deg, transparent, #fff); animation: animate3 1s linear infinite; animation-delay: 0.5s; } @keyframes animate3 { 0% { right: -100%; } 50%, 100% { right: 100%; } } .playbtn span:nth-child(4) { bottom: -100%; left: 0; width: 10px; height: 100%; background: linear-gradient(360deg, transparent, #fff); animation: animate4 1s linear infinite; animation-delay: 0.75s; } @keyframes animate4 { 0% { bottom: -100%; } 50%, 100% { bottom: 100%; } }",
        "js": ""
      },
      {
        "id": 16,
        "author": "Thế Vĩnh",
        "type": "Button",
        "title": "Button - Unlocking Animation Effect",
        "link": "",
        "html": "<div class='button-box'> <button class='button'> <p class='title'>Submit!</p> <img src='https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Objects/Locked.png' alt='Locked' /> <p class='description'>Click to submit</p> </button> </div>",
        "css": "body { display: flex; align-items: center; justify-content: center; background-color: var(--lovelish); } :root { --lovelish: hsl(0, 0%, 18%); --handshake: hsl(40, 100%, 66%); } img { margin-left: auto; transition: 0.5s; width: 5.5rem; height: 5.5rem; } .button { margin: 40px 0; height: 100px; width: 500px; display: flex; border-radius: 2.5rem; transition: 0.5s; font-size: 2rem; background-image: linear-gradient(to right top, #ffb4be, #ffb5b6, #ffb7ad, #ffbaa5, #ffbd9e, #ffc098, #ffc492, #ffc88d, #ffcd87, #ffd281, #ffd77b, #ffdd76); animation: blurr3 2s; animation-iteration-count: infinite; outline: none; cursor: pointer; border: none; position: relative; } .button:hover .title { transform: translateX(-140px); animation: fade 0.5s; opacity: 0%; } .button:hover img { transform: translateX(-370px); } .button:hover .description { transform: translateX(70px); opacity: 100%; } @keyframes blurr3 { 0%, 100% { box-shadow: 0 0 10px var(--handshake); } 50% { box-shadow: 0 0 36px var(--handshake); } } @keyframes fade { 0% { opacity: 100%; } 100% { opacity: 0%; } } .title { font-weight: bold; margin-top: 1.6rem; margin-left: 10rem; transition: 0.5s; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); } .description { position: absolute; margin-top: 1.4rem; font-weight: bold; line-height: 2rem; font-size: 2rem; font-style: italic; transition: 0.5s; opacity: 0%; margin-left: 6rem; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); } .button:hover .description { content: 'Are you sure you want to submit?'; transform: translateX(70px); opacity: 100%; font-size: 1.5rem; } .button:hover img { content: url('https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Objects/Unlocked.png'); }",
        "js": ""
      },
      {
        "id": 17,
        "author": "Thế Vĩnh",
        "type": "Button",
        "title": "Button - LED light",
        "link": "",
        "html": "<a class='box__link button-animation'> Submit <span></span> <span></span> <span></span> <span></span> </a>",
        "css": "body { display: flex; align-items: center; justify-content: center; font-size: 1rem; background: #393937; } ul { list-style: none; } a { text-decoration: none; } .button-animation { margin: 40px 0; position: relative; display: inline-block; padding: 20px 30px; color: #03e9f4; overflow: hidden; letter-spacing: 4px; transition: 0.5s; } .button-animation span { position: absolute; display: block; } .button-animation span:nth-child(1) { top: 0; left: -100%; width: 100%; height: 2px; background: linear-gradient(90deg, transparent, #03e9f4); animation: btn-anim1 1s linear infinite; } @keyframes btn-anim1 { 0% { left: -100%; } 50%, 100% { left: 100%; } } .button-animation span:nth-child(2) { top: -100%; right: 0; width: 2px; height: 100%; background: linear-gradient(180deg, transparent, #03e9f4); animation: btn-anim2 1s linear infinite; animation-delay: 0.25s; } @keyframes btn-anim2 { 0% { top: -100%; } 50%, 100% { top: 100%; } } .button-animation span:nth-child(3) { bottom: 0; right: -100%; width: 100%; height: 2px; background: linear-gradient(270deg, transparent, #03e9f4); animation: btn-anim3 1s linear infinite; animation-delay: 0.5s; } @keyframes btn-anim3 { 0% { right: -100%; } 50%, 100% { right: 100%; } } .button-animation span:nth-child(4) { bottom: -100%; left: 0; width: 2px; height: 100%; background: linear-gradient(360deg, transparent, #03e9f4); animation: btn-anim4 1s linear infinite; animation-delay: 0.75s; } @keyframes btn-anim4 { 0% { bottom: -100%; } 50%, 100% { bottom: 100%; } } .button-animation:hover { background-color: #03e9f4; color: #fff; border-radius: 5px; box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4; }",
        "js": ""
      },
      {
        "id": 18,
        "type": "Button",
        "author": "Thế Vĩnh",
        "title": "Button - Animated Wave",
        "link": "",
        "html": "<a> <span>Click</span> <div class='liquid'></div> </a>",
        "css": "body { display: flex; justify-content: center; align-items: center; background: #161718; } a { font: 700 30px consolas; color: #fff; text-decoration: none; text-transform: uppercase; padding: 20px 60px; position: relative; overflow: hidden; border-radius: 5px; transition: 0.2s; transform: scale(2); margin: 40px auto; } a span { position: relative; z-index: 0; color: #fff; } a .liquid { position: absolute; top: -60px; left: 0; width: 100%; height: 200px; background: #7293ff; box-shadow: inset 0 0 50px rgba(0, 0, 0, 0.7); z-index: -1; transition: 0.6s; } a .liquid::after, a .liquid::before { position: absolute; content: ''; width: 200%; height: 200%; top: 0; left: 0; transform: translate(-25%, -75%); } a .liquid::after { border-radius: 45%; background: rgba(20, 20, 20, 1); box-shadow: 0 0 10px 5px #7293ff, inset 0 0 5px #7293ff; animation: animate 5s linear infinite; opacity: 0.8; } a .liquid::before { border-radius: 40%; box-shadow: 0 0 10px rgba(26, 26, 26, 0.5), inset 0 0 5px rgba(26, 26, 26, 0.5); background: rgba(26, 26, 26, 0.5); animation: animate 7s linear infinite; } @keyframes animate { 0% { transform: translate(-25%, -75%) rotate(0); } 100% { transform: translate(-25%, -75%) rotate(360deg); } } a:hover .liquid { top: -120px; } a:hover { box-shadow: 0 0 5px #7293ff, inset 0 0 5px #7293ff; transition-delay: 0.2s; }",
        "js": ""
      },
      {
        "id": 19,
        "type": "Button",
        "author": "Thế Vĩnh",
        "title": "Button - Animated Wave",
        "link": "",
        "html": "<div class='container'> <button class='btn' onfocus='go()'>Go</button> <svg class='svg' height='100' width='100'> <defs> <radialGradient id='g2' cx='50%' cy='50%' r='50%' fx='50%' fy='50%'> <stop offset='0%' style='stop-color:#00cec9' /> <stop offset='70%' style='stop-color:#00cec9' /> <stop offset='80%' style='stop-color:#00cec9' /> <stop offset='90%' style='stop-color:white;' /> <stop offset='100%' style='stop-color:white' /> </radialGradient> </defs> <circle cx='50' cy='50' r='40' stroke='#00cec9' stroke-width='5' fill='url(#g2)' /> <text class='text' x='50' y='50' text-anchor='middle' stroke='white' stroke-width='1px' dy='.2em'>0%</text> </svg> </div>",
        "css": ".container { position: relative; margin: 50px auto 0 auto; width: 200px; height: 200px; } .btn { width: 170px; height: 40px; background: #00cec9; color: white; border: none; cursor: pointer; font-size: 1.3em; position: absolute; transform: scaleX(1); transition: transform 1s ease, opacity 0.8s ease; border-radius: 40px; } .btn:focus { outline: none; } .btn-class:focus { transform: scaleX(0.5); opacity: 0; } .btn-class:focus + svg { transform: scale(1); opacity: 1; } svg { position: absolute; left: 18%; top: -15%; transform: scale(0); opacity: 0; stroke-dasharray: 1000; stroke-dashoffset: 1000; transition: transform 1s ease, opacity 0.5s ease, stroke-dashoffset 0.1s ease; } text { font-size: 18px; font-family: sans-serif; fill: white; }",
        "js": "var btn = document.getElementsByClassName('btn')[0]; var text = document.getElementsByClassName('text')[0]; var svg = document.getElementsByClassName('svg')[0]; var clearInt; var counter = 0; function go() { btn.classList.add('btn-class'); counter = 0; ani(); } function ani() { clearInt = setInterval(() => { counter = counter + 1; text.innerHTML = counter + '%'; svg.style.strokeDashoffset = 1000 - counter * 2.5; if (counter === 100) setInitial(); }, 90); } function setInitial() { clearInterval(clearInt); btn.classList.remove('btn-class'); counter = 0; text.innerHTML = '0 %'; svg.style.strokeDashoffset = 1000; }"
      },
      {
        "id": 20,
        "author": "VanBao",
        "type": "Button",
        "title": "Particle Explosion",
        "html": "<button class='particle-btn'>Click Me</button>",
        "css": ".particle-btn { padding: 1rem 2rem; background: #f59e0b; color: white; border: none; border-radius: 8px; cursor: pointer; position: relative; overflow: hidden; } .particle { position: absolute; background: white; border-radius: 50%; pointer-events: none; animation: explode 0.6s ease-out forwards; } @keyframes explode { 0% { transform: scale(0); opacity: 1; } 100% { transform: scale(2); opacity: 0; } }",
        "js": "document.querySelector('.particle-btn').addEventListener('click', (e) => { for(let i = 0; i < 30; i++) { createParticle(e.clientX, e.clientY); } }); function createParticle(x, y) { const particle = document.createElement('div'); particle.className = 'particle'; const size = Math.random() * 8 + 4; particle.style.width = `${size}px`; particle.style.height = `${size}px`; const destinationX = x + (Math.random() - 0.5) * 100; const destinationY = y + (Math.random() - 0.5) * 100; particle.style.left = `${destinationX}px`; particle.style.top = `${destinationY}px`; document.body.appendChild(particle); setTimeout(() => { particle.remove(); }, 600); }"
      },
      {
        "id": 21,
        "author": "VanBao",
        "type": "Button",
        "title": "Magnetic Pull Button",
        "html": "<button class='magnetic-button'>Pull Me</button>",
        "css": ".magnetic-button { padding: 1rem 2rem; background: linear-gradient(45deg, #3b82f6, #8b5cf6); color: white; border: none; border-radius: 8px; cursor: pointer; transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1); }",
        "js": "const btn = document.querySelector('.magnetic-button'); btn.addEventListener('mousemove', (e) => { const rect = btn.getBoundingClientRect(); const x = e.clientX - rect.left - rect.width / 2; const y = e.clientY - rect.top - rect.height / 2; const multiplier = 0.2; btn.style.transform = `translate(${x * multiplier}px, ${y * multiplier}px)`; }); btn.addEventListener('mouseleave', () => { btn.style.transform = 'translate(0, 0)'; });"
      },
      {
        "id": 22,
        "author": "VanBao",
        "type": "Button",
        "title": "Pulse Ring Button",
        "html": "<button class='pulse-ring'>Click Me</button>",
        "css": ".pulse-ring { position: relative; padding: 1rem 2rem; background: #10b981; color: white; border: none; border-radius: 8px; cursor: pointer; } .pulse-ring::before { content: ''; position: absolute; width: 100%; height: 100%; top: 0; left: 0; border-radius: inherit; animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite; } @keyframes pulse { 0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.7); } 70% { transform: scale(1); box-shadow: 0 0 0 10px rgba(16, 185, 129, 0); } 100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(16, 185, 129, 0); } }",
        "js": ""
      },
      {
        "id": 23,
        "author": "VanBao",
        "type": "Button",
        "title": "Liquid Button",
        "html": "<button class='liquid-btn'><span>Click Me</span><div class='liquid'></div></button>",
        "css": ".liquid-btn { position: relative; padding: 1rem 2rem; background: #4f46e5; border: none; color: white; font-weight: bold; border-radius: 8px; overflow: hidden; cursor: pointer; } .liquid { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 200%; height: 400%; background: rgba(255, 255, 255, 0.2); border-radius: 45%; animation: liquid 6s ease-in-out infinite; } @keyframes liquid { 0% { transform: translate(-50%, -75%) rotate(0deg); } 100% { transform: translate(-50%, -75%) rotate(360deg); } }",
        "js": ""
      },
      {
        "id": 24,
        "type": "Button",
        "author": "Thanh Tự",
        "title": " Phóng to dần ",
        "html": "<div class='effect-1'>Scale Up</div>",
        "css": ".effect-1 { width: 150px; height: 150px; background: #3498db; color: white; display: flex; justify-content: center; align-items: center; margin: 10px; border-radius: 12px; animation: scaleUp 3s infinite alternate ease-in-out; font-weight: bold; user-select: none; } @keyframes scaleUp { 0% { transform: scale(1); } 100% { transform: scale(1.3); } }",
        "js": ""
      },
      {
        "id": 25,
        "type": "Button",
        "author": "Thanh Tự",
        "title": "Chuyển màu nền liên tục",
        "html": "<div class='effect-2'></div>",
        "css": ".effect-2 { width: 150px; height: 150px; background: #e74c3c; color: white; margin: 10px; border-radius: 12px; font-weight: bold; display: flex; justify-content: center; align-items: center; animation: bgColorChange 4s infinite alternate ease-in-out; user-select: none; } @keyframes bgColorChange { 0% { background-color: #e74c3c; } 50% { background-color: #f1c40f; } 100% { background-color: #e74c3c; } }",
        "js": ""
      },
      {
        "id": 26,
        "type": "Button",
        "author": "Thanh Tự",
        "title": "Dịch chuyển ngang",
        "html": "<div class='effect-3'>Translate X</div>",
        "css": ".effect-3 { width: 150px; height: 150px; background: #27ae60; color: white; margin: 10px; border-radius: 12px; font-weight: bold; display: flex; justify-content: center; align-items: center; animation: translateXAnim 3s infinite alternate ease-in-out; user-select: none; } @keyframes translateXAnim { 0% { transform: translateX(0); } 100% { transform: translateX(50px); } }",
        "js": ""
      },
      {
        "id": 27,
        "type": "Button",
        "author": "Thanh Tự",
        "title": "Đảo chiều xoay",
        "html": "<div class='effect-4'>Rotate</div>",
        "css": ".effect-4 { width: 150px; height: 150px; background: #9b59b6; color: white; margin: 10px; border-radius: 12px; font-weight: bold; display: flex; justify-content: center; align-items: center; animation: rotateBackForth 4s infinite ease-in-out; user-select: none; } @keyframes rotateBackForth { 0%, 100% { transform: rotate(-15deg); } 50% { transform: rotate(15deg); } }",
        "js": ""
      },
      {
        "id": 28,
        "type": "Button",
        "author": "Thanh Tự",
        "title": "Hiệu ứng: Mờ dần",
        "html": "<div class='effect-5'>Fade In/Out</div>",
        "css": ".effect-5 { width: 150px; height: 150px; background: #f39c12; color: white; margin: 10px; border-radius: 12px; font-weight: bold; display: flex; justify-content: center; align-items: center; animation: fadeInOut 5s infinite ease-in-out; user-select: none; } @keyframes fadeInOut { 0%, 100% { opacity: 1; } 50% { opacity: 0.2; } }",
        "js": ""
      },
      {
        "id": 29,
        "type": "Button",
        "author": "Thanh Tự",
        "title": " Độ sáng thay đổi ",
        "html": "<div class='effect-6'>Brightness Pulse</div>",
        "css": ".effect-6 { width: 150px; height: 150px; background: #2980b9; color: white; margin: 10px; border-radius: 12px; font-weight: bold; display: flex; justify-content: center; align-items: center; animation: brightnessPulse 3s infinite ease-in-out; user-select: none; } @keyframes brightnessPulse { 0%, 100% { filter: brightness(1); } 50% { filter: brightness(1.5); } }",
        "js": ""
      },
      {
        "id": 30,
        "type": "Button",
        "author": "Thanh Tự",
        "title": "Hiệu ứng: Xoay 3D liên tục",
        "html": "<div class='effect-10'>3D Spin</div>",
        "css": ".effect-10 { width: 150px; height: 150px; background: #16a085; color: white; margin: 10px; border-radius: 12px; font-weight: bold; display: flex; justify-content: center; align-items: center; perspective: 600px; animation: spin3D 5s linear infinite; user-select: none; } @keyframes spin3D { 0% { transform: rotateY(0deg) rotateX(0deg); } 100% { transform: rotateY(360deg) rotateX(360deg); } }",
        "js": ""
      },
      {
        "id": 31,
        "type": "Button",
        "author": "Thanh Tự",
        "title": "Hiệu ứng “đập nhịp”",
        "html": "<div class='heartbeat-box'>Heartbeat</div>",
        "css": ".heartbeat-box { width: 160px; height: 160px; background-color: #e74c3c; color: white; font-weight: bold; display: flex; justify-content: center; align-items: center; border-radius: 16px; animation: heartbeat 1.5s infinite; user-select: none; } @keyframes heartbeat { 0%, 100% { transform: scale(1); } 25% { transform: scale(1.1); } 50% { transform: scale(1.15); } 75% { transform: scale(1.1); } }",
        "js": ""
      },
      {
        "id": 32,
        "type": "Button",
        "author": "Thanh Tự",
        "title": "Button chữ chạy ngang từ trái sang phải",
        "html": "<button class='btn-text-slide'>Hover me</button>",
        "css": ".btn-text-slide { position: relative; padding: 14px 36px; background-color: #27ae60; color: white; border: none; font-weight: bold; border-radius: 8px; overflow: hidden; cursor: pointer; } .btn-text-slide span { position: relative; display: inline-block; animation: slideText 3s linear infinite; } @keyframes slideText { 0% { transform: translateX(-100%); } 100% { transform: translateX(100%); } }",
        "js": "const btnTextSlide = document.querySelector('.btn-text-slide'); btnTextSlide.innerHTML = `<span>${btnTextSlide.textContent}</span>`;"
      },
      {
        "id": 33,
        "type": "Button",
        "author": "Thanh Tự",
        "title": "Button xoay 360 độ kết hợp phóng to",
        "html": "<button class='btn-spin-scale'>Hover me</button>",
        "css": ".btn-spin-scale { padding: 14px 36px; background-color: #27ae60; border: none; border-radius: 8px; color: white; font-weight: bold; cursor: pointer; transition: transform 0.6s ease; } .btn-spin-scale:hover { transform: rotate(360deg) scale(1.2); }",
        "js": ""
      },
      {
        "id": 34,
        "type": "Button",
        "author": "Thanh Tự",
        "title": "Box chuyển động “bóng bay”",
        "html": "<div class='box-float'>Floating</div>",
        "css": ".box-float { width: 300px; height: 140px; background: #8e44ad; color: white; font-size: 24px; border-radius: 12px; display: flex; justify-content: center; align-items: center; user-select: none; transition: transform 0.5s ease; cursor: pointer; }",
        "js": "const boxFloat = document.querySelector('.box-float'); let direction = 1; let position = 0; setInterval(() => { if (position > 15) direction = -1; if (position < 0) direction = 1; position += direction; boxFloat.style.transform = `translateY(${-position}px)`; }, 50);"
      },
      {
        "id": 35,
        "type": "Button",
        "author": "Thanh Tự",
        "title": "Button hiệu ứng “bong bóng nổ”",
        "html": "<button class='btn-bubble-burst'>Click me</button>",
        "css": ".btn-bubble-burst { position: relative; padding: 14px 40px; background: #e74c3c; color: white; border: none; font-weight: bold; border-radius: 8px; cursor: pointer; overflow: visible; user-select: none; } .bubble { position: absolute; border-radius: 50%; background: rgba(255,255,255,0.7); pointer-events: none; animation: bubbleBurst 0.7s ease forwards; } @keyframes bubbleBurst { to { opacity: 0; transform: scale(3); } }",
        "js": "const btnBubbleBurst = document.querySelector('.btn-bubble-burst'); btnBubbleBurst.addEventListener('click', e => { for(let i = 0; i < 10; i++) { const bubble = document.createElement('div'); bubble.classList.add('bubble'); bubble.style.width = bubble.style.height = Math.random() * 10 + 10 + 'px'; bubble.style.left = e.clientX - btnBubbleBurst.getBoundingClientRect().left + (Math.random() * 30 - 15) + 'px'; bubble.style.top = e.clientY - btnBubbleBurst.getBoundingClientRect().top + (Math.random() * 30 - 15) + 'px'; btnBubbleBurst.appendChild(bubble); setTimeout(() => bubble.remove(), 700); } });"
      },
      {
        "id": 46,
        "type": "Button",
        "author": "Thanh Tự",
        "title": " Box “vẫy tay” khi hover",
        "html": "<div class='box-wave'>Hover me</div>",
        "css": ".box-wave { width: 300px; height: 140px; background: #27ae60; color: white; font-size: 24px; border-radius: 12px; display: flex; justify-content: center; align-items: center; user-select: none; transition: transform 0.3s ease; cursor: pointer; }",
        "js": "const boxWave = document.querySelector('.box-wave'); boxWave.addEventListener('mouseenter', () => { let count = 0; const waveInterval = setInterval(() => { if(count > 5) { clearInterval(waveInterval); boxWave.style.transform = 'rotate(0deg)'; return; } const angle = count % 2 === 0 ? 15 : -15; boxWave.style.transform = `rotate(${angle}deg)`; count++; }, 200); });"
      },
      {
        "id": 37,
        "type": "Button",
        "author": "Thanh Tự",
        "title": "Box nhấp nháy đổi màu nền liên tục",
        "html": "<div class='box-color-flicker'>Color Flicker</div>",
        "css": ".box-color-flicker { width: 300px; height: 140px; font-size: 24px; color: white; border-radius: 12px; display: flex; justify-content: center; align-items: center; user-select: none; cursor: pointer; background-color: #16a085; animation: flickerColors 4s linear infinite; } @keyframes flickerColors { 0% { background-color: #16a085; } 25% { background-color: #27ae60; } 50% { background-color: #2ecc71; } 75% { background-color: #1abc9c; } 100% { background-color: #16a085; } }",
        "js": ""
      },
      {
        "id": 38,
        "type": "Button",
        "author": "Thanh Tự",
        "title": " Button xoay và phóng to chậm rãi",
        "html": "<button class='btn-spin-scale-slow'>Hover me</button>",
        "css": ".btn-spin-scale-slow { padding: 14px 40px; background: #c0392b; color: white; border-radius: 8px; border: none; font-weight: bold; cursor: pointer; transition: transform 1s ease; } .btn-spin-scale-slow:hover { transform: rotate(360deg) scale(1.3); }",
        "js": ""
      },
      {
        "id": 39,
        "type": "Button",
        "author": "Thanh Tự",
        "title": "Box “nhấp nháy” theo thời gian",
        "html": "<div class='box-js-flicker'>JS Flicker</div>",
        "css": ".box-js-flicker { width: 300px; height: 140px; background-color: #9b59b6; color: white; font-size: 24px; border-radius: 12px; display: flex; justify-content: center; align-items: center; user-select: none; cursor: pointer; transition: opacity 0.2s ease; }",
        "js": "const boxJSFlicker = document.querySelector('.box-js-flicker'); setInterval(() => { boxJSFlicker.style.opacity = boxJSFlicker.style.opacity === '0.5' ? '1' : '0.5'; }, 800);"
      },
      {
        "id": 40,
        "type": "Button",
        "author": "Thanh Tự",
        "title": "Button “sấm sét” nhanh",
        "html": "<button class='btn-flash-quick'>Hover me</button>",
        "css": ".btn-flash-quick { padding: 14px 40px; background-color: #c0392b; color: white; border-radius: 8px; border: none; font-weight: bold; cursor: pointer; transition: box-shadow 0.2s ease; } .btn-flash-quick:hover { box-shadow: 0 0 15px 5px #c0392b; animation: flashQuick 0.3s ease-in-out infinite alternate; } @keyframes flashQuick { 0% { box-shadow: 0 0 10px #c0392b; } 100% { box-shadow: 0 0 20px #c0392b; } }",
        "js": ""
      },
      {
        "id": 41,
        "type": "Button",
        "author": "Thanh Tự",
        "title": "Box hiệu ứng “vùng sáng” theo chuột",
        "html": "<div class='box-light-area'>Hover me</div>",
        "css": ".box-light-area { width: 300px; height: 140px; background-color: #2980b9; color: white; font-size: 24px; border-radius: 12px; text-align: center; line-height: 140px; cursor: pointer; position: relative; overflow: hidden; user-select: none; } .light-area { position: absolute; width: 100px; height: 100px; background: radial-gradient(circle, rgba(255,255,255,0.7) 0%, transparent 80%); pointer-events: none; top: 50%; left: 50%; transform: translate(-50%, -50%); transition: top 0.1s ease, left 0.1s ease; opacity: 0; }",
        "js": "const boxLightArea = document.querySelector('.box-light-area'); const lightArea = document.createElement('div'); lightArea.classList.add('light-area'); boxLightArea.appendChild(lightArea); boxLightArea.addEventListener('mousemove', e => { const rect = boxLightArea.getBoundingClientRect(); lightArea.style.top = (e.clientY - rect.top) + 'px'; lightArea.style.left = (e.clientX - rect.left) + 'px'; lightArea.style.opacity = '1'; }); boxLightArea.addEventListener('mouseleave', () => { lightArea.style.opacity = '0'; });"
      },
      {
        "id": 42,
        "type": "Button",
        "author": "Thanh Tự",
        "title": "Button ripple sóng lan tỏa khi click",
        "html": "<button class='btn-ripple'>Click me</button>",
        "css": ".btn-ripple { position: relative; overflow: hidden; padding: 14px 40px; background-color: #e67e22; color: white; border-radius: 8px; border: none; cursor: pointer; font-weight: bold; } .ripple-effect { position: absolute; border-radius: 50%; background: rgba(255, 255, 255, 0.6); transform: scale(0); animation: rippleAnim 0.6s linear; pointer-events: none; } @keyframes rippleAnim { to { transform: scale(4); opacity: 0; } }",
        "js": "document.querySelector('.btn-ripple').addEventListener('click', function(e) { const btn = e.currentTarget; const ripple = document.createElement('span'); ripple.classList.add('ripple-effect'); const rect = btn.getBoundingClientRect(); const size = Math.max(rect.width, rect.height); ripple.style.width = ripple.style.height = size + 'px'; ripple.style.left = e.clientX - rect.left - size/2 + 'px'; ripple.style.top = e.clientY - rect.top - size/2 + 'px'; btn.appendChild(ripple); setTimeout(() => ripple.remove(), 600); });"
      },
      {
        "id": 43,
        "type": "Button",
        "author": "Thanh Tự",
        "title": " Button chữ trượt ngang liên tục",
        "html": "<button class='btn-slide-text'><span>Sliding Text</span></button>",
        "css": ".btn-slide-text { position: relative; padding: 14px 40px; background-color: #27ae60; color: white; border: none; border-radius: 8px; font-weight: bold; cursor: pointer; overflow: hidden; } .btn-slide-text span { display: inline-block; white-space: nowrap; animation: slideText 4s linear infinite; } @keyframes slideText { 0% { transform: translateX(100%); } 100% { transform: translateX(-200%); } }",
        "js": ""
      },
      {
        "id": 44,
        "type": "Button",
        "author": "Thanh Tự",
        "title": "Button “nhảy”",
        "html": "<button class='btn-pulse-hover'>Hover me</button>",
        "css": ".btn-pulse-hover { padding: 14px 40px; background-color: #e74c3c; color: white; border-radius: 8px; border: none; font-weight: bold; cursor: pointer; transition: transform 0.3s ease; } .btn-pulse-hover:hover { animation: pulseAnim 0.6s forwards; } @keyframes pulseAnim { 50% { transform: scale(1.1); } 100% { transform: scale(1); } }",
        "js": ""
      },

      {
        "id": 45,
        "author": "VanBao",
        "type": "Card",
        "title": "Morphing Shape Card",
        "html": "<div class='morph-shape'></div>",
        "css": ".morph-shape { width: 200px; height: 200px; background: linear-gradient(45deg, #3b82f6, #8b5cf6); animation: morphing 8s ease-in-out infinite; } @keyframes morphing { 0% { border-radius: 60% 40% 30% 70%/60% 30% 70% 40%; } 50% { border-radius: 30% 60% 70% 40%/50% 60% 30% 60%; } 100% { border-radius: 60% 40% 30% 70%/60% 30% 70% 40%; } }",
        "js": ""
      },
      {
        "id": 46,
        "author": "VanBao",
        "type": "Card",
        "title": "Perspective Tilt Card",
        "html": "<div class='tilt-card'><h3>Tilt Effect</h3><p>Move your mouse</p></div>",
        "css": ".tilt-card { padding: 2rem; background: white; border-radius: 15px; box-shadow: 0 10px 30px rgba(0,0,0,0.1); transition: transform 0.3s ease; transform-style: preserve-3d; }",
        "js": "const card = document.querySelector('.tilt-card'); card.addEventListener('mousemove', (e) => { const rect = card.getBoundingClientRect(); const x = e.clientX - rect.left; const y = e.clientY - rect.top; const centerX = rect.width / 2; const centerY = rect.height / 2; const rotateX = (y - centerY) / 10; const rotateY = (centerX - x) / 10; card.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`; }); card.addEventListener('mouseleave', () => { card.style.transform = 'perspective(1000px) rotateX(0) rotateY(0)'; });"
      },
      {
        "id": 47,
        "author": "VanBao",
        "type": "Card",
        "title": "Floating Card",
        "html": "<div class='floating-card'><h3>Floating Card</h3><p>Smooth animation</p></div>",
        "css": ".floating-card { padding: 2rem; background: white; border-radius: 15px; box-shadow: 0 10px 20px rgba(0,0,0,0.1); animation: floating 3s ease-in-out infinite; } @keyframes floating { 0%, 100% { transform: translateY(0) rotate(0deg); } 50% { transform: translateY(-20px) rotate(2deg); } }",
        "js": ""
      }
    ]
  },
  {
    "category": "scroll",
    "effects": [
      {
        "id": 1,
        "author": "VanBao",
        "type": "Text",
        "title": "Fade In Up",
        "html": "<div class='scroll-fade-up'>Fade Up Effect</div>",
        "css": ".scroll-fade-up { opacity: 0; transform: translateY(50px); transition: all 1s cubic-bezier(0.4, 0, 0.2, 1); } .scroll-fade-up.visible { opacity: 1; transform: translateY(0); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-fade-up'));"
      },
      {
        "id": 2,
        "author": "VanBao",
        "type": "Text",
        "title": "Slide From Left",
        "html": "<div class='scroll-slide-left'>Slide Left</div>",
        "css": ".scroll-slide-left { opacity: 0; transform: translateX(-100px); transition: all 0.8s ease-out; } .scroll-slide-left.visible { opacity: 1; transform: translateX(0); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-slide-left'));"
      },
      {
        "id": 3,
        "author": "VanBao",
        "type": "Card",
        "title": "Scale Up",
        "html": "<div class='scroll-scale'>Scale Effect</div>",
        "css": ".scroll-scale { opacity: 0; transform: scale(0.5); transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1); } .scroll-scale.visible { opacity: 1; transform: scale(1); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-scale'));"
      },
      {
        "id": 4,
        "author": "VanBao",
        "type": "Text",
        "title": "Rotate In",
        "html": "<div class='scroll-rotate'>Rotate Effect</div>",
        "css": ".scroll-rotate { opacity: 0; transform: rotate(-180deg); transition: all 1s ease; } .scroll-rotate.visible { opacity: 1; transform: rotate(0); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-rotate'));"
      },
      {
        "id": 5,
        "author": "VanBao",
        "type": "Card",
        "title": "Flip In X",
        "html": "<div class='scroll-flip-x'>Flip X Effect</div>",
        "css": ".scroll-flip-x { opacity: 0; transform: perspective(400px) rotateX(90deg); transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1); } .scroll-flip-x.visible { opacity: 1; transform: perspective(400px) rotateX(0); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-flip-x'));"
      },
      {
        "id": 6,
        "author": "VanBao",
        "type": "Text",
        "title": "Bounce In",
        "html": "<div class='scroll-bounce'>Bounce Effect</div>",
        "css": ".scroll-bounce { opacity: 0; transform: scale(0.3); transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55); } .scroll-bounce.visible { opacity: 1; transform: scale(1); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-bounce'));"
      },
      {
        "id": 7,
        "author": "VanBao",
        "type": "Card",
        "title": "Slide Up Blur",
        "html": "<div class='scroll-blur'>Blur Effect</div>",
        "css": ".scroll-blur { opacity: 0; transform: translateY(50px); filter: blur(10px); transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1); } .scroll-blur.visible { opacity: 1; transform: translateY(0); filter: blur(0); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-blur'));"
      },
      {
        "id": 8,
        "author": "VanBao",
        "type": "Text",
        "title": "Split Letters",
        "html": "<div class='scroll-split'><span>S</span><span>p</span><span>l</span><span>i</span><span>t</span></div>",
        "css": ".scroll-split span { opacity: 0; transform: translateY(50px); transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1); } .scroll-split.visible span { opacity: 1; transform: translateY(0); } .scroll-split span:nth-child(2) { transition-delay: 0.1s; } .scroll-split span:nth-child(3) { transition-delay: 0.2s; } .scroll-split span:nth-child(4) { transition-delay: 0.3s; } .scroll-split span:nth-child(5) { transition-delay: 0.4s; }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-split'));"
      },
      {
        "id": 9,
        "author": "VanBao",
        "type": "Card",
        "title": "3D Flip",
        "html": "<div class='scroll-3d-flip'>3D Flip</div>",
        "css": ".scroll-3d-flip { opacity: 0; transform: perspective(1000px) rotateY(90deg); transition: all 1s cubic-bezier(0.4, 0, 0.2, 1); } .scroll-3d-flip.visible { opacity: 1; transform: perspective(1000px) rotateY(0); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-3d-flip'));"
      },
      {
        "id": 10,
        "author": "VanBao",
        "type": "Text",
        "title": "Elastic In",
        "html": "<div class='scroll-elastic'>Elastic Effect</div>",
        "css": ".scroll-elastic { opacity: 0; transform: scale(0); transition: all 1s cubic-bezier(0.68, -0.55, 0.265, 1.55); } .scroll-elastic.visible { opacity: 1; transform: scale(1); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-elastic'));"
      },
      {
        "id": 11,
        "author": "VanBao",
        "type": "Card",
        "title": "Zoom Blur",
        "html": "<div class='scroll-zoom-blur'>Zoom Blur</div>",
        "css": ".scroll-zoom-blur { opacity: 0; transform: scale(1.5); filter: blur(10px); transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1); } .scroll-zoom-blur.visible { opacity: 1; transform: scale(1); filter: blur(0); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-zoom-blur'));"
      },
      {
        "id": 12,
        "author": "VanBao",
        "type": "Text",
        "title": "Slide Stagger",
        "html": "<div class='scroll-stagger'><div>First</div><div>Second</div><div>Third</div></div>",
        "css": ".scroll-stagger div { opacity: 0; transform: translateX(-100px); transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1); } .scroll-stagger.visible div { opacity: 1; transform: translateX(0); } .scroll-stagger div:nth-child(2) { transition-delay: 0.2s; } .scroll-stagger div:nth-child(3) { transition-delay: 0.4s; }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-stagger'));"
      },
      {
        "id": 13,
        "author": "VanBao",
        "type": "Card",
        "title": "Swing In",
        "html": "<div class='scroll-swing'>Swing Effect</div>",
        "css": ".scroll-swing { opacity: 0; transform: rotateZ(-45deg); transform-origin: left bottom; transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1); } .scroll-swing.visible { opacity: 1; transform: rotateZ(0); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-swing'));"
      },
      {
        "id": 14,
        "author": "VanBao",
        "type": "Text",
        "title": "Roll In",
        "html": "<div class='scroll-roll'>Roll Effect</div>",
        "css": ".scroll-roll { opacity: 0; transform: rotate(720deg) scale(0); transition: all 1s cubic-bezier(0.4, 0, 0.2, 1); } .scroll-roll.visible { opacity: 1; transform: rotate(0) scale(1); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-roll'));"
      },
      {
        "id": 15,
        "author": "VanBao",
        "type": "Card",
        "title": "Fold Up",
        "html": "<div class='scroll-fold'>Fold Effect</div>",
        "css": ".scroll-fold { opacity: 0; transform: perspective(400px) rotateX(-90deg); transform-origin: top; transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1); } .scroll-fold.visible { opacity: 1; transform: perspective(400px) rotateX(0); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-fold'));"
      },
      {
        "id": 16,
        "author": "VanBao",
        "type": "Text",
        "title": "Slide Rotate",
        "html": "<div class='scroll-slide-rotate'>Slide Rotate</div>",
        "css": ".scroll-slide-rotate { opacity: 0; transform: translateX(-100px) rotate(-90deg); transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1); } .scroll-slide-rotate.visible { opacity: 1; transform: translateX(0) rotate(0); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-slide-rotate'));"
      },
      {
        "id": 17,
        "author": "VanBao",
        "type": "Card",
        "title": "Scale Rotate",
        "html": "<div class='scroll-scale-rotate'>Scale Rotate</div>",
        "css": ".scroll-scale-rotate { opacity: 0; transform: scale(0.5) rotate(-180deg); transition: all 1s cubic-bezier(0.4, 0, 0.2, 1); } .scroll-scale-rotate.visible { opacity: 1; transform: scale(1) rotate(0); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-scale-rotate'));"
      },
      {
        "id": 18,
        "author": "VanBao",
        "type": "Text",
        "title": "Flip Scale",
        "html": "<div class='scroll-flip-scale'>Flip Scale</div>",
        "css": ".scroll-flip-scale { opacity: 0; transform: perspective(1000px) rotateY(90deg) scale(0.5); transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1); } .scroll-flip-scale.visible { opacity: 1; transform: perspective(1000px) rotateY(0) scale(1); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-flip-scale'));"
      },
      {
        "id": 19,
        "author": "VanBao",
        "type": "Card",
        "title": "Tilt Perspective",
        "html": "<div class='scroll-tilt'>Tilt Effect</div>",
        "css": ".scroll-tilt { opacity: 0; transform: perspective(1000px) rotateX(45deg) rotateY(45deg); transition: all 1s cubic-bezier(0.4, 0, 0.2, 1); } .scroll-tilt.visible { opacity: 1; transform: perspective(1000px) rotateX(0) rotateY(0); }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-tilt'));"
      },
      {
        "id": 20,
        "author": "VanBao",
        "type": "Text",
        "title": "Wave Stagger",
        "html": "<div class='scroll-wave'><span>W</span><span>a</span><span>v</span><span>e</span></div>",
        "css": ".scroll-wave span { display: inline-block; opacity: 0; transform: translateY(50px); transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1); } .scroll-wave.visible span { opacity: 1; transform: translateY(0); } .scroll-wave span:nth-child(1) { transition-delay: 0s; } .scroll-wave span:nth-child(2) { transition-delay: 0.1s; } .scroll-wave span:nth-child(3) { transition-delay: 0.2s; } .scroll-wave span:nth-child(4) { transition-delay: 0.3s; }",
        "js": "const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); } }); }); observer.observe(document.querySelector('.scroll-wave'));"
      }
    ]
  },
  {
    "category": "3d",
    "effects": [
      {
        "id": 1,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Text 3D đơn giản bằng text-shadow",
        "link": "",
        "html": "<section class='effect-container'><div class='text-3d-simple'>Simple 3D Text</div></section>",
        "css": ".effect-container { background: #1f1f1f; padding: 25px 20px; border-radius: 10px; box-shadow: 0 0 15px rgba(255 255 255 / 0.05); max-width: 900px; margin: 20px auto; text-align: center; } .text-3d-simple { font-size: 60px; font-weight: bold; color: #3498db; text-shadow: 1px 1px 0 #2980b9, 2px 2px 0 #2471a3, 3px 3px 0 #1b4f72, 4px 4px 5px rgba(0,0,0,0.5); user-select: none; }",
        "js": ""
      },
      {
        "id": 2,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Text 3D bóng nổi (extrude) bằng nhiều text-shadow",
        "link": "",
        "html": "<section class='effect-container'><div class='text-3d-extrude'>Extruded 3D Text</div></section>",
        "css": ".effect-container { background: #1f1f1f; padding: 25px 20px; border-radius: 10px; box-shadow: 0 0 15px rgba(255 255 255 / 0.05); max-width: 900px; margin: 20px auto; text-align: center; } .text-3d-extrude { font-size: 60px; font-weight: 900; color: #fff; text-shadow: 1px 1px 0 #e74c3c, 2px 2px 0 #c0392b, 3px 3px 0 #922b21, 4px 4px 0 #641e16; user-select: none; }",
        "js": ""
      },
      {
        "id": 3,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Text 3D bóng đậm (heavy shadow)",
        "link": "",
        "html": "<section class='effect-container'><div class='text-3d-heavy-shadow'>Heavy Shadow 3D Text</div></section>",
        "css": ".effect-container { background: #1f1f1f; padding: 25px 20px; border-radius: 10px; box-shadow: 0 0 15px rgba(255 255 255 / 0.05); max-width: 900px; margin: 20px auto; text-align: center; } .text-3d-heavy-shadow { font-size: 72px; font-weight: 700; color: #ff6f61; text-shadow: 0 1px 0 #d54b43, 0 2px 0 #d54b43, 0 3px 0 #d54b43, 0 4px 0 #d54b43, 0 5px 0 #d54b43, 0 6px 1px rgba(0,0,0,0.2), 0 0 5px rgba(0,0,0,0.1), 0 1px 3px rgba(0,0,0,0.3); user-select: none; }",
        "js": ""
      },
      {
        "id": 4,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Text 3D Neon Glow",
        "link": "",
        "html": "<section class='effect-container'><div class='text-3d-neon'>Neon Glow 3D Text</div></section>",
        "css": ".effect-container { background: #1f1f1f; padding: 25px 20px; border-radius: 10px; box-shadow: 0 0 15px rgba(255 255 255 / 0.05); max-width: 900px; margin: 20px auto; text-align: center; } .text-3d-neon { font-size: 72px; color: #0ff; text-shadow: 0 0 5px #0ff, 0 0 10px #0ff, 0 0 20px #0ff, 0 0 40px #0ff, 0 0 80px #0ff; user-select: none; }",
        "js": ""
      },
      {
        "id": 5,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Text 3D nhiều lớp bằng text-shadow chồng lên nhau",
        "link": "",
        "html": "<section class='effect-container'><div class='text-3d-multilayer'>Multi-layer 3D Text</div></section>",
        "css": ".effect-container { background: #1f1f1f; padding: 25px 20px; border-radius: 10px; box-shadow: 0 0 15px rgba(255 255 255 / 0.05); max-width: 900px; margin: 20px auto; text-align: center; } .text-3d-multilayer { font-size: 70px; font-weight: 700; color: #3498db; text-shadow: 1px 1px 0 #2980b9, 2px 2px 0 #2471a3, 3px 3px 0 #1b4f72, 4px 4px 0 #145a32, 5px 5px 0 #0f2a1f, 6px 6px 0 #0a1c13, 7px 7px 0 #051109, 8px 8px 0 #030805, 9px 9px 0 #010402, 10px 10px 5px rgba(0, 0, 0, 0.7); user-select: none; display: inline-block; }",
        "js": ""
      },
      {
        "id": 6,
        "author": "Thế Vĩnh",
        "type": "Text",
        "title": "Text 3D đổ bóng nghiêng",
        "link": "",
        "html": "<section class='effect-container'><div class='text-3d-angled'>Angled Shadow 3D Text</div></section>",
        "css": ".effect-container { background: #1f1f1f; padding: 25px 20px; border-radius: 10px; box-shadow: 0 0 15px rgba(255 255 255 / 0.05); max-width: 900px; margin: 20px auto; text-align: center; } .text-3d-angled { font-size: 60px; font-weight: 900; color: #fff; text-shadow: 3px 3px 0 #666, 6px 6px 0 #333; user-select: none; }",
        "js": ""
      },
      {
        "id": 7,
        "author": "Thế Vĩnh",
        "type": "Button",
        "title": "Nút 3D Hiệu ứng nhấn nút",
        "link": "",
        "html": "<button class='btn-3d'>Click Me</button>",
        "css": ".btn-3d { background: linear-gradient(145deg, #4a90e2, #357ABD); border: none; border-radius: 8px; color: white; padding: 12px 28px; font-size: 18px; font-weight: 600; cursor: pointer; box-shadow: 0 5px 0 #2a5dab, 0 10px 15px rgba(0, 0, 0, 0.3); transition: all 0.2s ease; user-select: none; outline: none; } .btn-3d:active { transform: translateY(7px); box-shadow: 0 1px 0 #2a5dab, 0 2px 5px rgba(0, 0, 0, 0.2); }",
        "js": ""
      },
      {
        "id": 8,
        "author": "Thế Vĩnh",
        "type": "Button",
        "title": "Nút 3D Tăng Kích Thước Hover",
        "link": "",
        "html": "<button class='btn-glow'>Click Me</button>",
        "css": ".btn-glow { background: linear-gradient(145deg, #6a11cb, #2575fc); border: none; border-radius: 12px; color: white; padding: 14px 36px; font-size: 20px; font-weight: 700; cursor: pointer; box-shadow: 0 4px 15px rgba(101, 84, 255, 0.6), inset 0 -3px 8px rgba(255, 255, 255, 0.3); transition: all 0.3s ease; user-select: none; outline: none; position: relative; overflow: hidden; } .btn-glow::before { content: ''; position: absolute; top: -50%; left: -50%; width: 200%; height: 200%; background: radial-gradient(circle at center, rgba(255,255,255,0.4), transparent 70%); transform: rotate(45deg); transition: all 0.5s ease; pointer-events: none; } .btn-glow:hover { box-shadow: 0 6px 25px rgba(101, 84, 255, 0.9), inset 0 -3px 12px rgba(255, 255, 255, 0.5); transform: translateY(-3px) scale(1.05); } .btn-glow:hover::before { top: -20%; left: -20%; background: radial-gradient(circle at center, rgba(255,255,255,0.7), transparent 70%); } .btn-glow:active { transform: translateY(2px) scale(0.98); box-shadow: 0 3px 10px rgba(101, 84, 255, 0.4), inset 0 -2px 6px rgba(255, 255, 255, 0.2); }",
        "js": ""
      },
      {
        "id": 9,
        "author": "Thế Vĩnh",
        "type": "Button",
        "title": "Nút Flip 3D",
        "link": "",
        "html": "<div class='scene' tabindex='0' role='button' aria-pressed='false'> <div class='face front'>Click Me</div> <div class='face back'>Back</div> <div class='face top'>Thanks, friend!</div> </div>",
        "css": ".scene { width: 100px; height: 50px; position: relative; transform-style: preserve-3d; transition: transform 0.8s; cursor: pointer; user-select: none; outline: none; } .scene.flipped { transform: rotateX(-90deg); } .face { position: absolute; width: 100px; height: 50px; background: rgba(0, 150, 255, 0.9); border: 1px solid #000000; box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2); display: flex; justify-content: center; align-items: center; font-size: 14px; font-weight: bold; color: white; backface-visibility: hidden; border-radius: 5px; } .front { transform: translateZ(25px); background: black; color: white; border: 1px solid white; } .back { transform: rotateY(180deg) translateZ(25px); background: white; color: black; } .top { transform: rotateX(90deg) translateZ(25px); background: white; color: black; }",
        "js": "const btn = document.querySelector('.scene'); btn.addEventListener('click', () => { btn.classList.toggle('flipped'); const pressed = btn.classList.contains('flipped'); btn.setAttribute('aria-pressed', pressed); }); btn.addEventListener('keydown', (e) => { if (e.key === 'Enter' || e.key === ' ') { e.preventDefault(); btn.click(); } });"
      },
      {
        "id": 10,
        "author": "Thế Vĩnh",
        "type": "3D Decor",
        "title": "Khung Hình 3D",
        "link": "",
        "html": "<div class='cube' id='cube'> <div class='face front'></div> <div class='face back'></div> <div class='face right'></div> <div class='face left'></div> <div class='face top'></div> <div class='face bottom'></div> </div>",
        "css": "body { background: #fff; display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh; margin: 0; perspective: 800px; font-family: Arial, sans-serif; color: #222; } .cube { position: relative; width: 120px; height: 120px; transform-style: preserve-3d; cursor: grab; border-radius: 10px; animation: turn 4s ease-in-out infinite reverse; backface-visibility: hidden; } .face { position: absolute; box-sizing: border-box; border: 2px solid rgba(0, 0, 0, 0.15); height: 120px; display: flex; justify-content: center; align-items: center; user-select: none; box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.1); text-shadow: none; } .front { width: 120px; height: 200px; transform: translateZ(60px); background: url('https://inkythuatso.com/uploads/thumbnails/800/2022/06/hinh-nen-avenger-dep-4k-cho-dien-thoai-1-04-10-10-50.jpg'); background-position: center; background-repeat: no-repeat; background-size: cover; } .back { width: 120px; height: 200px; transform: rotateY(180deg) translateZ(-50px); background: url('https://inkythuatso.com/uploads/thumbnails/800/2022/06/hinh-nen-avenger-dep-4k-cho-dien-thoai-1-04-10-10-50.jpg'); background-position: center; background-repeat: no-repeat; background-size: cover; } .right { width: 11px; height: 200px; transform: rotateY(90deg) translateZ(115px) translateX(-56px); background: linear-gradient(to bottom left, #f0f0f0, #1a1a1a); } .left { width: 11px; height: 200px; transform: rotateY(90deg) translateZ(-5px) translateX(-56px); background: linear-gradient(to bottom left, #fafafa, #121212); } .top { width: 11px; transform: rotateX(90deg) rotate(90deg) translateZ(60px) translateY(-56px) translateX(56px); background: linear-gradient(to bottom left, #f2f2f2, #141414); } .bottom { width: 11px; transform: rotateX(-90deg) translateZ(140px) rotate(90deg) translateY(-56px) translateX(-56px); background: linear-gradient(to bottom left, #e8e8e8, #101010); } @keyframes turn { from { transform: rotateY(0deg); } to{ transform: rotateY(360deg); } }",
        "js": ""
      },
      {
        "id": 11,
        "author": "Thế Vĩnh",
        "type": "3D Decor",
        "title": "Khung Trang Treo Tường 3D",
        "link": "",
        "html": "<div class='cube' id='cube'> <div class='face front'></div> <div class='face back'></div> <div class='face right'></div> <div class='face left'></div> <div class='face top'></div> <div class='face bottom'></div> <div class='group-nail'> <div class='face nail'></div> <div class='face nail'></div> <div class='face nail'></div> <div class='face nail-tip-back'></div> <div class='face nail-tip-front'></div> <div class='face nail-shaft-bottom'></div> <div class='face nail-shaft-top'></div> <div class='face nail-side-right'></div> <div class='face nail-side-left'></div> </div>",
        "css": "body { background: #fff; display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh; margin: 0; perspective: 800px; font-family: Arial, sans-serif; color: #222; } .cube { position: relative; width: 120px; height: 120px; transform-style: preserve-3d; cursor: grab; border-radius: 5px; animation: turn 5s linear infinite alternate-reverse; backface-visibility: hidden; } @keyframes turn { from { transform: rotateY(100deg); } to { transform: rotateY(-100deg); } } .face { position: absolute; box-sizing: border-box; border: 2px solid rgba(0, 0, 0, 0.15); height: 120px; display: flex; justify-content: center; align-items: center; font-size: 14px; font-weight: 700; color: #111; user-select: none; box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.1); text-shadow: none; transform-style: preserve-3d; } .front { width: 200px; height: 120px; border: 5px solid black; transform: translateZ(60px); background: url('https://static.tuoitre.vn/tto/i/s626/2017/01/18/selfie-dong-vat-1-1484705632.jpg'); background-repeat: no-repeat; background-position: center; background-size: cover; } .back { width: 200px; height: 120px; transform: rotateY(180deg) translateZ(-59px); background: rgb(83, 45, 45); } .right { width: 10px; height: 120px; transform: rotateY(90deg) translateZ(195px) translateX(-56px); background: linear-gradient(to bottom left, #f0f0f0, #1a1a1a); } .left { width: 11px; height: 120px; transform: rotateY(90deg) translateZ(-5px) translateX(-56px); background: linear-gradient(to bottom left, #fafafa, #121212); } .top { width: 200px; height: 11px; transform: rotateX(90deg) rotate(180deg) translateZ(5px) translateY(-56px); background: linear-gradient(to bottom left, #f2f2f2, #141414); } .bottom { width: 200px; height: 11px; transform: rotateX(90deg) rotate(180deg) translateZ(-111px) translateY(-56px); background: linear-gradient(to bottom left, #e8e8e8, #101010); } .group-nail { position: absolute; top: -20%; left: 80%; transform: translate(-50%, -50%) translateZ(55px); transform-style: preserve-3d; } .nail { width: 10px; height: 10px; border-radius: 50%; box-shadow: 0px 0px 1px 0px black; background: linear-gradient(to bottom left, #000000, #0f0d0d); } .nail:nth-child(1) { transform: translateZ(10px) translateY(26px) translateX(-3px); } .nail:nth-child(2) { transform: translateZ(11px) translateY(26px) translateX(-3px); } .nail:nth-child(3) { transform: translateZ(12px) translateY(26px) translateX(-3px); } .nail-tip-back { width: 5px; height: 5px; transform: translateZ(-10px) translateY(30px); box-shadow: 0px 0px 1px 0px black; background: linear-gradient(to bottom left, #000000, #0f0d0d); } .nail-tip-front { width: 5px; height: 5px; transform: translateZ(10px) translateY(30px); box-shadow: 0px 0px 1px 0px black; background: linear-gradient(to bottom left, #000000, #0f0d0d); } .nail-shaft-bottom { width: 5px; height: 20px; transform: rotateX(90deg) translateZ(-19px); box-shadow: 0px 0px 1px 0px black; background: linear-gradient(to bottom left, #000000, #0f0d0d); } .nail-shaft-top { width: 5px; height: 20px; transform: rotateX(90deg) rotateY(180deg) translateZ(23px); box-shadow: 0px 0px 1px 0px black; background: linear-gradient(to bottom left, #000000, #0f0d0d); } .nail-side-right { width: 5px; height: 20px; transform: rotateX(90deg) rotateY(90deg) translateZ(3px) translateX(21px); box-shadow: 0px 0px 1px 0px black; background: linear-gradient(to bottom left, #000000, #0f0d0d); } .nail-side-left { width: 5px; height: 20px; transform: rotateX(90deg) rotateY(-90deg) translateZ(3px) translateX(-21px); box-shadow: 0px 0px 1px 0px black; background: linear-gradient(to bottom left, #000000, #0f0d0d); }",
        "js": ""
      },
      {
        "id": 12,
        "author": "Thế Vĩnh",
        "type": "3D Decor",
        "title": "Biển Mời Chào 3D",
        "link": "",
        "html": "<div class='cube' id='cube'> <div class='face front'>WELCOME</div> <div class='face back'></div> <div class='face right'></div> <div class='face left'></div> <div class='face top'></div> <div class='face bottom'></div> </div>",
        "css": "body { background: #fff; display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh; margin: 0; perspective: 800px; font-family: Arial, sans-serif; color: #222; } .cube { position: relative; width: 120px; height: 120px; transform-style: preserve-3d; cursor: grab; border-radius: 10px; } .face { position: absolute; box-sizing: border-box; border: 2px solid rgba(0, 0, 0, 0.15); height: 120px; display: flex; justify-content: center; align-items: center; font-size: 14px; font-weight: 700; color: #111; box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.1); text-shadow: none; user-select: none; } .front { width: 200px; height: 120px; transform: translateZ(60px); background: #000; color: #0f0; font-family: 'Courier New', Courier, monospace; font-size: 28px; font-weight: 900; text-shadow: 0 0 8px #0f0, 0 0 20px #0f0, 0 0 30px #0f0, 0 0 40px #0f0, 0 0 50px #0f0; overflow: hidden; } .front::before { content: ''; position: absolute; top: 0; left: -50%; width: 50%; height: 100%; background: linear-gradient(90deg, transparent, rgba(0, 255, 0, 0.3), transparent); animation: ledMove 2s linear infinite; pointer-events: none; } @keyframes ledMove { 0% { left: -50%; } 100% { left: 150%; } } @keyframes ledBlink { 0%, 100% { opacity: 1; } 50% { opacity: 0.6; } } .front { animation: ledBlink 1.5s infinite ease-in-out; } .back { width: 200px; height: 120px; transform: rotateY(180deg) translateZ(-50px); background: linear-gradient(135deg, #022c22, #001d11); } .right { width: 10px; height: 120px; transform: rotateY(90deg) translateZ(195px) translateX(-56px); background: linear-gradient(135deg, #004400, #001400); box-shadow: inset 0 0 15px #00ff00aa; } .left { width: 11px; height: 120px; transform: rotateY(90deg) translateZ(-5px) translateX(-56px); background: linear-gradient(135deg, #003300, #001100); box-shadow: inset 0 0 15px #00cc00aa; } .top { width: 200px; height: 11px; transform: rotateX(90deg) rotate(180deg) translateZ(5px) translateY(-56px); background: linear-gradient(135deg, #005500, #002200); box-shadow: inset 0 0 20px #00ff00cc; } .bottom { width: 200px; height: 11px; transform: rotateX(90deg) rotate(180deg) translateZ(-115px) translateY(-56px); background: linear-gradient(135deg, #004400, #001a00); box-shadow: inset 0 0 20px #00cc00bb; }",
        "js": "const cube = document.getElementById('cube'); let rotateX = 0; let rotateY = 0; let dragging = false; let lastX, lastY; const autoRotateSpeed = 0.2; function updateRotation() { cube.style.transform = `rotateX(${rotateX}deg) rotateY(${rotateY}deg)`; } function autoRotate() { if (!dragging) { rotateY += autoRotateSpeed; rotateX += autoRotateSpeed / 2; rotateX = Math.min(Math.max(rotateX, -90), 90); updateRotation(); } requestAnimationFrame(autoRotate); } cube.addEventListener('mousedown', (e) => { dragging = true; lastX = e.clientX; lastY = e.clientY; cube.style.transition = 'none'; }); window.addEventListener('mouseup', () => { dragging = false; cube.style.transition = 'transform 0.5s'; }); window.addEventListener('mousemove', (e) => { if (!dragging) return; const deltaX = e.clientX - lastX; const deltaY = e.clientY - lastY; rotateY += deltaX * 0.5; rotateX -= deltaY * 0.5; rotateX = Math.min(Math.max(rotateX, -90), 90); updateRotation(); lastX = e.clientX; lastY = e.clientY; }); updateRotation();"
      },
      {
        "id": 13,
        "author": "Thế Vĩnh",
        "type": "3D Decor",
        "title": "Hiệu ứng phân tán mảnh vỡ 3D",
        "link": "",
        "html": "<div class='mirror' id='mirror'> <div class='face front'>Click </div> <div class='face back'> </div> <div class='piece_of_glass piece1'></div> <div class='piece_of_glass piece2'></div> <div class='piece_of_glass piece3'></div> <div class='piece_of_glass piece4'></div> <div class='piece_of_glass piece5'></div> <div class='piece_of_glass piece6'></div> </div>",
        "css": "body { background: #0a0f17; display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0; perspective: 1200px; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; user-select: none; } .mirror { width: 300px; height: 400px; background: linear-gradient(135deg, rgba(180, 210, 230, 0.3), rgba(130, 160, 190, 0.15)); border: 3px solid rgba(180, 210, 230, 0.5); box-shadow: inset 0 0 60px 20px rgba(180, 210, 230, 0.25), 0 20px 50px rgba(30, 60, 100, 0.9); position: relative; transform-style: preserve-3d; cursor: pointer; filter: drop-shadow(0 0 8px rgba(100, 180, 255, 0.3)); transition: transform 0.5s ease; } .face { position: absolute; width: 300px; height: 400px; box-sizing: border-box; border: 1.5px solid rgba(50, 90, 130, 0.3); display: flex; justify-content: center; align-items: center; user-select: none; background-repeat: no-repeat; background-position: center; background-size: cover; z-index: 2; transition: opacity 0.7s ease, filter 0.7s ease; opacity: 1; backface-visibility: hidden; transform-style: preserve-3d; } .face.front { background-image: url('/public/images/image1.png'); color: #224466; font-size: 2.5rem; font-weight: 600; text-shadow: 0 0 6px rgba(100, 160, 255, 0.5); filter: drop-shadow(0 0 10px rgba(180, 220, 255, 0.7)); z-index: 4; opacity: 1; transform: translateZ(20px); } .face.back { background-image: url('/public/images/image2.png'); color: #7a9cc6; font-size: 1.8rem; font-weight: 500; box-shadow: inset 0 0 80px 35px rgba(50, 130, 190, 0.5); filter: drop-shadow(0 0 15px rgba(60, 120, 200, 0.6)); border: 2px solid rgba(60, 120, 200, 0.7); z-index: 3; opacity: 0; pointer-events: none; transition: opacity 0.5s ease, filter 0.5s ease; transform: translateZ(-20px); } .piece_of_glass { position: absolute; width: var(--size, 40px); height: var(--size, 40px); background: linear-gradient(135deg, rgba(100, 180, 255, 0.75), rgba(70, 130, 200, 0.25)); opacity: 0.7; border-radius: 2px; box-shadow: 0 0 15px rgba(100, 180, 255, 0.8), inset 0 0 8px rgba(220, 240, 255, 0.9); transition: transform 1s cubic-bezier(0.4, 0, 0.2, 1), box-shadow 0.8s ease, opacity 0.5s ease; cursor: default; filter: drop-shadow(0 0 6px rgba(100, 180, 255, 0.7)); z-index: 3; will-change: transform, box-shadow; transform-style: preserve-3d; } .piece1 { --size: 42px; top: 28px; left: 26px; transform: rotate(15deg) translateZ(0); } .piece2 { --size: 52px; top: 95px; left: 58px; transform: rotate(-10deg) translateZ(0); } .piece3 { --size: 28px; top: 185px; left: 105px; transform: rotate(8deg) translateZ(0); } .piece4 { --size: 48px; top: 248px; left: 72px; transform: rotate(-18deg) translateZ(0); } .piece5 { --size: 38px; top: 65px; left: 178px; transform: rotate(25deg) translateZ(0); } .piece6 { --size: 44px; top: 218px; left: 188px; transform: rotate(-12deg) translateZ(0); } .mirror.exploded .piece_of_glass { opacity: 0.95; box-shadow: 0 0 50px 15px rgba(100, 180, 255, 0.95), inset 0 0 25px rgba(220, 240, 255, 0.9); filter: drop-shadow(0 0 10px rgba(100, 180, 255, 0.85)); } .mirror.exploded .face.back { opacity: 1; pointer-events: auto; filter: drop-shadow(0 0 25px rgba(100, 180, 255, 0.95)); box-shadow: inset 0 0 100px 40px rgba(60, 140, 210, 0.9), 0 0 50px 15px rgba(100, 180, 255, 1); z-index: 6; transform: translateZ(0); } .mirror.exploded .face.front { opacity: 0.15; transition: opacity 0.6s ease; }",
        "js": "const mirror = document.getElementById('mirror'); const pieces = mirror.querySelectorAll('.piece_of_glass'); let exploded = false; mirror.addEventListener('click', () => { exploded = !exploded; if (exploded) { mirror.classList.add('exploded'); pieces.forEach(piece => { const angle = Math.random() * 2 * Math.PI; const distanceXY = 150 + Math.random() * 100; const distanceZ = 50 + Math.random() * 100; const x = Math.cos(angle) * distanceXY; const y = Math.sin(angle) * distanceXY; const z = distanceZ; const rotate = (Math.random() * 60) - 30; piece.style.transform = `translate3d(${x}px, ${y}px, ${z}px) rotate(${rotate}deg) scale(1.2)`; piece.style.opacity = '0.9'; piece.style.zIndex = '10'; }); } else { mirror.classList.remove('exploded'); pieces.forEach(piece => { let baseRotate = 'none'; if (piece.classList.contains('piece1')) baseRotate = 'rotate(15deg) translateZ(0)'; else if (piece.classList.contains('piece2')) baseRotate = 'rotate(-10deg) translateZ(0)'; else if (piece.classList.contains('piece3')) baseRotate = 'rotate(8deg) translateZ(0)'; else if (piece.classList.contains('piece4')) baseRotate = 'rotate(-18deg) translateZ(0)'; else if (piece.classList.contains('piece5')) baseRotate = 'rotate(25deg) translateZ(0)'; else if (piece.classList.contains('piece6')) baseRotate = 'rotate(-12deg) translateZ(0)'; piece.style.transform = baseRotate; piece.style.opacity = '0.6'; piece.style.zIndex = '3'; }); } }); </script>"
      },
      {
        "id": 14,
        "author": "Thế Vĩnh",
        "type": "Khối lập phương",
        "title": "Hộp 3D Xoay Điều Khiển",
        "link": "",
        "html": "<h3 style='text-align:center; color:#000; font-family: Arial, sans-serif;'>Hộp 3D Xoay Kéo Chuột</h3><div class='cube' id='cube'> <div class='face front'>Front</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": ".cube { position: relative; width: 120px; height: 120px; transform-style: preserve-3d; transition: transform 1s; cursor: grab; margin: 0 auto; } .cube:active { cursor: grabbing; } .face { position: absolute; width: 120px; height: 120px; background: rgba(0, 150, 255, 0.8); border: 2px solid #fff; box-sizing: border-box; display: flex; justify-content: center; align-items: center; font-size: 14px; font-weight: bold; color: white; user-select: none; } .front  { transform: translateZ(60px); background: #1e90ff; } .back   { transform: rotateY(180deg) translateZ(60px); background: #007acc; } .right  { transform: rotateY(90deg) translateZ(60px); background: #3399ff; } .left   { transform: rotateY(-90deg) translateZ(60px); background: #2673d9; } .top    { transform: rotateX(90deg) translateZ(60px); background: #4da6ff; } .bottom { transform: rotateX(-90deg) translateZ(60px); background: #0066cc; }",
        "js": "const cube = document.getElementById('cube'); let rotateX = -20; let rotateY = 20; let dragging = false; let lastX, lastY; function updateRotation() { cube.style.transform = `rotateX(${rotateX}deg) rotateY(${rotateY}deg)`; } cube.addEventListener('mousedown', (e) => { dragging = true; lastX = e.clientX; lastY = e.clientY; cube.style.transition = 'none'; }); window.addEventListener('mouseup', () => { dragging = false; cube.style.transition = 'transform 1s'; }); window.addEventListener('mousemove', (e) => { if (!dragging) return; const deltaX = e.clientX - lastX; const deltaY = e.clientY - lastY; rotateY += deltaX * 0.5; rotateX -= deltaY * 0.5; rotateX = Math.min(Math.max(rotateX, -90), 90); updateRotation(); lastX = e.clientX; lastY = e.clientY; }); updateRotation();"
      },
      {
        "id": 15,
        "author": "Thế Vĩnh",
        "type": "Khối lập phương",
        "title": "Hộp 3D Tự Xoay",
        "link": "",
        "html": "<div class='cube' id='cube'> <div class='face front'>Front</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": "body { background: #fff; display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh; margin: 0; perspective: 800px; font-family: Arial, sans-serif; color: #222; } .cube { position: relative; width: 120px; height: 120px; transform-style: preserve-3d; animation: autoRotate 15s linear infinite; cursor: default; border-radius: 10px; } .face { position: absolute; width: 120px; height: 120px; border: 2px solid rgba(0, 0, 0, 0.1); box-sizing: border-box; display: flex; justify-content: center; align-items: center; font-size: 14px; font-weight: 700; color: #222; user-select: none; text-shadow: none; } .front  { transform: translateZ(60px); background: linear-gradient(145deg, #6a11cb, #2575fc); box-shadow: 0 0 10px rgba(37, 117, 252, 0.6); color: #fff; } .back   { transform: rotateY(180deg) translateZ(60px); background: linear-gradient(145deg, #fc5c7d, #6a82fb); box-shadow: 0 0 10px rgba(252, 92, 125, 0.6); color: #fff; } .right  { transform: rotateY(90deg) translateZ(60px); background: linear-gradient(145deg, #f7971e, #ffd200); box-shadow: 0 0 10px rgba(255, 210, 0, 0.6); color: #222; } .left   { transform: rotateY(-90deg) translateZ(60px); background: linear-gradient(145deg, #11998e, #38ef7d); box-shadow: 0 0 10px rgba(56, 239, 125, 0.6); color: #222; } .top    { transform: rotateX(90deg) translateZ(60px); background: linear-gradient(145deg, #f85032, #e73827); box-shadow: 0 0 10px rgba(231, 56, 39, 0.6); color: #fff; } .bottom { transform: rotateX(-90deg) translateZ(60px); background: linear-gradient(145deg, #0f2027, #203a43, #2c5364); box-shadow: 0 0 10px rgba(44, 83, 100, 0.6); color: #fff; } @keyframes autoRotate { from { transform: rotateX(0deg) rotateY(0deg); } to { transform: rotateX(360deg) rotateY(360deg); } }",
        "js": ""
      },
      {
        "id": 16,
        "author": "Thế Vĩnh",
        "type": "Khối lập phương",
        "title": "Hiệu Ứng Khối Lập Phương Rơi Vui mắt",
        "link": "",
        "html": "<button id='btnFall'>Tạo khối</button> <div id='container'></div>",
        "css": "body { margin: 0; height: 100vh; background: #222; display: flex; flex-direction: column; justify-content: flex-start; align-items: center; perspective: 800px; font-family: Arial, sans-serif; overflow: hidden; padding-top: 20px; } button { margin-bottom: 20px; padding: 10px 20px; font-size: 16px; background: #6a11cb; border: none; color: white; border-radius: 6px; cursor: pointer; transition: background-color 0.3s ease; } button:hover { background: #2575fc; } #container { position: relative;margin-top: -10px; width: 100%; height: 80vh; overflow: visible; border: 1px solid #444; background: #111; } .cube { width: 30px; height: 30px; position: absolute; top: -10%; margin-left: -15px; transform-style: preserve-3d; cursor: grab; animation: falling 3s linear forwards; } .face { position: absolute; width: 30px; height: 30px; background: linear-gradient(45deg, #6a11cb, #2575fc); border: 1px solid #000; opacity: 0.95; box-shadow: inset 0 0 10px rgba(255, 255, 255, 0.2); } .face.front { transform: translateZ(15px); } .face.back { transform: rotateY(180deg) translateZ(15px); } .face.right { transform: rotateY(90deg) translateZ(15px); } .face.left { transform: rotateY(-90deg) translateZ(15px); } .face.top { transform: rotateX(90deg) translateZ(15px); } .face.bottom { transform: rotateX(-90deg) translateZ(15px); } @keyframes falling { 0% { transform: rotateX(0deg) rotateY(0deg); top: -10% } 20% { transform: rotateX(60deg) rotateY(60deg); top: 50% } 40% { transform: rotateX(120deg) rotateY(120deg); top: 100% } 60% { transform: rotateX(180deg) rotateY(180deg) translateX(40px); top: 85%; } 80% { transform: rotateX(240deg) rotateY(240deg) translateX(80px); top: 90% } 100% { transform: rotateX(180deg) rotateY(180deg) translateX(120px); top: 100% } }",
        "js": "const btn = document.getElementById('btnFall'); const container = document.getElementById('container'); btn.addEventListener('click', () => { const cube = document.createElement('div'); cube.classList.add('cube'); const faces = ['front', 'back', 'right', 'left', 'top', 'bottom']; faces.forEach(faceName => { const face = document.createElement('div'); face.classList.add('face', faceName); cube.appendChild(face); }); const randomLeftPercent = Math.floor(Math.random() * 80) + 10; cube.style.left = `${randomLeftPercent}%`; cube.style.marginLeft = '-15px'; container.appendChild(cube); setTimeout(() => { cube.remove(); }, 5000); });"
      },
      {
        "id": 17,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối lập phương xoay 3D tự động",
        "html": "<div class='cube1'> <div class='face front'> <img src='../../assets/logo.svg' alt=''> </div> <div class='face back'> <img src='../../assets/logo.svg' alt=''> </div> <div class='face right'> <img src='../../assets/logo.svg' alt=''> </div> <div class='face left'> <img src='../../assets/logo.svg' alt=''> </div> <div class='face top'> <img src='../../assets/logo.svg' alt=''> </div> <div class='face bottom'> <img src='../../assets/logo.svg' alt=''> </div> </div>",
        "css": ".cube1 { width: 150px; height: 150px; position: relative; margin: 50px auto; transform-style: preserve-3d; animation: rotateCube 5s linear infinite; } .face { position: absolute; width: 150px; height: 150px; background: rgba(0, 0, 0, 0.7); border: 2px solid #004080; line-height: 150px; font-weight: bold; font-size: 20px; color: white; text-align: center; } .front { transform: translateZ(75px); } .back { transform: rotateY(180deg) translateZ(75px); } .right { transform: rotateY(90deg) translateZ(75px); } .left { transform: rotateY(-90deg) translateZ(75px); } .top { transform: rotateX(90deg) translateZ(75px); } .bottom { transform: rotateX(-90deg) translateZ(75px); } @keyframes rotateCube { from { transform: rotateX(0deg) rotateY(0deg); } to { transform: rotateX(360deg) rotateY(360deg); } }",
        "js": ""
      },
      {
        "id": 18,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": " Khối lập phương xoay theo chuột",
        "html": "<div class='cube2'> <div class='face front'>Front</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": ".cube2 { width: 150px; height: 150px; margin: 50px auto; position: relative; transform-style: preserve-3d; transition: transform 0.1s; } .face { position: absolute; width: 150px; height: 150px; background: rgba(1, 1, 1, 0.7); border: 2px solid #efefef; line-height: 150px; font-weight: bold; font-size: 20px; color: white; text-align: center; } .front { transform: translateZ(75px); } .back { transform: rotateY(180deg) translateZ(75px); } .right { transform: rotateY(90deg) translateZ(75px); } .left { transform: rotateY(-90deg) translateZ(75px); } .top { transform: rotateX(90deg) translateZ(75px); } .bottom { transform: rotateX(-90deg) translateZ(75px); }",
        "js": "const cube2 = document.querySelector('.cube2'); document.addEventListener('mousemove', e => { const x = e.clientX / window.innerWidth - 0.5; const y = e.clientY / window.innerHeight - 0.5; cube2.style.transform = `rotateX(${y * 360}deg) rotateY(${x * 360}deg)`; });"
      },
      {
        "id": 19,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối lập phương lật khi hover",
        "html": "<div class='cube3'> <div class='face front'>Front</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": ".cube3 { width: 150px; height: 150px; margin: 50px auto; position: relative; transform-style: preserve-3d; transition: transform 1s; } .cube3:hover { transform: rotateY(180deg); } .face { position: absolute; width: 150px; height: 150px; background: rgba(125, 125, 125, 0.7); border: 2px solid #010c06; line-height: 150px; font-weight: bold; font-size: 20px; color: white; text-align: center; } .front { transform: translateZ(75px); } .back { transform: rotateY(180deg) translateZ(75px); } .right { transform: rotateY(90deg) translateZ(75px); } .left { transform: rotateY(-90deg) translateZ(75px); } .top { transform: rotateX(90deg) translateZ(75px); } .bottom { transform: rotateX(-90deg) translateZ(75px); }",
        "js": ""
      },
      {
        "id": 20,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": " Khối lập phương xoay theo trục X",
        "html": "<div class='cube4'> <div class='face front'>Front</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": ".cube4 { width: 150px; height: 150px; margin: 50px auto; position: relative; transform-style: preserve-3d; } .face { position: absolute; width: 150px; height: 150px; background: rgba(255, 50, 50, 0.7); border: 2px solid #800000; line-height: 150px; font-weight: bold; font-size: 20px; color: white; text-align: center; } .front { transform: translateZ(75px); } .back { transform: rotateY(180deg) translateZ(75px); } .right { transform: rotateY(90deg) translateZ(75px); } .left { transform: rotateY(-90deg) translateZ(75px); } .top { transform: rotateX(90deg) translateZ(75px); } .bottom { transform: rotateX(-90deg) translateZ(75px); }",
        "js": "let angleX = 0; const cube4 = document.querySelector('.cube4'); function rotate() { angleX += 1; cube4.style.transform = `rotateX(${angleX}deg)`; requestAnimationFrame(rotate); } rotate();"
      },
      {
        "id": 21,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối lập phương xoay tròn và đổi màu",
        "html": "<div class='cube6'> <div class='face front'>1</div> <div class='face back'>2</div> <div class='face right'>3</div> <div class='face left'>4</div> <div class='face top'>5</div> <div class='face bottom'>6</div> </div>",
        "css": ".cube6 { width: 150px; height: 150px; margin: 50px auto; position: relative; transform-style: preserve-3d; } .face { position: absolute; width: 150px; height: 150px; border: 2px solid #222; line-height: 150px; font-weight: bold; font-size: 24px; color: white; text-align: center; } .front { transform: translateZ(75px); background: red; } .back { transform: rotateY(180deg) translateZ(75px); background: orange; } .right { transform: rotateY(90deg) translateZ(75px); background: yellow; color: black; } .left { transform: rotateY(-90deg) translateZ(75px); background: green; } .top { transform: rotateX(90deg) translateZ(75px); background: blue; } .bottom { transform: rotateX(-90deg) translateZ(75px); background: purple; }",
        "js": "let angle = 0; const cube6 = document.querySelector('.cube6'); function animate() { angle += 1; cube6.style.transform = `rotateX(${angle}deg) rotateY(${angle}deg)`; requestAnimationFrame(animate); } animate();"
      },
      {
        "id": 22,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối lập phương xoay và bật sáng khi hover",
        "html": "<div class='cube7'> <div class='face front'>Front</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": ".cube7 { width: 150px; height: 150px; margin: 50px auto; position: relative; transform-style: preserve-3d; transition: box-shadow 0.5s; animation: rotate7 10s linear infinite; } .cube7:hover { box-shadow: 0 0 30px 10px rgba(255,255,255,0.8); } .face { position: absolute; width: 150px; height: 150px; background: rgba(100, 100, 255, 0.8); border: 2px solid #5555ff; line-height: 150px; font-weight: bold; font-size: 20px; color: white; text-align: center; } .front { transform: translateZ(75px); } .back { transform: rotateY(180deg) translateZ(75px); } .right { transform: rotateY(90deg) translateZ(75px); } .left { transform: rotateY(-90deg) translateZ(75px); } .top { transform: rotateX(90deg) translateZ(75px); } .bottom { transform: rotateX(-90deg) translateZ(75px); } @keyframes rotate7 { from { transform: rotateX(0) rotateY(0); } to { transform: rotateX(360deg) rotateY(360deg); } }",
        "js": ""
      },
      {
        "id": 23,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": " Khối lập phương phóng to nhỏ liên tục",
        "html": "<div class='cube8'> <div class='face front'>Pulse</div> <div class='face back'>Pulse</div> <div class='face right'>Pulse</div> <div class='face left'>Pulse</div> <div class='face top'>Pulse</div> <div class='face bottom'>Pulse</div> </div>",
        "css": ".cube8 { width: 150px; height: 150px; margin: 50px auto; position: relative; transform-style: preserve-3d; animation: pulse 2s infinite ease-in-out; } .face { position: absolute; width: 150px; height: 150px; background: #ee5577; border: 2px solid #cc3366; line-height: 150px; font-weight: bold; font-size: 20px; color: white; text-align: center; } .front { transform: translateZ(75px); } .back { transform: rotateY(180deg) translateZ(75px); } .right { transform: rotateY(90deg) translateZ(75px); } .left { transform: rotateY(-90deg) translateZ(75px); } .top { transform: rotateX(90deg) translateZ(75px); } .bottom { transform: rotateX(-90deg) translateZ(75px); } @keyframes pulse { 0%, 100% { transform: scale(1) rotateX(0) rotateY(0); } 50% { transform: scale(1.2) rotateX(180deg) rotateY(180deg); } }",
        "js": ""
      },
      {
        "id": 24,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối lập phương nghiêng nhẹ 3D",
        "html": "<div class='cube9'> <div class='face front'>Tilt</div> <div class='face back'>Tilt</div> <div class='face right'>Tilt</div> <div class='face left'>Tilt</div> <div class='face top'>Tilt</div> <div class='face bottom'>Tilt</div> </div>",
        "css": ".cube9 { width: 150px; height: 150px; margin: 50px auto; position: relative; transform-style: preserve-3d; animation: tilt 3s ease-in-out infinite alternate; } .face { position: absolute; width: 150px; height: 150px; background: #55aaff; border: 2px solid #2277cc; line-height: 150px; font-weight: bold; font-size: 20px; color: white; text-align: center; } .front { transform: translateZ(75px); } .back { transform: rotateY(180deg) translateZ(75px); } .right { transform: rotateY(90deg) translateZ(75px); } .left { transform: rotateY(-90deg) translateZ(75px); } .top { transform: rotateX(90deg) translateZ(75px); } .bottom { transform: rotateX(-90deg) translateZ(75px); } @keyframes tilt { 0% { transform: rotateX(360deg) rotateY(360deg); } 100% { transform: rotateX(15deg) rotateY(15deg); } }",
        "js": ""
      },
      {
        "id": 25,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối lập phương xoay chậm, đổi màu gradient",
        "html": "<div class='cube10'> <div class='face front'>A</div> <div class='face back'>B</div> <div class='face right'>C</div> <div class='face left'>D</div> <div class='face top'>E</div> <div class='face bottom'>F</div> </div>",
        "css": ".cube10 { width: 150px; height: 150px; margin: 50px auto; position: relative; transform-style: preserve-3d; animation: rotateSlow 10s linear infinite; } .face { position: absolute; width: 150px; height: 150px; background: linear-gradient(45deg, #ff7e5f, #feb47b); border: 2px solid #cc5c3d; line-height: 150px; font-weight: bold; font-size: 24px; color: white; text-align: center; } .back { background: linear-gradient(45deg, #6a11cb, #2575fc); border-color: #253080; } .right { background: linear-gradient(45deg, #56ab2f, #a8e063); border-color: #3f6f1a; } .left { background: linear-gradient(45deg, #614385, #516395); border-color: #423374; } .top { background: linear-gradient(45deg, #ee9ca7, #ffdde1); border-color: #aa6672; } .bottom { background: linear-gradient(45deg, #42275a, #734b6d); border-color: #381c45; } .front { transform: translateZ(75px); } .back { transform: rotateY(180deg) translateZ(75px); } .right { transform: rotateY(90deg) translateZ(75px); } .left { transform: rotateY(-90deg) translateZ(75px); } .top { transform: rotateX(90deg) translateZ(75px); } .bottom { transform: rotateX(-90deg) translateZ(75px); } @keyframes rotateSlow { from { transform: rotateX(0deg) rotateY(0deg); } to { transform: rotateX(360deg) rotateY(360deg); } }",
        "js": ""
      },
      {
        "id": 26,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối lập phương lật chậm khi hover, có bóng đổ 3D",
        "html": "<div class='cube11'> <div class='face front'>Hover Me</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": ".cube11 { width: 150px; height: 150px; margin: 50px auto; position: relative; transform-style: preserve-3d; transition: transform 1s ease; box-shadow: 0 15px 20px rgba(0,0,0,0.3); } .cube11:hover { transform: rotateY(180deg); box-shadow: 0 30px 40px rgba(0,0,0,0.6); } .face { position: absolute; width: 150px; height: 150px; background: #008080; border: 2px solid #004040; color: white; font-weight: bold; font-size: 18px; line-height: 150px; text-align: center; } .front { transform: translateZ(75px); } .back { transform: rotateY(180deg) translateZ(75px); } .right { transform: rotateY(90deg) translateZ(75px); } .left { transform: rotateY(-90deg) translateZ(75px); } .top { transform: rotateX(90deg) translateZ(75px); } .bottom { transform: rotateX(-90deg) translateZ(75px); }",
        "js": ""
      },
      {
        "id": 27,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối lập phương phát sáng thay đổi màu",
        "html": "<div class='cube14'> <div class='face front'>Glow</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": ".cube14 { width: 150px; height: 150px; margin: 50px auto; position: relative; transform-style: preserve-3d; animation: rotateCube 6s linear infinite; box-shadow: 0 0 20px 5px rgba(255, 0, 255, 0.7); } .face { position: absolute; width: 150px; height: 150px; background: #800080; border: 2px solid #4b004b; color: white; font-weight: bold; font-size: 22px; line-height: 150px; text-align: center; } .front { transform: translateZ(75px); } .back { transform: rotateY(180deg) translateZ(75px); } .right { transform: rotateY(90deg) translateZ(75px); } .left { transform: rotateY(-90deg) translateZ(75px); } .top { transform: rotateX(90deg) translateZ(75px); } .bottom { transform: rotateX(-90deg) translateZ(75px); } @keyframes rotateCube { from { transform: rotateX(0deg) rotateY(0deg); } to { transform: rotateX(360deg) rotateY(360deg); } }",
        "js": "const cube14 = document.querySelector('.cube14'); let glowHue = 0; setInterval(() => { glowHue = (glowHue + 5) % 360; cube14.style.boxShadow = `0 0 30px 8px hsl(${glowHue}, 100%, 70%)`; }, 100);"
      },
      {
        "id": 28,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối lập phương xoay chậm với mặt lưới",
        "html": "<div class='cube21'> <div class='face front'>Grid</div> <div class='face back'>Grid</div> <div class='face right'>Grid</div> <div class='face left'>Grid</div> <div class='face top'>Grid</div> <div class='face bottom'>Grid</div> </div>",
        "css": ".cube21 { width: 160px; height: 160px; margin: 50px auto; position: relative; transform-style: preserve-3d; animation: rotateCube 12s linear infinite; } .face { position: absolute; width: 160px; height: 160px; background: repeating-linear-gradient( 0deg, #555, #555 2px, #222 2px, #222 6px ), repeating-linear-gradient( 90deg, #555, #555 2px, #222 2px, #222 6px ); border: 1px solid #333; color: white; font-weight: bold; font-size: 22px; line-height: 160px; text-align: center; user-select: none; } .front { transform: translateZ(80px); } .back { transform: rotateY(180deg) translateZ(80px); } .right { transform: rotateY(90deg) translateZ(80px); } .left { transform: rotateY(-90deg) translateZ(80px); } .top { transform: rotateX(90deg) translateZ(80px); } .bottom { transform: rotateX(-90deg) translateZ(80px); } @keyframes rotateCube { 0% { transform: rotateX(0) rotateY(0); } 100% { transform: rotateX(360deg) rotateY(360deg); } }",
        "js": ""
      },
      {
        "id": 29,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối lập phương xoay 3D và đổi nền mặt",
        "html": "<div class='cube25'> <div class='face front'>Change</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": ".cube25 { width: 150px; height: 150px; margin: 50px auto; position: relative; transform-style: preserve-3d; animation: rotateCube 8s linear infinite; } .face { position: absolute; width: 150px; height: 150px; border: 2px solid #333; color: white; font-weight: bold; font-size: 20px; line-height: 150px; text-align: center; } .front { transform: translateZ(75px); } .back { transform: rotateY(180deg) translateZ(75px); } .right { transform: rotateY(90deg) translateZ(75px); } .left { transform: rotateY(-90deg) translateZ(75px); } .top { transform: rotateX(90deg) translateZ(75px); } .bottom { transform: rotateX(-90deg) translateZ(75px); }",
        "js": "const cube25 = document.querySelector('.cube25'); const faces = cube25.querySelectorAll('.face'); const colors = ['#e74c3c', '#8e44ad', '#3498db', '#27ae60', '#f39c12', '#d35400']; let index = 0; faces.forEach((face, i) => face.style.background = colors[i]); setInterval(() => { index = (index + 1) % colors.length; faces.forEach((face, i) => { face.style.background = colors[(i + index) % colors.length]; }); }, 1500); function rotateCube() { let angle = 0; setInterval(() => { angle = (angle + 2) % 360; cube25.style.transform = `rotateX(${angle}deg) rotateY(${angle}deg)`; }, 50); } rotateCube();"
      },
      {
        "id": 30,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối lập phương lật theo trục Y chậm",
        "html": "<div class='cube27'> <div class='face front'>Flip</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": ".cube27 { width: 150px; height: 150px; margin: 50px auto; position: relative; transform-style: preserve-3d; animation: flipY 6s ease-in-out infinite; } .face { position: absolute; width: 150px; height: 150px; background: #067272; border: 2px solid #99ae99; color: white; font-weight: bold; font-size: 20px; line-height: 150px; text-align: center; } .front { transform: translateZ(75px); } .back { transform: rotateY(180deg) translateZ(75px); } .right { transform: rotateY(90deg) translateZ(75px); } .left { transform: rotateY(-90deg) translateZ(75px); } .top { transform: rotateX(90deg) translateZ(75px); } .bottom { transform: rotateX(-90deg) translateZ(75px); } @keyframes flipY { 0%, 100% { transform: rotateY(0deg); } 50% { transform: rotateY(180deg); } }",
        "js": ""
      },
      {
        "id": 31,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": " Khối lập phương xoay nhanh khi hover",
        "html": "<div class='cube28'> <div class='face front'>Hover Spin</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": ".cube28 { width: 150px; height: 150px; margin: 50px auto; position: relative; transform-style: preserve-3d; animation: spinSlow 10s linear infinite; transition: animation-duration 0.3s ease; } .cube28:hover { animation-duration: 1s; } .face { position: absolute; width: 150px; height: 150px; background: #ff9800; border: 2px solid #cc7000; color: white; font-weight: bold; font-size: 22px; line-height: 150px; text-align: center; } .front { transform: translateZ(75px); } .back { transform: rotateY(180deg) translateZ(75px); } .right { transform: rotateY(90deg) translateZ(75px); } .left { transform: rotateY(-90deg) translateZ(75px); } .top { transform: rotateX(90deg) translateZ(75px); } .bottom { transform: rotateX(-90deg) translateZ(75px); } @keyframes spinSlow { 0% { transform: rotateX(0) rotateY(0); } 100% { transform: rotateX(360deg) rotateY(360deg); } }",
        "js": ""
      },
      {
        "id": 32,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối lập phương xoay 3D linh hoạt theo chuột",
        "html": "<div id='cube1' class='cube-anim'> <div class='face front'>1</div> <div class='face back'>2</div> <div class='face right'>3</div> <div class='face left'>4</div> <div class='face top'>5</div> <div class='face bottom'>6</div> </div>",
        "css": "body { height: 100vh; margin: 0; background: #222; display: flex; justify-content: center; align-items: center; perspective: 900px; } #cube1 { width: 200px; height: 200px; position: relative; transform-style: preserve-3d; cursor: grab; user-select: none; } .face { position: absolute; width: 200px; height: 200px; background: linear-gradient(45deg, #3498db, #2980b9); border: 2px solid #1f618d; color: white; font-weight: bold; font-size: 32px; line-height: 200px; text-align: center; box-shadow: 0 0 15px rgba(0,0,0,0.5); } .front { transform: translateZ(100px); } .back { transform: rotateY(180deg) translateZ(100px); } .right { transform: rotateY(90deg) translateZ(100px); } .left { transform: rotateY(-90deg) translateZ(100px); } .top { transform: rotateX(90deg) translateZ(100px); } .bottom { transform: rotateX(-90deg) translateZ(100px); }",
        "js": "const cube1 = document.getElementById('cube1'); let isDragging = false; let previousX, previousY; let rotationX = 0; let rotationY = 0; let velocityX = 0; let velocityY = 0; const friction = 0.95; function animate() { if (!isDragging) { rotationX += velocityY; rotationY += velocityX; velocityX *= friction; velocityY *= friction; cube1.style.transform = `rotateX(${rotationX}deg) rotateY(${rotationY}deg)`; } requestAnimationFrame(animate); } cube1.addEventListener('mousedown', e => { isDragging = true; previousX = e.clientX; previousY = e.clientY; cube1.style.cursor = 'grabbing'; }); window.addEventListener('mouseup', () => { isDragging = false; cube1.style.cursor = 'grab'; }); window.addEventListener('mousemove', e => { if (isDragging) { const deltaX = e.clientX - previousX; const deltaY = e.clientY - previousY; rotationY += deltaX * 0.5; rotationX -= deltaY * 0.5; velocityX = deltaX * 0.1; velocityY = deltaY * 0.1; cube1.style.transform = `rotateX(${rotationX}deg) rotateY(${rotationY}deg)`; previousX = e.clientX; previousY = e.clientY; } }); animate();"
      },
      {
        "id": 33,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối lập phương xoay bounce",
        "html": "<div id='cube2' class='cube-anim bounce'> <div class='face front'>Bounce</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": "#cube2 { width: 180px; height: 180px; margin: 100px auto; position: relative; transform-style: preserve-3d; animation: spinBounce 6s cubic-bezier(0.68, -0.55, 0.27, 1.55) infinite; } .face { position: absolute; width: 180px; height: 180px; background: linear-gradient(135deg, #e67e22, #d35400); border-radius: 15px; border: 2px solid #b25000; color: white; font-weight: 700; font-size: 28px; line-height: 180px; text-align: center; box-shadow: 0 0 15px rgba(0,0,0,0.5); } .front  { transform: translateZ(90px); } .back   { transform: rotateY(180deg) translateZ(90px); } .right  { transform: rotateY(90deg) translateZ(90px); } .left   { transform: rotateY(-90deg) translateZ(90px); } .top    { transform: rotateX(90deg) translateZ(90px); } .bottom { transform: rotateX(-90deg) translateZ(90px); } @keyframes spinBounce { 0%, 100% { transform: rotateX(0deg) rotateY(0deg) translateY(0); } 50% { transform: rotateX(180deg) rotateY(180deg) translateY(-60px); } }",
        "js": ""
      },
      {
        "id": 34,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối lập phương xoay 3D với hiệu ứng phản chiếu sáng động",
        "html": "<div id='cube6' class='cube-anim' style='margin-top: 80px;'> <div class='face front'>Light</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": "#cube6 { width: 180px; height: 180px; margin: auto; position: relative; transform-style: preserve-3d; } .face { position: absolute; width: 180px; height: 180px; border-radius: 20px; border: 2px solid #333; background: #34495e; color: white; font-weight: 700; font-size: 32px; line-height: 180px; text-align: center; box-shadow: 0 0 30px rgba(0,0,0,0.6); transition: box-shadow 0.2s ease; } .front  { transform: translateZ(90px); } .back   { transform: rotateY(180deg) translateZ(90px); } .right  { transform: rotateY(90deg) translateZ(90px); } .left   { transform: rotateY(-90deg) translateZ(90px); } .top    { transform: rotateX(90deg) translateZ(90px); } .bottom { transform: rotateX(-90deg) translateZ(90px); }",
        "js": "const cube6 = document.getElementById('cube6'); let angleX = 0; let angleY = 0; function animate() { angleX += 0.7; angleY += 0.9; cube6.style.transform = `rotateX(${angleX}deg) rotateY(${angleY}deg)`; const lightIntensity = (Math.sin(angleY * Math.PI / 180) + 1) / 2 * 0.7 + 0.3; cube6.querySelectorAll('.face').forEach(face => { face.style.boxShadow = `0 0 30px rgba(255,255,255,${lightIntensity})`; }); requestAnimationFrame(animate); } animate();"
      },
      {
        "id": 35,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối lập phương xoay và nhấp nháy sáng theo nhịp",
        "html": "<div id='cube7' class='cube-anim' style='margin-top: 80px;'> <div class='face front'>Blink</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": "#cube7 { width: 160px; height: 160px; margin: auto; position: relative; transform-style: preserve-3d; } .face { position: absolute; width: 160px; height: 160px; border-radius: 20px; border: 2px solid #fffdfd; background: #000000; color: white; font-weight: 700; font-size: 30px; line-height: 160px; text-align: center; box-shadow: 0 0 20px rgba(39,174,96,0.7); transition: box-shadow 0.3s ease; } .front  { transform: translateZ(80px); } .back   { transform: rotateY(180deg) translateZ(80px); } .right  { transform: rotateY(90deg) translateZ(80px); } .left   { transform: rotateY(-90deg) translateZ(80px); } .top    { transform: rotateX(90deg) translateZ(80px); } .bottom { transform: rotateX(-90deg) translateZ(80px); }",
        "js": "const cube7 = document.getElementById('cube7'); let angle = 0; let blinkState = false; function animate() { angle = (angle + 1) % 360; cube7.style.transform = `rotateX(${angle}deg) rotateY(${angle}deg)`; blinkState = !blinkState; cube7.querySelectorAll('.face').forEach(face => { face.style.boxShadow = blinkState ? '0 0 30px 10px rgba(39,174,96,0.9)' : '0 0 20px rgba(39,174,96,0.6)'; }); setTimeout(animate, 300); } animate();"
      },
      {
        "id": 36,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối lập phương xoay 3D với hiệu ứng bóng neon đổi màu ",
        "html": "<div id='cube9' class='cube-anim' style='margin-top: 80px;'> <div class='face front'>Neon</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": "#cube9 { width: 180px; height: 180px; margin: auto; position: relative; transform-style: preserve-3d; } .face { position: absolute; width: 180px; height: 180px; border-radius: 20px; border: 2px solid #222; background: #111; color: white; font-weight: 700; font-size: 32px; line-height: 180px; text-align: center; box-shadow: 0 0 20px #0ff; transition: box-shadow 0.3s ease; } .front  { transform: translateZ(90px); } .back   { transform: rotateY(180deg) translateZ(90px); } .right  { transform: rotateY(90deg) translateZ(90px); } .left   { transform: rotateY(-90deg) translateZ(90px); } .top    { transform: rotateX(90deg) translateZ(90px); } .bottom { transform: rotateX(-90deg) translateZ(90px); }",
        "js": "const cube9 = document.getElementById('cube9'); let hue = 0; function animate() { hue = (hue + 2) % 360; cube9.style.transform = `rotateX(${hue}deg) rotateY(${hue}deg)`; const color = `hsl(${hue}, 100%, 70%)`; cube9.querySelectorAll('.face').forEach(face => { face.style.boxShadow = `0 0 30px 10px ${color}`; face.style.borderColor = color; }); requestAnimationFrame(animate); } animate();"
      },
      {
        "id": 37,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Sóng 3D uốn lượn",
        "html": "<div style='perspective: 1000px; width: 600px; margin: 80px auto; display: flex; gap: 10px; justify-content: center;'> <div class='wave-block' style='width:40px; height: 40px; background:#3498db; border-radius: 6px; transform-style: preserve-3d;'></div> <div class='wave-block' style='width:40px; height: 40px; background:#3498db; border-radius: 6px; transform-style: preserve-3d;'></div> <div class='wave-block' style='width:40px; height: 40px; background:#3498db; border-radius: 6px; transform-style: preserve-3d;'></div> <div class='wave-block' style='width:40px; height: 40px; background:#3498db; border-radius: 6px; transform-style: preserve-3d;'></div> <div class='wave-block' style='width:40px; height: 40px; background:#3498db; border-radius: 6px; transform-style: preserve-3d;'></div> </div>",
        "css": "",
        "js": "const blocks = document.querySelectorAll('.wave-block'); let time = 0; function waveAnimate() { blocks.forEach((block, i) => { const angle = time + i * 0.7; const translateY = Math.sin(angle) * 30; const rotateX = Math.cos(angle) * 20; block.style.transform = `translateY(${translateY}px) rotateX(${rotateX}deg)`; }); time += 0.1; requestAnimationFrame(waveAnimate); } waveAnimate();"
      },
      {
        "id": 38,
        "author": "Thanh Tự",
        "type": "Khối lập phương",
        "title": "Khối 3D xoay gradient động theo chuột ",
        "html": "<div style='perspective: 1200px; height: 300px; display:flex; justify-content:center; align-items:center;'> <div id='cubeGrad' class='cube-grad'> <div class='face front'>Gradient</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div> </div>",
        "css": ".cube-grad { width: 200px; height: 200px; position: relative; transform-style: preserve-3d; border-radius: 20px; } .cube-grad .face { position: absolute; width: 200px; height: 200px; border-radius: 20px; border: 2px solid #222; color: white; font-weight: 700; font-size: 32px; line-height: 200px; text-align: center; background: linear-gradient(45deg, #ff416c, #ff4b2b); transition: background 0.3s ease; } .front  { transform: translateZ(100px); } .back   { transform: rotateY(180deg) translateZ(100px); } .right  { transform: rotateY(90deg) translateZ(100px); } .left   { transform: rotateY(-90deg) translateZ(100px); } .top    { transform: rotateX(90deg) translateZ(100px); } .bottom { transform: rotateX(-90deg) translateZ(100px); }",
        "js": "const cubeGrad = document.getElementById('cubeGrad'); const facesGrad = cubeGrad.querySelectorAll('.face'); document.addEventListener('mousemove', e => { const cx = window.innerWidth / 2; const cy = window.innerHeight / 2; const dx = (e.clientX - cx) / cx; const dy = (e.clientY - cy) / cy; const rotateX = dy * 30; const rotateY = dx * 30; cubeGrad.style.transform = `rotateX(${-rotateX}deg) rotateY(${rotateY}deg)`; const gradient1 = `linear-gradient(45deg, hsl(${(dx + 1)*180}, 80%, 60%), hsl(${(dy + 1)*180}, 80%, 60%))`; facesGrad.forEach(face => { face.style.background = gradient1; }); });"
      },
      {
        "id": 39,
        "author": "Thế Vĩnh",
        "type": "Icon",
        "title": "Hiệu Ứng 3D Icon Bay Lên Neon",
        "link": "",
        "html": "<div class='icon-container' aria-label='Home Icon'> <svg viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg' aria-hidden='true'> <path d='M32 12 L12 32 H20 V52 H28 V40 H36 V52 H44 V32 H52 Z' /> </svg> </div> <div class='icon-container' aria-label='Search Icon'> <svg viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg' aria-hidden='true'> <circle cx='27' cy='27' r='16' stroke='white' stroke-width='4' fill='none' /> <line x1='41' y1='41' x2='58' y2='58' stroke='white' stroke-width='6' stroke-linecap='round' /> </svg> </div> <div class='icon-container' aria-label='Settings Icon'> <svg viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg' aria-hidden='true'> <circle cx='32' cy='32' r='10' /> <path d='M32 12 L32 4 M32 60 L32 52 M12 32 L4 32 M60 32 L52 32 M46 46 L52 52 M18 18 L12 12 M46 18 L52 12 M18 46 L12 52' stroke='white' stroke-width='4' stroke-linecap='round' fill='none' /> </svg> </div> <div class='icon-container' aria-label='User Icon'> <svg viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg' aria-hidden='true'> <circle cx='32' cy='20' r='12' /> <path d='M12 58 C12 46, 52 46, 52 58 Z' fill='white' /> </svg> </div>",
        "css": "body { background: #121212; height: 100vh; margin: 0; display: flex; justify-content: center; align-items: center; gap: 40px; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; perspective: 1000px; } .icon-container { width: 120px; height: 120px; border-radius: 50%; border: 1px solid #ff40b8; display: flex; justify-content: center; align-items: center; cursor: pointer; transition: transform 0.4s ease, box-shadow 0.4s ease; transform-style: preserve-3d; animation: slowSpin 10s linear infinite; position: relative; } .icon-container:hover { background: conic-gradient(from 0deg, #ff00cc, #ff66cc, #ff99cc, #cc33ff, #ff00cc, #ff66cc); box-shadow: inset 0 0 40px #ff33dd, 0 0 10px #ff99ee, 0 0 20px #ffccff, 0 30px 90px rgba(255, 102, 204, 1); transform: translateZ(40px) rotateX(80deg) scale(1.1); } .icon-container svg { width: 60px; height: 60px; fill: white; filter: drop-shadow(0 0 6px rgba(255, 182, 193, 0.9)); transform-style: preserve-3d; transition: transform 0.4s ease; } .icon-container:hover svg { transform: translateZ(50px) translateY(-30px) rotateX(-90deg); filter: drop-shadow(0 0 15px #ff66cc); }",
        "js": ""
      },
      {
        "id": 40,
        "author": "VanBao",
        "type": "Button",
        "title": "Neon Glowing 3D Button",
        "html": "<button class='neon-btn'>Click Me</button>",
        "css": ".neon-btn { font-size: 1.8rem; padding: 20px 50px; border-radius: 15px; border: none; color: #0ff; background: #000; cursor: pointer; box-shadow: 0 0 10px #0ff, 0 0 40px #0ff, inset 0 0 10px #0ff; transition: box-shadow 0.3s ease; } .neon-btn:hover { box-shadow: 0 0 20px #0ff, 0 0 60px #0ff, inset 0 0 20px #0ff; }",
        "js": ""
      },
      {
        "id": 41,
        "author": "VanBao",
        "type": "Card",
        "title": "Kéo thẻ sang trái/phải để lật & hiện thẻ bên dưới với BG đẹp, glow khi kéo",
        "html": "<div class='drag-stack'>\n  <div class='card' style='--i:0'>Card 1</div>\n  <div class='card' style='--i:1'>Card 2</div>\n  <div class='card' style='--i:2'>Card 3</div>\n  <div class='card' style='--i:3'>Card 4</div>\n</div>",
        "css": "body {\n  background: linear-gradient(135deg, #1e1e2f, #151522);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  margin: 0;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  background-image:\n    radial-gradient(circle at 20% 20%, rgba(255, 100, 50, 0.15), transparent 50%),\n    radial-gradient(circle at 80% 80%, rgba(255, 80, 80, 0.1), transparent 40%);\n  background-blend-mode: screen;\n}\n\n.drag-stack {\n  width: 280px;\n  height: 380px;\n  position: relative;\n  perspective: 1500px;\n  user-select: none;\n}\n\n.card {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 22px;\n  background: linear-gradient(135deg, #ff4b2b, #ff416c);\n  color: white;\n  font-size: 2.2rem;\n  font-weight: 700;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow:\n    0 15px 25px rgba(255, 75, 43, 0.3),\n    0 0 20px rgba(255, 75, 43, 0.5),\n    inset 0 0 50px rgba(255, 120, 70, 0.6);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  cursor: grab;\n  transform-style: preserve-3d;\n  touch-action: none;\n  transform: translateY(calc(var(--i) * -30px)) translateZ(calc(var(--i) * -40px));\n  z-index: calc(100 - var(--i));\n  user-select: none;\n}\n\n.card:active {\n  cursor: grabbing;\n  box-shadow:\n    0 25px 45px rgba(255, 75, 43, 0.7),\n    0 0 40px rgba(255, 75, 43, 0.8),\n    inset 0 0 70px rgba(255, 150, 90, 0.9);\n}\n\n.card.dragging {\n  box-shadow:\n    0 40px 65px rgba(255, 80, 50, 0.85),\n    0 0 60px rgba(255, 120, 80, 0.95),\n    inset 0 0 90px rgba(255, 180, 120, 1);\n  transition: none;\n}",
        "js": "const stack = document.querySelector('.drag-stack');\nlet cards = [...document.querySelectorAll('.card')];\n\nlet startX = 0;\nlet currentX = 0;\nlet draggingCard = null;\n\nfunction setCardTransforms() {\n  cards.forEach((card, index) => {\n    const offsetY = -30 * index;\n    const offsetZ = -40 * index;\n    card.style.transform = `translateX(0px) translateY(${offsetY}px) translateZ(${offsetZ}px) rotateY(0deg)`;\n    card.style.transition = 'transform 0.3s ease';\n    card.classList.remove('dragging');\n  });\n}\n\nfunction onPointerDown(e) {\n  if (cards.length === 0) return;\n  draggingCard = cards[0];\n  startX = e.clientX || (e.touches && e.touches[0].clientX);\n  draggingCard.style.transition = 'none';\n  draggingCard.classList.add('dragging');\n  stack.style.userSelect = 'none';\n}\n\nfunction onPointerMove(e) {\n  if (!draggingCard) return;\n  currentX = e.clientX || (e.touches && e.touches[0].clientX);\n  const deltaX = currentX - startX;\n  const rotateY = deltaX * 0.3;\n  draggingCard.style.transform = `translateX(${deltaX}px) translateY(calc(var(--i) * -30px)) translateZ(calc(var(--i) * -40px)) rotateY(${rotateY}deg)`;\n}\n\nfunction onPointerUp(e) {\n  if (!draggingCard) return;\n  const deltaX = currentX - startX;\n  const threshold = 120;\n\n  if (Math.abs(deltaX) > threshold) {\n    draggingCard.style.transition = 'transform 0.4s ease, opacity 0.4s ease';\n    draggingCard.style.opacity = '0';\n    draggingCard.style.transform = `translateX(${deltaX > 0 ? 500 : -500}px) translateY(calc(var(--i) * -30px)) translateZ(calc(var(--i) * -40px)) rotateY(${deltaX > 0 ? 45 : -45}deg)`;\n    setTimeout(() => {\n      if (draggingCard && draggingCard.parentNode === stack) {\n        stack.removeChild(draggingCard);\n      }\n      cards = [...document.querySelectorAll('.card')];\n      updateCardIndexes();\n      setCardTransforms();\n    }, 400);\n  } else {\n    draggingCard.style.transition = 'transform 0.4s ease';\n    draggingCard.style.transform = `translateX(0) translateY(calc(var(--i) * -30px)) translateZ(calc(var(--i) * -40px)) rotateY(0deg)`;\n  }\n  draggingCard.classList.remove('dragging');\n  draggingCard = null;\n  stack.style.userSelect = '';\n}\n\nfunction updateCardIndexes() {\n  cards.forEach((card, idx) => {\n    card.style.setProperty('--i', idx);\n    card.style.zIndex = 100 - idx;\n  });\n}\n\nstack.addEventListener('mousedown', onPointerDown);\nstack.addEventListener('touchstart', onPointerDown);\nwindow.addEventListener('mousemove', onPointerMove);\nwindow.addEventListener('touchmove', onPointerMove);\nwindow.addEventListener('mouseup', onPointerUp);\nwindow.addEventListener('touchend', onPointerUp);\n\nupdateCardIndexes();\nsetCardTransforms();"
      },
      {
        "id": 42,
        "author": "VanBao",
        "type": "3D",
        "title": "Kéo xoay 3D Sphere lật mặt trước/sau",
        "html": "<div class='gradient-sphere-container'>\n  <div class='gradient-sphere'>\n    <div class='face front'>FRONT</div>\n    <div class='face back'>BACK</div>\n  </div>\n</div>",
        "css": ".gradient-sphere-container {\n  width: 280px;\n  height: 280px;\n  margin: 50px auto;\n  perspective: 1200px;\n  cursor: grab;\n}\n.gradient-sphere {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  transform-style: preserve-3d;\n  border-radius: 50%;\n  transition: transform 0.1s ease;\n  box-shadow:\n    inset 0 0 40px rgba(255, 106, 0, 0.8),\n    inset 0 0 70px rgba(238, 9, 121, 0.7);\n}\n.face {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 700;\n  font-size: 2rem;\n  color: white;\n  user-select: none;\n  backface-visibility: hidden;\n}\n.front {\n  background: radial-gradient(circle at 30% 30%, #ff6a00, #ee0979);\n}\n.back {\n  background: radial-gradient(circle at 70% 70%, #551a8b, #9400d3);\n  transform: rotateY(180deg);\n}",
        "js": "const sphere = document.querySelector('.gradient-sphere-container');\nconst sphereInner = document.querySelector('.gradient-sphere');\n\nlet isDragging = false;\nlet startX;\nlet currentRotationY = 0;\n\nsphere.addEventListener('mousedown', (e) => {\n  isDragging = true;\n  startX = e.clientX;\n  sphere.style.cursor = 'grabbing';\n});\n\nwindow.addEventListener('mouseup', () => {\n  isDragging = false;\n  sphere.style.cursor = 'grab';\n});\n\nwindow.addEventListener('mousemove', (e) => {\n  if (!isDragging) return;\n\n  const deltaX = e.clientX - startX;\n  startX = e.clientX;\n\n  currentRotationY += deltaX * 0.5;\n  sphereInner.style.transform = `rotateY(${currentRotationY}deg)`;\n});"
      },
      {
        "id": 43,
        "author": "VanBao",
        "type": "3D",
        "title": "Kiếm Rồng 3D với hoa văn, hiệu ứng chém sáng tiên hiệp",
        "html": "<div class='sword-container'>\n  <div class='sword' id='sword'>\n    <div class='blade'></div>\n    <svg class='dragon' viewBox='0 0 50 350' xmlns='http://www.w3.org/2000/svg'>\n      <path d='M25 340 Q40 320 25 300 Q10 280 25 260 Q40 240 25 220 Q10 200 25 180 Q40 160 25 140 Q10 120 25 100 Q40 80 25 60 Q10 40 25 20 Q40 10 25 0' />\n    </svg>\n    <div class='guard'></div>\n    <div class='handle'></div>\n    <div class='pommel'></div>\n  </div>\n</div>\n<canvas id='slashCanvas'></canvas>",
        "css": "body, html {\n  margin:0; padding:0; height:100%;\n  background: linear-gradient(135deg, #0a1226, #1e263b);\n  display:flex;\n  justify-content:center;\n  align-items:center;\n  user-select:none;\n  overflow:hidden;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n.sword-container {\n  position: relative;\n  width: 100px;\n  height: 500px;\n  perspective: 1200px;\n}\n.sword {\n  position: relative;\n  width: 40px;\n  height: 450px;\n  margin: auto;\n  transform-style: preserve-3d;\n  cursor: pointer;\n}\n.blade {\n  position: absolute;\n  top: 0; left: 50%;\n  width: 12px;\n  height: 350px;\n  background: linear-gradient(180deg, #a0c1ff 0%, #344d7e 100%);\n  clip-path: polygon(50% 0%, 70% 100%, 30% 100%);\n  box-shadow: inset 0 0 40px #6394ff, 0 0 30px #88bbff;\n  border: 1px solid #a0c1ff;\n  border-radius: 3px 3px 60% 60%;\n  transform: translateX(-50%);\n  z-index: 10;\n}\nsvg.dragon {\n  position: absolute;\n  top: 10px; left: 50%;\n  width: 30px; height: 350px;\n  transform: translateX(-50%);\n  pointer-events: none;\n  filter: drop-shadow(0 0 5px gold);\n  stroke: gold;\n  stroke-width: 2;\n  fill: none;\n  opacity: 0.9;\n}\n.guard {\n  position: absolute;\n  bottom: 100px; left: 50%;\n  width: 60px;\n  height: 20px;\n  background: linear-gradient(90deg, #ffd966, #b0860a);\n  border-radius: 12px;\n  box-shadow: 0 0 15px #ffd966;\n  transform: translateX(-50%);\n  z-index: 20;\n}\n.handle {\n  position: absolute;\n  bottom: 0; left: 50%;\n  width: 20px;\n  height: 100px;\n  background: repeating-linear-gradient(45deg, #532e00, #532e00 5px, #3e2100 5px, #3e2100 10px);\n  border-radius: 12px;\n  box-shadow: inset 0 0 10px #402600;\n  transform: translateX(-50%);\n  z-index: 20;\n}\n.pommel {\n  position: absolute;\n  bottom: -30px; left: 50%;\n  width: 40px;\n  height: 40px;\n  background: radial-gradient(circle at center, #ffd966, #b0860a);\n  border-radius: 50%;\n  box-shadow: 0 0 20px #ffd966;\n  transform: translateX(-50%);\n  z-index: 20;\n}\n#slashCanvas {\n  position: fixed;\n  top: 0; left: 0;\n  width: 100vw;\n  height: 100vh;\n  pointer-events: none;\n  z-index: 1000;\n}",
        "js": "const canvas = document.getElementById('slashCanvas');\nconst ctx = canvas.getContext('2d');\nlet width, height;\n\nfunction resize() {\n  width = window.innerWidth;\n  height = window.innerHeight;\n  const dpr = window.devicePixelRatio || 1;\n  canvas.width = width * dpr;\n  canvas.height = height * dpr;\n  canvas.style.width = width + 'px';\n  canvas.style.height = height + 'px';\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.scale(dpr, dpr);\n}\nresize();\nwindow.addEventListener('resize', resize);\n\nclass Slash {\n  constructor(x, y, dx, dy) {\n    this.x = x;\n    this.y = y;\n    this.dx = dx * 5;\n    this.dy = dy * 5;\n    this.alpha = 1;\n    this.length = 100;\n    this.life = 20;\n    this.age = 0;\n  }\n  update() {\n    this.x += this.dx;\n    this.y += this.dy;\n    this.age++;\n    this.alpha = 1 - this.age / this.life;\n  }\n  draw() {\n    ctx.save();\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = `rgba(255, 230, 130, ${this.alpha})`;\n    ctx.shadowColor = `rgba(255, 230, 130, ${this.alpha})`;\n    ctx.shadowBlur = 20;\n    ctx.lineWidth = 6 * this.alpha;\n    ctx.beginPath();\n    ctx.moveTo(this.x, this.y);\n    ctx.lineTo(this.x - this.dx * this.length, this.y - this.dy * this.length);\n    ctx.stroke();\n    ctx.restore();\n  }\n}\n\nconst slashes = [];\n\nfunction animate() {\n  ctx.clearRect(0, 0, width, height);\n  for (let i = slashes.length -1; i >= 0; i--) {\n    const s = slashes[i];\n    s.update();\n    s.draw();\n    if (s.age >= s.life) slashes.splice(i,1);\n  }\n  requestAnimationFrame(animate);\n}\nanimate();\n\nlet lastX = 0;\nlet lastY = 0;\nlet isDragging = false;\n\nconst sword = document.getElementById('sword');\nsword.addEventListener('pointerdown', e => {\n  isDragging = true;\n  lastX = e.clientX;\n  lastY = e.clientY;\n});\nwindow.addEventListener('pointerup', e => {\n  isDragging = false;\n});\nwindow.addEventListener('pointermove', e => {\n  if (!isDragging) return;\n  const dx = e.clientX - lastX;\n  const dy = e.clientY - lastY;\n  if (Math.abs(dx) > 3 || Math.abs(dy) > 3) {\n    slashes.push(new Slash(e.clientX, e.clientY, dx, dy));\n    lastX = e.clientX;\n    lastY = e.clientY;\n  }\n});"
      },
      {
        "id": 44,
        "author": "VanBao",
        "type": "3D",
        "title": "Bouncing 3D Sphere",
        "html": "<div class='bounce-sphere'></div>",
        "css": ".bounce-sphere { width: 100px; height: 100px; margin: 80px auto; border-radius: 50%; background: linear-gradient(45deg, #00dbde, #fc00ff); box-shadow: 0 0 30px #fc00ff; animation: bounce 2s ease-in-out infinite; } @keyframes bounce { 0%, 100% { transform: translateY(0); } 50% { transform: translateY(-50px); } }",
        "js": ""
      },
      {
        "id": 45,
        "author": "VanBao",
        "type": "3D",
        "title": "3D Image Flip",
        "html": "<div class='flip-image'><img src='https://picsum.photos/300/400' alt='Random'></div>",
        "css": ".flip-image { width: 300px; height: 400px; perspective: 1300px; margin: 50px auto; cursor: pointer; } .flip-image img { width: 100%; height: 100%; border-radius: 20px; transition: transform 0.8s ease; box-shadow: 0 15px 35px rgba(0,0,0,0.4); } .flip-image:hover img { transform: rotateY(180deg); }",
        "js": ""
      },
      {
        "id": 46,
        "author": "VanBao",
        "type": "3D",
        "title": "Rotating 3D Tunnel with Gradient Rings",
        "html": "<div class='tunnel'><div class='ring' style='--i:1'></div><div class='ring' style='--i:2'></div><div class='ring' style='--i:3'></div><div class='ring' style='--i:4'></div></div>",
        "css": ".tunnel {\n  width: 400px;\n  height: 400px;\n  margin: 50px auto;\n  perspective: 1500px;\n  position: relative;\n  transform-style: preserve-3d;\n  animation: rotateTunnel 6s linear infinite;\n}\n\n.ring {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #7c3aed, #ff0099);\n  border: 3px solid rgba(124,58,237,0.3);\n  transform: translateZ(calc(var(--i) * -70px));\n  box-shadow: 0 0 30px rgba(124, 58, 237, 0.7), 0 0 10px rgba(255, 0, 153, 0.5);\n}\n\n@keyframes rotateTunnel {\n  0% {\n    transform: rotateZ(0);\n  }\n  100% {\n    transform: rotateZ(360deg);\n  }\n}",
        "js": ""
      },
      {
        "id": 47,
        "author": "VanBao",
        "type": "3D",
        "title": "Interactive 3D Crystal Sphere with Glowing Effects",
        "html": "<div class='crystal-sphere'><div class='core'></div><div class='crystal-ring'></div></div>",
        "css": ".crystal-sphere {\n  width: 300px;\n  height: 300px;\n  position: relative;\n  margin: 100px auto;\n  perspective: 1500px;\n  animation: rotateCrystal 10s linear infinite;\n}\n\n.crystal-ring {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  border: 4px solid rgba(124, 58, 237, 0.8);\n  border-radius: 50%;\n  box-shadow: 0 0 60px rgba(124, 58, 237, 0.6), 0 0 30px rgba(255, 0, 204, 0.4);\n  animation: rotateRing 6s linear infinite;\n  transform-origin: center;\n}\n\n.crystal-ring:hover {\n  box-shadow: 0 0 80px rgba(124, 58, 237, 1), 0 0 40px rgba(255, 0, 204, 0.8);\n  transform: scale(1.05);\n}\n\n.core {\n  position: absolute;\n  top: 25%;\n  left: 25%;\n  width: 50%;\n  height: 50%;\n  background: radial-gradient(circle, #7c3aed, #4c1d95);\n  border-radius: 50%;\n  box-shadow: 0 0 60px #7c3aed, 0 0 40px #ff00b3;\n  transition: box-shadow 0.3s ease-in-out;\n}\n\n.crystal-sphere:hover .core {\n  box-shadow: 0 0 100px #7c3aed, 0 0 60px #ff00b3;\n}\n\n@keyframes rotateCrystal {\n  0% { transform: rotateX(0deg) rotateY(0deg); }\n  100% { transform: rotateX(360deg) rotateY(360deg); }\n}\n\n@keyframes rotateRing {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}",
        "js": "const sphere = document.querySelector('.crystal-sphere');\nconst core = document.querySelector('.core');\n\n// Add mouse move effect to increase glow based on mouse position\nsphere.addEventListener('mousemove', (e) => {\n  const x = e.clientX / window.innerWidth;\n  const y = e.clientY / window.innerHeight;\n  const lightStrength = (x + y) * 100;\n  core.style.boxShadow = `0 0 ${lightStrength}px #7c3aed, 0 0 ${lightStrength / 2}px #ff00b3`;\n});\n\n// Reset glow on mouse leave\nsphere.addEventListener('mouseleave', () => {\n  core.style.boxShadow = '0 0 60px #7c3aed, 0 0 40px #ff00b3';\n});"
      },
      {
        "id": 48,
        "author": "VanBao",
        "type": "3D",
        "title": "Double Rotating Cubes",
        "html": "<div class='tesseract'><div class='cube outer'></div><div class='cube inner'></div></div>",
        "css": ".tesseract { width: 220px; height: 220px; margin: 50px auto; perspective: 1200px; position: relative; } .cube { position: absolute; width: 100%; height: 100%; border: 3px solid #7c3aed; border-radius: 20px; box-shadow: 0 0 30px #7c3aed; background: rgba(124,58,237,0.15); transform-style: preserve-3d; animation: rotateCube 12s linear infinite; } .inner { width: 50%; height: 50%; top: 25%; left: 25%; opacity: 0.6; animation-duration: 18s; } .outer { animation-duration: 12s; } @keyframes rotateCube { 0% { transform: rotateX(0) rotateY(0); } 100% { transform: rotateX(360deg) rotateY(360deg); } }",
        "js": ""
      },
      {
        "id": 49,
        "author": "VanBao",
        "type": "3D",
        "title": "Rotating Rings",
        "html": "<div class='rings'><div class='ring' style='--i:1'></div><div class='ring' style='--i:2'></div><div class='ring' style='--i:3'></div><div class='core'></div></div>",
        "css": ".rings { width: 300px; height: 300px; margin: 50px auto; perspective: 1200px; position: relative; transform-style: preserve-3d; animation: spinRings 12s linear infinite; } .ring { position: absolute; border: 3px solid #7c3aed; border-radius: 50%; top: 50%; left: 50%; box-shadow: 0 0 20px #7c3aed; transform: translate(-50%, -50%) rotateX(calc(var(--i) * 60deg)); } .ring:nth-child(1) { width: 120px; height: 120px; } .ring:nth-child(2) { width: 220px; height: 220px; } .ring:nth-child(3) { width: 320px; height: 320px; } .core { position: absolute; width: 60px; height: 60px; background: radial-gradient(circle, #7c3aed, #4c1d95); border-radius: 50%; top: 50%; left: 50%; transform: translate(-50%, -50%); box-shadow: 0 0 80px #7c3aed; } @keyframes spinRings { 0% { transform: rotateX(0) rotateY(0); } 100% { transform: rotateX(360deg) rotateY(360deg); } }",
        "js": ""
      },
      {
        "id": 50,
        "author": "VanBao",
        "type": "3D",
        "title": "Rotating Cube Loader",
        "html": "<div class='loader-cube'><div class='face front'></div><div class='face back'></div><div class='face right'></div><div class='face left'></div><div class='face top'></div><div class='face bottom'></div></div>",
        "css": ".loader-cube { width: 100px; height: 100px; margin: 60px auto; perspective: 800px; position: relative; animation: loaderSpin 2.5s linear infinite; } .face { position: absolute; width: 100px; height: 100px; background: linear-gradient(135deg, #fc5c7d, #6a82fb); border-radius: 10px; box-shadow: 0 0 20px rgba(252,92,125,0.7); } .front { transform: translateZ(50px); } .back { transform: rotateY(180deg) translateZ(50px); } .right { transform: rotateY(90deg) translateZ(50px); } .left { transform: rotateY(-90deg) translateZ(50px); } .top { transform: rotateX(90deg) translateZ(50px); } .bottom { transform: rotateX(-90deg) translateZ(50px); } @keyframes loaderSpin { 0% { transform: rotateX(0) rotateY(0); } 100% { transform: rotateX(360deg) rotateY(360deg); } }",
        "js": ""
      },
      {
        "id": 51,
        "author": "VanBao",
        "type": "3D",
        "title": "3D Sliding Doors",
        "html": "<div class='doors'><div class='door left'>Left</div><div class='door right'>Right</div></div>",
        "css": ".doors { width: 320px; height: 200px; margin: 60px auto; perspective: 1200px; position: relative; } .door { width: 160px; height: 100%; position: absolute; top: 0; background: linear-gradient(45deg, #ff416c, #ff4b2b); color: white; font-weight: 700; font-size: 2rem; display: flex; justify-content: center; align-items: center; border-radius: 15px; transition: transform 0.7s ease; cursor: pointer; } .door.left { left: 0; border-top-right-radius: 0; border-bottom-right-radius: 0; } .door.right { right: 0; border-top-left-radius: 0; border-bottom-left-radius: 0; } .doors:hover .door.left { transform: translateX(-50%) rotateY(15deg); } .doors:hover .door.right { transform: translateX(50%) rotateY(-15deg); }",
        "js": ""
      },
      
      {
        "id": 52,
        "author": "VanBao",
        "type": "3D",
        "title": "3D Galaxy",
        "html": "<div class='galaxy-container'><canvas id='galaxyCanvas'></canvas></div>",
        "css": ".galaxy-container { perspective: 1200px; width: 400px; height: 400px; background: #000; margin: auto; border-radius: 20px; overflow: hidden; box-shadow: 0 15px 30px rgba(0,0,0,0.7); } canvas { width: 100%; height: 100%; display: block; }",
        "js": "const canvas = document.getElementById('galaxyCanvas'); const ctx = canvas.getContext('2d'); const stars = []; class Star { constructor() { this.x = Math.random() * canvas.width - canvas.width/2; this.y = Math.random() * canvas.height - canvas.height/2; this.z = Math.random() * 1000; this.speed = 2; } update() { this.z -= this.speed; if (this.z <= 0) { this.z = 1000; this.x = Math.random() * canvas.width - canvas.width/2; this.y = Math.random() * canvas.height - canvas.height/2; } } draw() { const x = this.x/(this.z/1000) + canvas.width/2; const y = this.y/(this.z/1000) + canvas.height/2; const size = (1000 - this.z)/30; ctx.beginPath(); ctx.arc(x, y, size, 0, Math.PI * 2); ctx.fillStyle = '#4f46e5'; ctx.fill(); } } for(let i = 0; i < 200; i++) { stars.push(new Star()); } function animate() { ctx.fillStyle = 'rgba(0,0,0,0.1)'; ctx.fillRect(0, 0, canvas.width, canvas.height); stars.forEach(star => { star.update(); star.draw(); }); requestAnimationFrame(animate); } animate();"
      },
      
      {
        "id": 53,
        "author": "VanBao",
        "type": "3D",
        "title": "Energy Vortex Canvas",
        "html": "<canvas id='vortex'></canvas>",
        "css": "canvas#vortex { display: block; margin: 50px auto; width: 400px; height: 400px; background: black; border-radius: 20px; box-shadow: 0 15px 40px rgba(0,0,0,0.8); }",
        "js": "const canvasV=document.getElementById('vortex');const ctxV=canvasV.getContext('2d');canvasV.width=400;canvasV.height=400;class Particle{constructor(){this.angle=Math.random()*2*Math.PI;this.radius=Math.random()*100+50;this.speed=0.03;}update(){this.angle+=this.speed;this.x=canvasV.width/2+Math.cos(this.angle)*this.radius;this.y=canvasV.height/2+Math.sin(this.angle)*this.radius;this.radius-=0.1;if(this.radius<0){this.radius=150;}}draw(){ctxV.beginPath();ctxV.arc(this.x,this.y,2,0,2*Math.PI);ctxV.fillStyle='#7c3aed';ctxV.fill();}}const particlesV=[];for(let i=0;i<120;i++){particlesV.push(new Particle());}function animateV(){ctxV.fillStyle='rgba(0,0,0,0.2)';ctxV.fillRect(0,0,canvasV.width,canvasV.height);particlesV.forEach(p=>{p.update();p.draw();});requestAnimationFrame(animateV);}animateV();"
      },
      
      {
        "id": 54,
        "author": "VanBao",
        "type": "3D",
        "title": "Nebula Particle Field",
        "html": "<canvas id='nebula'></canvas>",
        "css": "canvas#nebula { display: block; margin: 50px auto; width: 400px; height: 400px; border-radius: 20px; background: #0b0c10; box-shadow: 0 15px 40px rgba(0,0,0,0.9); }",
        "js": "const canvasN=document.getElementById('nebula');const ctxN=canvasN.getContext('2d');canvasN.width=400;canvasN.height=400;class ParticleN{constructor(){this.x=Math.random()*canvasN.width;this.y=Math.random()*canvasN.height;this.size=Math.random()*3;this.speedX=(Math.random()-0.5)*1.5;this.speedY=(Math.random()-0.5)*1.5;this.color=`hsl(${Math.random()*60+240},100%,50%)`;}update(){this.x+=this.speedX;this.y+=this.speedY;if(this.x>canvasN.width||this.x<0)this.speedX*=-1;if(this.y>canvasN.height||this.y<0)this.speedY*=-1;}draw(){ctxN.beginPath();ctxN.arc(this.x,this.y,this.size,0,2*Math.PI);ctxN.fillStyle=this.color;ctxN.fill();ctxN.shadowColor=this.color;ctxN.shadowBlur=15;} }const particlesN=[];for(let i=0;i<120;i++){particlesN.push(new ParticleN());}function animateN(){ctxN.fillStyle='rgba(11,12,16,0.2)';ctxN.fillRect(0,0,canvasN.width,canvasN.height);particlesN.forEach(p=>{p.update();p.draw();});requestAnimationFrame(animateN);}animateN();"
      },
      {
        "id": 55,
        "author": "Thanh Tự",
        "type": "3D",
        "title": "Khối lập phương xoay tự động và thay đổi độ trong suốt",
        "html": "<div class='cube19'> <div class='face front'>Opacity</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": ".cube19 { width: 150px; height: 150px; margin: 50px auto; position: relative; transform-style: preserve-3d; animation: rotateFade 10s linear infinite; } .face { position: absolute; width: 150px; height: 150px; background: rgba(255, 0, 0, 0.8); border: 2px solid #800000; color: white; font-weight: bold; font-size: 20px; line-height: 150px; text-align: center; } .front { transform: translateZ(75px); } .back { transform: rotateY(180deg) translateZ(75px); } .right { transform: rotateY(90deg) translateZ(75px); } .left { transform: rotateY(-90deg) translateZ(75px); } .top { transform: rotateX(90deg) translateZ(75px); } .bottom { transform: rotateX(-90deg) translateZ(75px); } @keyframes rotateFade { 0% { transform: rotateX(0deg) rotateY(0deg); opacity: 1; } 50% { opacity: 0.3; } 100% { transform: rotateX(360deg) rotateY(360deg); opacity: 1; } }",
        "js": ""
      },
      {
        "id": 56,
        "author": "Thanh Tự",
        "type": "3D",
        "title": "Khối lập phương có đèn sáng phía trước và bóng dưới",
        "html": "<div class='cube13'> <div class='face front'>Lighted</div> <div class='face back'>Back</div> <div class='face right'>Right</div> <div class='face left'>Left</div> <div class='face top'>Top</div> <div class='face bottom'>Bottom</div> </div>",
        "css": ".cube13 { width: 140px; height: 140px; margin: 50px auto; position: relative; transform-style: preserve-3d; animation: spinAndLight 8s linear infinite; filter: drop-shadow(0 10px 10px rgba(0,0,0,0.5)); } .face { position: absolute; width: 140px; height: 140px; background: linear-gradient(135deg, #ff9966 0%, #ff5e62 100%); border: 2px solid #cc4d4d; color: white; font-weight: bold; font-size: 20px; line-height: 140px; text-align: center; box-shadow: 0 0 15px rgba(255, 94, 98, 0.7); } .front { transform: translateZ(70px); } .back { transform: rotateY(180deg) translateZ(70px); } .right { transform: rotateY(90deg) translateZ(70px); } .left { transform: rotateY(-90deg) translateZ(70px); } .top { transform: rotateX(90deg) translateZ(70px); } .bottom { transform: rotateX(-90deg) translateZ(70px); } @keyframes spinAndLight { 0% { transform: rotateX(0deg) rotateY(0deg) translateZ(0); } 50% { filter: drop-shadow(0 20px 20px rgba(255,0,0,0.8)); } 100% { transform: rotateX(360deg) rotateY(360deg) translateZ(0); } }",
        "js": ""
      },
      {
        "id": 57,
        "author": "Thanh Tự",
        "type": "3D",
        "title": "Hiệu ứng bọt nổi 3D",
        "html": "<div id='bubbles' style='position: relative; width: 300px; height: 300px; margin: 100px auto; perspective: 800px; background: #111; border-radius: 20px; overflow: hidden;'></div>",
        "css": ".bubble { position: absolute; width: 30px; height: 30px; background: radial-gradient(circle, #1091b9 60%, transparent 100%); border-radius: 50%; filter: drop-shadow(0 0 5px #f0ecf2); opacity: 0.8; transform-style: preserve-3d; }",
        "js": "const container = document.getElementById('bubbles'); const bubbleCount = 15; let bubbles = []; for(let i=0; i < bubbleCount; i++) { const bubble = document.createElement('div'); bubble.className = 'bubble'; bubble.style.left = `${Math.random() * 270}px`; bubble.style.bottom = `${-30 - Math.random() * 100}px`; bubble.style.transform = `translateZ(${Math.random() * 200}px)`; container.appendChild(bubble); bubbles.push({ el: bubble, x: parseFloat(bubble.style.left), z: Math.random() * 200, speed: 0.5 + Math.random(), y: -30 - Math.random() * 100 }); } function animateBubbles() { bubbles.forEach(b => { b.y += b.speed; if(b.y > 330) { b.y = -30; b.x = Math.random() * 270; b.z = Math.random() * 200; } b.el.style.bottom = `${b.y}px`; b.el.style.left = `${b.x}px`; b.el.style.transform = `translateZ(${b.z}px)`; }); requestAnimationFrame(animateBubbles); } animateBubbles();"
      }
    ]
  },
  {
    "category": "loading",
    "effects": [
      {
        "id": 1,
        "author": "Phan Vĩnh",
        "type": "The Spinner",
        "title": "",
        "html": "<div class='spinner-1'></div>",
        "css": ".spinner-1 { width: 50px; aspect-ratio: 1; border-radius: 50%; border: 8px solid; border-color: #000 #0000; animation: s1 1s infinite; } @keyframes s1 {to{transform: rotate(.5turn)}}",
        "js": ""
      },
      {
        "id": 2,
        "author": "Phan Vĩnh",
        "type": "The Spinner",
        "title": "",
        "html": "<div class='spinner-2'></div>",
        "css": ".spinner-2 { width: 50px; aspect-ratio: 1; border-radius: 50%; border: 8px solid lightblue; border-right-color: orange; animation: s2 1s infinite linear; } @keyframes s2 {to{transform: rotate(1turn)}}",
        "js": ""
      },
      {
        "id": 3,
        "author": "Phan Vĩnh",
        "type": "The Spinner",
        "title": "",
        "html": "<div class='spinner-3'></div>",
        "css": ".spinner-3 { width: 50px; padding: 8px; aspect-ratio: 1; border-radius: 50%; background: #25b09b; --_m: conic-gradient(#0000 10%,#000), linear-gradient(#000 0 0) content-box; -webkit-mask: var(--_m); mask: var(--_m); -webkit-mask-composite: source-out; mask-composite: subtract; animation: s3 1s infinite linear; } @keyframes s3 {to{transform: rotate(1turn)}}",
        "js": ""
      },
      {
        "id": 4,
        "author": "Phan Vĩnh",
        "type": "The Spinner",
        "title": "",
        "html": "<div class='spinner-4'></div>",
        "css": ".spinner-4 { width: 50px; --b: 8px; /* the border thickness */ aspect-ratio: 1; border-radius: 50%; padding: 1px; background: conic-gradient(#0000 10%,#f03355) content-box; -webkit-mask: repeating-conic-gradient(#0000 0deg,#000 1deg 20deg,#0000 21deg 36deg), radial-gradient(farthest-side,#0000 calc(100% - var(--b) - 1px),#000 calc(100% - var(--b))); -webkit-mask-composite: destination-in; mask-composite: intersect; animation:s4 1s infinite steps(10); } @keyframes s4 {to{transform: rotate(1turn)}}",
        "js": ""
      },
      {
        "id": 5,
        "author": "Phan Vĩnh",
        "type": "The Spinner",
        "title": "",
        "html": "<div class='spinner-5'></div>",
        "css": ".spinner-5 { width: 50px; --b: 8px; /* the border thickness */ aspect-ratio: 1; border-radius: 50%; background: #514b82; -webkit-mask: repeating-conic-gradient(#0000 0deg,#000 1deg 70deg,#0000 71deg 90deg), radial-gradient(farthest-side,#0000 calc(100% - var(--b) - 1px),#000 calc(100% - var(--b))); -webkit-mask-composite: destination-in; mask-composite: intersect; animation: s5 1s infinite; } @keyframes s5 {to{transform: rotate(.5turn)}}",
        "js": ""
      },
      {
        "id": 6,
        "author": "Phan Vĩnh",
        "type": "The Spinner",
        "title": "",
        "html": "<div class='spinner-6'></div>",
        "css": ".spinner-6 { width: 50px; aspect-ratio: 1; border-radius: 50%; padding: 3px; background: radial-gradient(farthest-side,#ffa516 95%,#0000) 50% 0/12px 12px no-repeat, radial-gradient(farthest-side,#0000 calc(100% - 5px),#ffa516 calc(100% - 4px)) content-box; animation: s6 2s infinite ; } @keyframes s6 {to{transform: rotate(1turn)}}",
        "js": ""
      },
      {
        "id": 7,
        "author": "Phan Vĩnh",
        "type": "The Spinner",
        "title": "",
        "html": "<div class='spinner-7'></div>",
        "css": ".spinner-7 { width: 50px; aspect-ratio: 1; --_c: radial-gradient(farthest-side,#25b09b 92%,#0000); background: var(--_c) top, var(--_c) left, var(--_c) right, var(--_c) bottom; background-size: 12px 12px; background-repeat: no-repeat; animation: s7 1s infinite; } @keyframes s7 {to{transform: rotate(.5turn)}}",
        "js": ""
      },
      {
        "id": 8,
        "author": "Phan Vĩnh",
        "type": "The Spinner",
        "title": "",
        "html": "<div class='spinner-8'></div>",
        "css": ".spinner-8 { width: 50px; aspect-ratio: 1; color: #f03355; --_c: no-repeat radial-gradient(farthest-side,currentColor 92%,#0000); background: var(--_c) 50% 0   /12px 12px, var(--_c) 50% 100%/12px 12px, var(--_c) 100% 50%/12px 12px, var(--_c) 0    50%/12px 12px, var(--_c) 50%  50%/12px 12px, conic-gradient(from 90deg at 4px 4px,#0000 90deg,currentColor 0) -4px -4px/calc(50% + 2px) calc(50% + 2px); animation: s8 1s infinite linear; } @keyframes s8 {to{transform: rotate(.5turn)}}",
        "js": ""
      },
      {
        "id": 9,
        "author": "Phan Vĩnh",
        "type": "The Spinner",
        "title": "",
        "html": "<div class='spinner-9'></div>",
        "css": ".spinner-9 { width: 50px; aspect-ratio: 1; border-radius: 50%; background: radial-gradient(farthest-side,#f03355 95%,#0000) 50% 1px/12px 12px no-repeat, radial-gradient(farthest-side,#0000 calc(100% - 14px),#ccc 0); animation: s9 2s infinite linear; } @keyframes s9 {to{transform: rotate(1turn)}}",
        "js": ""
      },
      {
        "id": 10,
        "author": "Phan Vĩnh",
        "type": "The Spinner",
        "title": "",
        "html": "<div class='spinner-10'></div>",
        "css": ".spinner-10 { width: 50px; aspect-ratio: 1; color: #854f1d; border-radius: 50%; display: grid; background: conic-gradient(from 90deg at 4px 4px,#0000 90deg,currentColor 0) -4px -4px/calc(50% + 2px) calc(50% + 2px), radial-gradient(farthest-side,currentColor 6px,#0000 7px calc(100% - 6px),currentColor calc(100% - 5px)) no-repeat; animation: s10 2s infinite linear; position: relative; } .spinner-10:before { content: ''; border-radius: inherit; background: inherit; transform: rotate(45deg); } @keyframes s10 {to{transform: rotate(.5turn)}}",
        "js": ""
      },
      {
        "id": 11,
        "author": "Phan Vĩnh",
        "type": "The Shapes",
        "title": "",
        "html": "<div class='shapes-1'></div>",
        "css": ".shapes-1 { width: 40px; height: 40px; border-radius: 50%; background:#f03355; clip-path: polygon(0 0,100% 0,100% 100%,0 100%); animation: sh1 2s infinite cubic-bezier(0.3,1,0,1); } @keyframes sh1 { 33% {border-radius: 0;background:#514b82 ;clip-path: polygon(0 0,100% 0,100% 100%,0 100%)} 66% {border-radius: 0;background:#ffa516 ;clip-path: polygon(50% 0,50% 0,100% 100%,0 100%)} }",
        "js": ""
      },
      {
        "id": 12,
        "author": "Phan Vĩnh",
        "type": "The Shapes",
        "title": "",
        "html": "<div class='shapes-2'></div>",
        "css": ".shapes-2 { width: 40px; height: 40px; background:#25b09b; clip-path: polygon(0 0,100% 0,100% 100%); animation: sh2 2s infinite cubic-bezier(0.3,1,0,1); } @keyframes sh2 { 25%  {clip-path: polygon(0    0,100% 0   ,0 100%)} 50%  {clip-path: polygon(0    0,100% 100%,0 100%)} 75%  {clip-path: polygon(100% 0,100% 100%,0 100%)} 100% {clip-path: polygon(100% 0,100% 100%,0 0   )} }",
        "js": ""
      },
      {
        "id": 13,
        "author": "Phan Vĩnh",
        "type": "The Shapes",
        "title": "",
        "html": "<div class='shapes-3'></div>",
        "css": ".shapes-3 { width: 50px; height: 50px; display: flex; transform:rotate(45deg); animation: sh3-0 1.5s infinite linear; } .shapes-3:before, .shapes-3:after { content: ''; width:50%; background:#514b82; clip-path: polygon(0 50%,100% 0,100% 100%); animation: inherit; animation-name: sh3-1; } .shapes-3:after { clip-path: polygon(0 0,100% 50%,0% 100%); animation-name: sh3-2; } @keyframes sh3-0 { 25% {width:50px;height:50px;transform:rotate(0)} 50% {width:50px;height:50px} 75% {width:70.70px;height:35.35px} 100%{width:70.70px;height:35.35px;transform:rotate(0)} } @keyframes sh3-1 { 0%,25% {clip-path: polygon(0 50% ,100% 0,100% 100%);transform:translate(0.3px)} 50%    {clip-path: polygon(0 50% ,100% 0,100% 100%);transform:translate(-5px)} 75%    {clip-path: polygon(0 100%,0    0,100% 100%);transform:translate(-5px)} 100%   {clip-path: polygon(0 100%,0    0,100% 100%);transform:translate(17.7px)} } @keyframes sh3-2 { 0%,25% {clip-path: polygon(0 0,100% 50%,0    100%);transform:translate(-0.3px) } 50%    {clip-path: polygon(0 0,100% 50%,0    100%);transform:translate(5px) } 75%    {clip-path: polygon(0 0,100% 0  ,100% 100%);transform:translate(5px)} 100%   {clip-path: polygon(0 0,100% 0  ,100% 100%);transform:translate(-17.7px) } }",
        "js": ""
      },
      {
        "id": 14,
        "author": "Phan Vĩnh",
        "type": "The Shapes",
        "title": "",
        "html": "<div class='shapes-4'></div>",
        "css": ".shapes-4 { width: 40px; height: 40px; color:#f03355; background: conic-gradient(from  -45deg at top    20px left 50% ,#0000 ,currentColor 1deg 90deg,#0000 91deg), conic-gradient(from   45deg at right  20px top  50% ,#0000 ,currentColor 1deg 90deg,#0000 91deg), conic-gradient(from  135deg at bottom 20px left 50% ,#0000 ,currentColor 1deg 90deg,#0000 91deg), conic-gradient(from -135deg at left   20px top  50% ,#0000 ,currentColor 1deg 90deg,#0000 91deg); animation: sh4 1.5s infinite cubic-bezier(0.3,1,0,1); } @keyframes sh4 { 50%  {width:60px;height: 60px;transform: rotate(180deg)} 100% {transform: rotate(360deg)} }",
        "js": ""
      },
      {
        "id": 15,
        "author": "Phan Vĩnh",
        "type": "The Shapes",
        "title": "",
        "html": "<div class='shapes-5'></div>",
        "css": ".shapes-5 { width: 40px; height: 40px; color:orange; background: linear-gradient(currentColor 0 0), linear-gradient(currentColor 0 0), linear-gradient(currentColor 0 0), linear-gradient(currentColor 0 0); background-size: 21px 21px; background-repeat:no-repeat; animation: sh5 1.5s infinite cubic-bezier(0.3,1,0,1); } @keyframes sh5 { 0%   {background-position: 0    0,100% 0   ,100% 100%,0 100%} 33%  {background-position: 0    0,100% 0   ,100% 100%,0 100%;width:60px;height: 60px} 66%  {background-position: 100% 0,100% 100%,0    100%,0 0   ;width:60px;height: 60px} 100% {background-position: 100% 0,100% 100%,0    100%,0 0   } }",
        "js": ""
      },
      {
        "id": 16,
        "author": "Phan Vĩnh",
        "type": "The Shapes",
        "title": "",
        "html": "<div class='shapes-6'></div>",
        "css": ".shapes-6 { width: 40px; height: 40px; display: grid; animation: sh6-0 1.5s infinite linear; } .shapes-6:before, .shapes-6:after { content: ''; grid-area: 1/1; background:#514b82; animation: sh6-1 1.5s infinite linear, sh6-2 1.5s infinite linear; } .shapes-6:after { --s:-1; animation-direction: reverse; } @keyframes sh6-0 { 0%,9%,91%,100% {background:#514b82} 10%,90%        {background:#0000} } @keyframes sh6-1 { 0%,33%   {clip-path: polygon(0   0,50% 100%,100% 0,100% 100%,0 100%)} 66%,100% {clip-path: polygon(50% 0,50% 100%,50%  0,100% 100%,0 100%)} } @keyframes sh6-2 { 0%,10%,90%,100% {transform: scale(var(--s,1)) translateY(0)} 33%,66%         {transform: scale(var(--s,1)) translateY(50%)} }",
        "js": ""
      },
      {
        "id": 17,
        "author": "Phan Vĩnh",
        "type": "The Shapes",
        "title": "",
        "html": "<div class='shapes-7'></div>",
        "css": ".shapes-7 { width: 40px; height: 40px; color:#f03355; position: relative; background: conic-gradient(from 134deg at top   ,currentColor 92deg,#0000 0) top, conic-gradient(from -46deg at bottom,currentColor 92deg,#0000 0) bottom; background-size:100% 50%; background-repeat: no-repeat; } .shapes-7:before { content:''; position: absolute; inset: 0; --g:currentColor 14.5px,#0000 0 calc(100% - 14.5px),currentColor 0; background: linear-gradient( 45deg,var(--g)), linear-gradient(-45deg,var(--g)); animation: sh7 1.5s infinite cubic-bezier(0.3,1,0,1); } @keyframes sh7 { 33%  {inset:-10px;transform: rotate(0deg)} 66%  {inset:-10px;transform: rotate(90deg)} 100% {inset:0    ;transform: rotate(90deg)} }",
        "js": ""
      },
      {
        "id": 18,
        "author": "Phan Vĩnh",
        "type": "The Shapes",
        "title": "",
        "html": "<div class='shapes-8'></div>",
        "css": ".shapes-8 { width: 40px; height: 40px; display: grid; animation: sh8-0 1.5s infinite linear; } .shapes-8:before, .shapes-8:after { content: ''; grid-area: 1/1; background:#25b09b; clip-path: polygon(0 0%,100% 0,100% 100%); animation: inherit; animation-name: sh8-1; } .shapes-8:after { --s:-1; } @keyframes sh8-0 { 66%      {transform: skewX(0deg)} 80%,100% {transform: skewX(-45deg)} } @keyframes sh8-1 { 0%   {transform:scale(var(--s,1)) translate(-0.5px,0)} 33%  {transform:scale(var(--s,1)) translate(calc(1px - 50%),calc(1px - 50%))} 66%  {transform:scale(var(--s,1)) translate(calc(1px - 50%),0%)} 100% {transform:scale(var(--s,1)) translate(calc(0.5px - 50%),0%)} }",
        "js": ""
      },
      {
        "id": 19,
        "author": "Phan Vĩnh",
        "type": "The Shapes",
        "title": "",
        "html": "<div class='shapes-9'></div>",
        "css": ".shapes-9 { width: 40px; height: 20px; background:orange; position: relative; animation: sh9-0 1.5s infinite linear; } .shapes-9:before, .shapes-9:after { content:''; position: absolute; background:inherit; bottom: 100%; width: 50%; height: 100%; animation: inherit; animation-name: sh9-1; } .shapes-9:before { left:0; transform-origin: bottom left; --s:-1; } .shapes-9:after { right:0; transform-origin: bottom right; } @keyframes sh9-0 { 0%,10%   {transform:translateY(0%)    scaleY(1)} 49.99%   {transform:translateY(-50%)  scaleY(1)} 50%      {transform:translateY(-50%)  scaleY(-1)} 90%,100% {transform:translateY(-100%) scaleY(-1)} } @keyframes sh9-1 { 10%,90% {transform: rotate(0deg)} 50%     {transform: rotate(calc(var(--s,1)*180deg))} }",
        "js": ""
      },
      {
        "id": 20,
        "author": "Phan Vĩnh",
        "type": "The Shapes",
        "title": "",
        "html": "<div class='shapes-10'></div>",
        "css": ".shapes-10 { display: flex; width:50px; height:50px; animation: sh10-0 1.5s infinite linear; } .shapes-10:before, .shapes-10:after { content: ''; width:50%; background:#514b82; clip-path: polygon(0 0,100% 50%,0% 100%); animation: inherit; animation-name: sh10-1; transform-origin: bottom left; } .shapes-10:before { clip-path: polygon(0 50%,100% 0,100% 100%); transform-origin: bottom right; --s:-1; } @keyframes sh10-0 { 0%,34.99% {transform: scaley(1)} 35%,70%   {transform: scaley(-1)} 90%,100%  {transform: scaley(-1) rotate(180deg)} } @keyframes sh10-1 { 0%,10%,70%,100%{transform:translateY(-100%) rotate(calc(var(--s,1)*135deg))} 35%            {transform:translateY(0%)    rotate(0deg)} }",
        "js": ""
      }
    ]
  }
]